// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.Text;
using Silk.NET.Core;
using Silk.NET.Core.Native;
using Silk.NET.Core.Attributes;
using Silk.NET.Core.Contexts;
using Silk.NET.Core.Loader;

#pragma warning disable 1591

namespace Silk.NET.Core.Win32Extras
{
    public static class WindowsOverloads
    {
        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 44, Column 1 in fileapi.h")]
        public static unsafe int CompareFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpFileTime1, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpFileTime2)
        {
            // SpanOverloader
            return thisApi.CompareFileTime(lpFileTime1, in lpFileTime2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 44, Column 1 in fileapi.h")]
        public static unsafe int CompareFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpFileTime1, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpFileTime2)
        {
            // SpanOverloader
            return thisApi.CompareFileTime(in lpFileTime1.GetPinnableReference(), lpFileTime2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 44, Column 1 in fileapi.h")]
        public static unsafe int CompareFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpFileTime1, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpFileTime2)
        {
            // SpanOverloader
            return thisApi.CompareFileTime(in lpFileTime1.GetPinnableReference(), in lpFileTime2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 52, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPathName, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryA(lpPathName, ref lpSecurityAttributes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 52, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryA(in lpPathName.GetPinnableReference(), lpSecurityAttributes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 52, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryA(in lpPathName.GetPinnableReference(), ref lpSecurityAttributes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 52, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPathName, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryA(lpPathName, ref lpSecurityAttributes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 60, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPathName, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryW(lpPathName, ref lpSecurityAttributes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 60, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryW(in lpPathName.GetPinnableReference(), lpSecurityAttributes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 60, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryW(in lpPathName.GetPinnableReference(), ref lpSecurityAttributes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 60, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CreateDirectoryW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPathName, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes)
        {
            // SpanOverloader
            return thisApi.CreateDirectoryW(lpPathName, ref lpSecurityAttributes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileA(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileA(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileA(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileA(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileA(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileA(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileA(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileA(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileA(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileA(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileW(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileW(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileW(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileW(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileW(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileW(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileW(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwDesiredAccess, uint dwShareMode, Silk.NET.Core.Native.SecurityAttributes* lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileW(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, void* hTemplateFile)
        {
            // SpanOverloader
            return thisApi.CreateFileW(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 92, Column 1 in fileapi.h")]
        public static unsafe void* CreateFileW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwDesiredAccess, uint dwShareMode, Span<Silk.NET.Core.Native.SecurityAttributes> lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, Span<T0> hTemplateFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateFileW(lpFileName, dwDesiredAccess, dwShareMode, ref lpSecurityAttributes.GetPinnableReference(), dwCreationDisposition, dwFlagsAndAttributes, ref hTemplateFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 116, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DefineDosDeviceW(this Windows thisApi, uint dwFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDeviceName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpTargetPath)
        {
            // SpanOverloader
            return thisApi.DefineDosDeviceW(dwFlags, lpDeviceName, in lpTargetPath.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 116, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DefineDosDeviceW(this Windows thisApi, uint dwFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDeviceName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpTargetPath)
        {
            // SpanOverloader
            return thisApi.DefineDosDeviceW(dwFlags, in lpDeviceName.GetPinnableReference(), lpTargetPath);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 116, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DefineDosDeviceW(this Windows thisApi, uint dwFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDeviceName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpTargetPath)
        {
            // SpanOverloader
            return thisApi.DefineDosDeviceW(dwFlags, in lpDeviceName.GetPinnableReference(), in lpTargetPath.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 116, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DefineDosDeviceW(this Windows thisApi, uint dwFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDeviceName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpTargetPath)
        {
            // SpanOverloader
            return thisApi.DefineDosDeviceW(dwFlags, in lpDeviceName.GetPinnableReference(), lpTargetPath);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 116, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DefineDosDeviceW(this Windows thisApi, uint dwFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDeviceName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpTargetPath)
        {
            // SpanOverloader
            return thisApi.DefineDosDeviceW(dwFlags, lpDeviceName, in lpTargetPath.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 135, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DeleteFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName)
        {
            // SpanOverloader
            return thisApi.DeleteFileA(in lpFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 142, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DeleteFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName)
        {
            // SpanOverloader
            return thisApi.DeleteFileW(in lpFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 160, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DeleteVolumeMountPointW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeMountPoint)
        {
            // SpanOverloader
            return thisApi.DeleteVolumeMountPointW(in lpszVolumeMountPoint.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 177, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FileTimeToLocalFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpFileTime, Span<Filetime> lpLocalFileTime)
        {
            // SpanOverloader
            return thisApi.FileTimeToLocalFileTime(lpFileTime, ref lpLocalFileTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 177, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FileTimeToLocalFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpFileTime, Filetime* lpLocalFileTime)
        {
            // SpanOverloader
            return thisApi.FileTimeToLocalFileTime(in lpFileTime.GetPinnableReference(), lpLocalFileTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 177, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FileTimeToLocalFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpFileTime, Span<Filetime> lpLocalFileTime)
        {
            // SpanOverloader
            return thisApi.FileTimeToLocalFileTime(in lpFileTime.GetPinnableReference(), ref lpLocalFileTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 191, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindClose<T0>(this Windows thisApi, Span<T0> hFindFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindClose(ref hFindFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 204, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindCloseChangeNotification<T0>(this Windows thisApi, Span<T0> hChangeHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindCloseChangeNotification(ref hChangeHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 211, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstChangeNotificationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, Silk.NET.Core.Bool32 bWatchSubtree, uint dwNotifyFilter)
        {
            // SpanOverloader
            return thisApi.FindFirstChangeNotificationA(in lpPathName.GetPinnableReference(), bWatchSubtree, dwNotifyFilter);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 220, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstChangeNotificationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, Silk.NET.Core.Bool32 bWatchSubtree, uint dwNotifyFilter)
        {
            // SpanOverloader
            return thisApi.FindFirstChangeNotificationW(in lpPathName.GetPinnableReference(), bWatchSubtree, dwNotifyFilter);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, Span<Win32FindDataa> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileA(lpFileName, ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, Win32FindDataa* lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileA(in lpFileName.GetPinnableReference(), lpFindFileData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, Span<Win32FindDataa> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileA(in lpFileName.GetPinnableReference(), ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 240, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, Span<Win32FindDataa> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileA(lpFileName, ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 248, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, Span<Win32FindDataw> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileW(lpFileName, ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 248, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, Win32FindDataw* lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileW(in lpFileName.GetPinnableReference(), lpFindFileData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 248, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, Span<Win32FindDataw> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileW(in lpFileName.GetPinnableReference(), ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 248, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, Span<Win32FindDataw> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindFirstFileW(lpFileName, ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, Span<T0> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(lpFileName, fInfoLevelId, lpFindFileData, fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0, T1>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, Span<T1> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags)
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(in lpFileName.GetPinnableReference(), fInfoLevelId, lpFindFileData, fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, Span<T0> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(in lpFileName.GetPinnableReference(), fInfoLevelId, lpFindFileData, fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(in lpFileName.GetPinnableReference(), fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0, T1>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, Span<T1> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(in lpFileName.GetPinnableReference(), fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, Span<T0> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(lpFileName, fInfoLevelId, lpFindFileData, fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 263, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExA<T0, T1>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, Span<T1> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExA(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, Span<T0> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(lpFileName, fInfoLevelId, lpFindFileData, fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0, T1>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, Span<T1> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags)
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(in lpFileName.GetPinnableReference(), fInfoLevelId, lpFindFileData, fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, Span<T0> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(in lpFileName.GetPinnableReference(), fInfoLevelId, lpFindFileData, fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(in lpFileName.GetPinnableReference(), fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0, T1>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, Span<T1> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(in lpFileName.GetPinnableReference(), fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, FindexInfoLevels fInfoLevelId, void* lpFindFileData, FindexSearchOps fSearchOp, Span<T0> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(lpFileName, fInfoLevelId, lpFindFileData, fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, void* lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, lpSearchFilter, dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 275, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileExW<T0, T1>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, FindexInfoLevels fInfoLevelId, Span<T0> lpFindFileData, FindexSearchOps fSearchOp, Span<T1> lpSearchFilter, uint dwAdditionalFlags) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstFileExW(lpFileName, fInfoLevelId, ref lpFindFileData.GetPinnableReference(), fSearchOp, ref lpSearchFilter.GetPinnableReference(), dwAdditionalFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 300, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstVolumeW(this Windows thisApi, Span<char> lpszVolumeName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.FindFirstVolumeW(ref lpszVolumeName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 312, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextChangeNotification<T0>(this Windows thisApi, Span<T0> hChangeHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextChangeNotification(ref hChangeHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 325, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileA(this Windows thisApi, void* hFindFile, Span<Win32FindDataa> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindNextFileA(hFindFile, ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 325, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileA<T0>(this Windows thisApi, Span<T0> hFindFile, Win32FindDataa* lpFindFileData) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileA(ref hFindFile.GetPinnableReference(), lpFindFileData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 325, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileA<T0>(this Windows thisApi, Span<T0> hFindFile, Span<Win32FindDataa> lpFindFileData) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileA(ref hFindFile.GetPinnableReference(), ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 333, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileW(this Windows thisApi, void* hFindFile, Span<Win32FindDataw> lpFindFileData)
        {
            // SpanOverloader
            return thisApi.FindNextFileW(hFindFile, ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 333, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileW<T0>(this Windows thisApi, Span<T0> hFindFile, Win32FindDataw* lpFindFileData) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileW(ref hFindFile.GetPinnableReference(), lpFindFileData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 333, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileW<T0>(this Windows thisApi, Span<T0> hFindFile, Span<Win32FindDataw> lpFindFileData) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileW(ref hFindFile.GetPinnableReference(), ref lpFindFileData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 352, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextVolumeW(this Windows thisApi, void* hFindVolume, Span<char> lpszVolumeName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.FindNextVolumeW(hFindVolume, ref lpszVolumeName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 352, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextVolumeW<T0>(this Windows thisApi, Span<T0> hFindVolume, char* lpszVolumeName, uint cchBufferLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextVolumeW(ref hFindVolume.GetPinnableReference(), lpszVolumeName, cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 352, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextVolumeW<T0>(this Windows thisApi, Span<T0> hFindVolume, Span<char> lpszVolumeName, uint cchBufferLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextVolumeW(ref hFindVolume.GetPinnableReference(), ref lpszVolumeName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 352, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextVolumeW<T0>(this Windows thisApi, Span<T0> hFindVolume, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumeName, uint cchBufferLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextVolumeW(ref hFindVolume.GetPinnableReference(), lpszVolumeName, cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 365, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindVolumeClose<T0>(this Windows thisApi, Span<T0> hFindVolume) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindVolumeClose(ref hFindVolume.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 378, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FlushFileBuffers<T0>(this Windows thisApi, Span<T0> hFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FlushFileBuffers(ref hFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 385, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceA(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(in lpRootPathName.GetPinnableReference(), ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, uint* lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, uint* lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, lpSectorsPerCluster, ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, uint* lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), lpBytesPerSector, ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, uint* lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), lpNumberOfFreeClusters, ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, uint* lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), lpTotalNumberOfClusters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 396, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<uint> lpSectorsPerCluster, Span<uint> lpBytesPerSector, Span<uint> lpNumberOfFreeClusters, Span<uint> lpTotalNumberOfClusters)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceW(lpRootPathName, ref lpSectorsPerCluster.GetPinnableReference(), ref lpBytesPerSector.GetPinnableReference(), ref lpNumberOfFreeClusters.GetPinnableReference(), ref lpTotalNumberOfClusters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 412, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExA(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(in lpDirectoryName.GetPinnableReference(), ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDirectoryName, ulong* lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, lpFreeBytesAvailableToCaller, ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, ulong* lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), lpTotalNumberOfBytes, ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, ulong* lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), lpTotalNumberOfFreeBytes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 422, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetDiskFreeSpaceExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDirectoryName, Span<ulong> lpFreeBytesAvailableToCaller, Span<ulong> lpTotalNumberOfBytes, Span<ulong> lpTotalNumberOfFreeBytes)
        {
            // SpanOverloader
            return thisApi.GetDiskFreeSpaceExW(lpDirectoryName, ref lpFreeBytesAvailableToCaller.GetPinnableReference(), ref lpTotalNumberOfBytes.GetPinnableReference(), ref lpTotalNumberOfFreeBytes.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 534, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* rootPath, Span<DiskSpaceInformation> diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationA(rootPath, ref diskSpaceInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 534, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> rootPath, DiskSpaceInformation* diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationA(in rootPath.GetPinnableReference(), diskSpaceInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 534, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> rootPath, Span<DiskSpaceInformation> diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationA(in rootPath.GetPinnableReference(), ref diskSpaceInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 534, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string rootPath, Span<DiskSpaceInformation> diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationA(rootPath, ref diskSpaceInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* rootPath, Span<DiskSpaceInformation> diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationW(rootPath, ref diskSpaceInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> rootPath, DiskSpaceInformation* diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationW(in rootPath.GetPinnableReference(), diskSpaceInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> rootPath, Span<DiskSpaceInformation> diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationW(in rootPath.GetPinnableReference(), ref diskSpaceInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in fileapi.h")]
        public static unsafe int GetDiskSpaceInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string rootPath, Span<DiskSpaceInformation> diskSpaceInfo)
        {
            // SpanOverloader
            return thisApi.GetDiskSpaceInformationW(rootPath, ref diskSpaceInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 561, Column 1 in fileapi.h")]
        public static unsafe uint GetDriveTypeA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName)
        {
            // SpanOverloader
            return thisApi.GetDriveTypeA(in lpRootPathName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 568, Column 1 in fileapi.h")]
        public static unsafe uint GetDriveTypeW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName)
        {
            // SpanOverloader
            return thisApi.GetDriveTypeW(in lpRootPathName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 589, Column 1 in fileapi.h")]
        public static unsafe uint GetFileAttributesA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName)
        {
            // SpanOverloader
            return thisApi.GetFileAttributesA(in lpFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 596, Column 1 in fileapi.h")]
        public static unsafe uint GetFileAttributesW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName)
        {
            // SpanOverloader
            return thisApi.GetFileAttributesW(in lpFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 608, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, GetFileexInfoLevels fInfoLevelId, Span<T0> lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExA(lpFileName, fInfoLevelId, ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 608, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, GetFileexInfoLevels fInfoLevelId, void* lpFileInformation)
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExA(in lpFileName.GetPinnableReference(), fInfoLevelId, lpFileInformation);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 608, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, GetFileexInfoLevels fInfoLevelId, Span<T0> lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExA(in lpFileName.GetPinnableReference(), fInfoLevelId, ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 608, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExA<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, GetFileexInfoLevels fInfoLevelId, Span<T0> lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExA(lpFileName, fInfoLevelId, ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 617, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, GetFileexInfoLevels fInfoLevelId, Span<T0> lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExW(lpFileName, fInfoLevelId, ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 617, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, GetFileexInfoLevels fInfoLevelId, void* lpFileInformation)
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExW(in lpFileName.GetPinnableReference(), fInfoLevelId, lpFileInformation);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 617, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, GetFileexInfoLevels fInfoLevelId, Span<T0> lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExW(in lpFileName.GetPinnableReference(), fInfoLevelId, ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 617, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileAttributesExW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, GetFileexInfoLevels fInfoLevelId, Span<T0> lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileAttributesExW(lpFileName, fInfoLevelId, ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 644, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileInformationByHandle(this Windows thisApi, void* hFile, Span<ByHandleFileInformation> lpFileInformation)
        {
            // SpanOverloader
            return thisApi.GetFileInformationByHandle(hFile, ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 644, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileInformationByHandle<T0>(this Windows thisApi, Span<T0> hFile, ByHandleFileInformation* lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileInformationByHandle(ref hFile.GetPinnableReference(), lpFileInformation);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 644, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileInformationByHandle<T0>(this Windows thisApi, Span<T0> hFile, Span<ByHandleFileInformation> lpFileInformation) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileInformationByHandle(ref hFile.GetPinnableReference(), ref lpFileInformation.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 658, Column 1 in fileapi.h")]
        public static unsafe uint GetFileSize(this Windows thisApi, void* hFile, Span<uint> lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetFileSize(hFile, ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 658, Column 1 in fileapi.h")]
        public static unsafe uint GetFileSize<T0>(this Windows thisApi, Span<T0> hFile, uint* lpFileSizeHigh) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileSize(ref hFile.GetPinnableReference(), lpFileSizeHigh);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 658, Column 1 in fileapi.h")]
        public static unsafe uint GetFileSize<T0>(this Windows thisApi, Span<T0> hFile, Span<uint> lpFileSizeHigh) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileSize(ref hFile.GetPinnableReference(), ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 672, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileSizeEx(this Windows thisApi, void* hFile, Span<long> lpFileSize)
        {
            // SpanOverloader
            return thisApi.GetFileSizeEx(hFile, ref lpFileSize.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 672, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileSizeEx<T0>(this Windows thisApi, Span<T0> hFile, long* lpFileSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileSizeEx(ref hFile.GetPinnableReference(), lpFileSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 672, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileSizeEx<T0>(this Windows thisApi, Span<T0> hFile, Span<long> lpFileSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileSizeEx(ref hFile.GetPinnableReference(), ref lpFileSize.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 680, Column 1 in fileapi.h")]
        public static unsafe uint GetFileType<T0>(this Windows thisApi, Span<T0> hFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileType(ref hFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 689, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleA(this Windows thisApi, void* hFile, Span<byte> lpszFilePath, uint cchFilePath, uint dwFlags)
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleA(hFile, ref lpszFilePath.GetPinnableReference(), cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 689, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleA<T0>(this Windows thisApi, Span<T0> hFile, byte* lpszFilePath, uint cchFilePath, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleA(ref hFile.GetPinnableReference(), lpszFilePath, cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 689, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleA<T0>(this Windows thisApi, Span<T0> hFile, Span<byte> lpszFilePath, uint cchFilePath, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleA(ref hFile.GetPinnableReference(), ref lpszFilePath.GetPinnableReference(), cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 689, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleA<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpszFilePath, uint cchFilePath, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleA(ref hFile.GetPinnableReference(), lpszFilePath, cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 699, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleW(this Windows thisApi, void* hFile, Span<char> lpszFilePath, uint cchFilePath, uint dwFlags)
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleW(hFile, ref lpszFilePath.GetPinnableReference(), cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 699, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpszFilePath, uint cchFilePath, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleW(ref hFile.GetPinnableReference(), lpszFilePath, cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 699, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpszFilePath, uint cchFilePath, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleW(ref hFile.GetPinnableReference(), ref lpszFilePath.GetPinnableReference(), cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 699, Column 1 in fileapi.h")]
        public static unsafe uint GetFinalPathNameByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszFilePath, uint cchFilePath, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFinalPathNameByHandleW(ref hFile.GetPinnableReference(), lpszFilePath, cchFilePath, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime(this Windows thisApi, void* hFile, Filetime* lpCreationTime, Filetime* lpLastAccessTime, Span<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.GetFileTime(hFile, lpCreationTime, lpLastAccessTime, ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime(this Windows thisApi, void* hFile, Filetime* lpCreationTime, Span<Filetime> lpLastAccessTime, Filetime* lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.GetFileTime(hFile, lpCreationTime, ref lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime(this Windows thisApi, void* hFile, Filetime* lpCreationTime, Span<Filetime> lpLastAccessTime, Span<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.GetFileTime(hFile, lpCreationTime, ref lpLastAccessTime.GetPinnableReference(), ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime(this Windows thisApi, void* hFile, Span<Filetime> lpCreationTime, Filetime* lpLastAccessTime, Filetime* lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.GetFileTime(hFile, ref lpCreationTime.GetPinnableReference(), lpLastAccessTime, lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime(this Windows thisApi, void* hFile, Span<Filetime> lpCreationTime, Filetime* lpLastAccessTime, Span<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.GetFileTime(hFile, ref lpCreationTime.GetPinnableReference(), lpLastAccessTime, ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime(this Windows thisApi, void* hFile, Span<Filetime> lpCreationTime, Span<Filetime> lpLastAccessTime, Filetime* lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.GetFileTime(hFile, ref lpCreationTime.GetPinnableReference(), ref lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime(this Windows thisApi, void* hFile, Span<Filetime> lpCreationTime, Span<Filetime> lpLastAccessTime, Span<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.GetFileTime(hFile, ref lpCreationTime.GetPinnableReference(), ref lpLastAccessTime.GetPinnableReference(), ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Filetime* lpCreationTime, Filetime* lpLastAccessTime, Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, lpLastAccessTime, lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Filetime* lpCreationTime, Filetime* lpLastAccessTime, Span<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, lpLastAccessTime, ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Filetime* lpCreationTime, Span<Filetime> lpLastAccessTime, Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, ref lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Filetime* lpCreationTime, Span<Filetime> lpLastAccessTime, Span<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, ref lpLastAccessTime.GetPinnableReference(), ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Span<Filetime> lpCreationTime, Filetime* lpLastAccessTime, Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), ref lpCreationTime.GetPinnableReference(), lpLastAccessTime, lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Span<Filetime> lpCreationTime, Filetime* lpLastAccessTime, Span<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), ref lpCreationTime.GetPinnableReference(), lpLastAccessTime, ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Span<Filetime> lpCreationTime, Span<Filetime> lpLastAccessTime, Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), ref lpCreationTime.GetPinnableReference(), ref lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 716, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetFileTime<T0>(this Windows thisApi, Span<T0> hFile, Span<Filetime> lpCreationTime, Span<Filetime> lpLastAccessTime, Span<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetFileTime(ref hFile.GetPinnableReference(), ref lpCreationTime.GetPinnableReference(), ref lpLastAccessTime.GetPinnableReference(), ref lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint nBufferLength, Span<char> lpBuffer, char** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint nBufferLength, Span<char> lpBuffer, ref char* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint nBufferLength, char* lpBuffer, char** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint nBufferLength, char* lpBuffer, ref char* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint nBufferLength, Span<char> lpBuffer, char** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(in lpFileName.GetPinnableReference(), nBufferLength, ref lpBuffer.GetPinnableReference(), lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint nBufferLength, Span<char> lpBuffer, ref char* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(in lpFileName.GetPinnableReference(), nBufferLength, ref lpBuffer.GetPinnableReference(), ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint nBufferLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpBuffer, char** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint nBufferLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpBuffer, ref char* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint nBufferLength, Span<char> lpBuffer, char** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 727, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint nBufferLength, Span<char> lpBuffer, ref char* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameW(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, uint nBufferLength, Span<byte> lpBuffer, byte** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, uint nBufferLength, Span<byte> lpBuffer, ref byte* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint nBufferLength, byte* lpBuffer, byte** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint nBufferLength, byte* lpBuffer, ref byte* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint nBufferLength, Span<byte> lpBuffer, byte** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(in lpFileName.GetPinnableReference(), nBufferLength, ref lpBuffer.GetPinnableReference(), lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint nBufferLength, Span<byte> lpBuffer, ref byte* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(in lpFileName.GetPinnableReference(), nBufferLength, ref lpBuffer.GetPinnableReference(), ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint nBufferLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpBuffer, byte** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint nBufferLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpBuffer, ref byte* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(in lpFileName.GetPinnableReference(), nBufferLength, lpBuffer, ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, uint nBufferLength, Span<byte> lpBuffer, byte** lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 742, Column 1 in fileapi.h")]
        public static unsafe uint GetFullPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, uint nBufferLength, Span<byte> lpBuffer, ref byte* lpFilePart)
        {
            // SpanOverloader
            return thisApi.GetFullPathNameA(lpFileName, nBufferLength, ref lpBuffer.GetPinnableReference(), ref lpFilePart);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 769, Column 1 in fileapi.h")]
        public static unsafe uint GetLogicalDriveStringsW(this Windows thisApi, uint nBufferLength, Span<char> lpBuffer)
        {
            // SpanOverloader
            return thisApi.GetLogicalDriveStringsW(nBufferLength, ref lpBuffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 788, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpszShortPath, Span<byte> lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameA(lpszShortPath, ref lpszLongPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 788, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpszShortPath, byte* lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameA(in lpszShortPath.GetPinnableReference(), lpszLongPath, cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 788, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpszShortPath, Span<byte> lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameA(in lpszShortPath.GetPinnableReference(), ref lpszLongPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 788, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpszShortPath, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameA(in lpszShortPath.GetPinnableReference(), lpszLongPath, cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 788, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpszShortPath, Span<byte> lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameA(lpszShortPath, ref lpszLongPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 802, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszShortPath, Span<char> lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameW(lpszShortPath, ref lpszLongPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 802, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszShortPath, char* lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameW(in lpszShortPath.GetPinnableReference(), lpszLongPath, cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 802, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszShortPath, Span<char> lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameW(in lpszShortPath.GetPinnableReference(), ref lpszLongPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 802, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszShortPath, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameW(in lpszShortPath.GetPinnableReference(), lpszLongPath, cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 802, Column 1 in fileapi.h")]
        public static unsafe uint GetLongPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszShortPath, Span<char> lpszLongPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetLongPathNameW(lpszShortPath, ref lpszLongPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 823, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 AreShortNamesEnabled(this Windows thisApi, void* Handle, Span<int> Enabled)
        {
            // SpanOverloader
            return thisApi.AreShortNamesEnabled(Handle, ref Enabled.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 823, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 AreShortNamesEnabled<T0>(this Windows thisApi, Span<T0> Handle, int* Enabled) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.AreShortNamesEnabled(ref Handle.GetPinnableReference(), Enabled);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 823, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 AreShortNamesEnabled<T0>(this Windows thisApi, Span<T0> Handle, Span<int> Enabled) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.AreShortNamesEnabled(ref Handle.GetPinnableReference(), ref Enabled.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 1 in fileapi.h")]
        public static unsafe uint GetShortPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszLongPath, Span<char> lpszShortPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetShortPathNameW(lpszLongPath, ref lpszShortPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 1 in fileapi.h")]
        public static unsafe uint GetShortPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszLongPath, char* lpszShortPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetShortPathNameW(in lpszLongPath.GetPinnableReference(), lpszShortPath, cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 1 in fileapi.h")]
        public static unsafe uint GetShortPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszLongPath, Span<char> lpszShortPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetShortPathNameW(in lpszLongPath.GetPinnableReference(), ref lpszShortPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 1 in fileapi.h")]
        public static unsafe uint GetShortPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszLongPath, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszShortPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetShortPathNameW(in lpszLongPath.GetPinnableReference(), lpszShortPath, cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 834, Column 1 in fileapi.h")]
        public static unsafe uint GetShortPathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszLongPath, Span<char> lpszShortPath, uint cchBuffer)
        {
            // SpanOverloader
            return thisApi.GetShortPathNameW(lpszLongPath, ref lpszShortPath.GetPinnableReference(), cchBuffer);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, char* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPrefixString, uint uUnique, char* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, char* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), in lpPrefixString.GetPinnableReference(), uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPrefixString, uint uUnique, char* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, char* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 853, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpPrefixString, uint uUnique, Span<char> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameW(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW(this Windows thisApi, void* hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(hFile, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 875, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationByHandleW<T0>(this Windows thisApi, Span<T0> hFile, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationByHandleW(ref hFile.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, char* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, Span<char> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, char* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<char> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 891, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationW(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 909, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszFileName, Span<char> lpszVolumePathName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNameW(lpszFileName, ref lpszVolumePathName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 909, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszFileName, char* lpszVolumePathName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNameW(in lpszFileName.GetPinnableReference(), lpszVolumePathName, cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 909, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszFileName, Span<char> lpszVolumePathName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNameW(in lpszFileName.GetPinnableReference(), ref lpszVolumePathName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 909, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszFileName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumePathName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNameW(in lpszFileName.GetPinnableReference(), lpszVolumePathName, cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 909, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszFileName, Span<char> lpszVolumePathName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNameW(lpszFileName, ref lpszVolumePathName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 LocalFileTimeToFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLocalFileTime, Span<Filetime> lpFileTime)
        {
            // SpanOverloader
            return thisApi.LocalFileTimeToFileTime(lpLocalFileTime, ref lpFileTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 LocalFileTimeToFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLocalFileTime, Filetime* lpFileTime)
        {
            // SpanOverloader
            return thisApi.LocalFileTimeToFileTime(in lpLocalFileTime.GetPinnableReference(), lpFileTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 922, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 LocalFileTimeToFileTime(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLocalFileTime, Span<Filetime> lpFileTime)
        {
            // SpanOverloader
            return thisApi.LocalFileTimeToFileTime(in lpLocalFileTime.GetPinnableReference(), ref lpFileTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 930, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 LockFile<T0>(this Windows thisApi, Span<T0> hFile, uint dwFileOffsetLow, uint dwFileOffsetHigh, uint nNumberOfBytesToLockLow, uint nNumberOfBytesToLockHigh) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.LockFile(ref hFile.GetPinnableReference(), dwFileOffsetLow, dwFileOffsetHigh, nNumberOfBytesToLockLow, nNumberOfBytesToLockHigh);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 941, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 LockFileEx(this Windows thisApi, void* hFile, uint dwFlags, uint dwReserved, uint nNumberOfBytesToLockLow, uint nNumberOfBytesToLockHigh, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.LockFileEx(hFile, dwFlags, dwReserved, nNumberOfBytesToLockLow, nNumberOfBytesToLockHigh, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 941, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 LockFileEx<T0>(this Windows thisApi, Span<T0> hFile, uint dwFlags, uint dwReserved, uint nNumberOfBytesToLockLow, uint nNumberOfBytesToLockHigh, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.LockFileEx(ref hFile.GetPinnableReference(), dwFlags, dwReserved, nNumberOfBytesToLockLow, nNumberOfBytesToLockHigh, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 941, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 LockFileEx<T0>(this Windows thisApi, Span<T0> hFile, uint dwFlags, uint dwReserved, uint nNumberOfBytesToLockLow, uint nNumberOfBytesToLockHigh, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.LockFileEx(ref hFile.GetPinnableReference(), dwFlags, dwReserved, nNumberOfBytesToLockLow, nNumberOfBytesToLockHigh, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 959, Column 1 in fileapi.h")]
        public static unsafe uint QueryDosDeviceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpDeviceName, Span<char> lpTargetPath, uint ucchMax)
        {
            // SpanOverloader
            return thisApi.QueryDosDeviceW(lpDeviceName, ref lpTargetPath.GetPinnableReference(), ucchMax);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 959, Column 1 in fileapi.h")]
        public static unsafe uint QueryDosDeviceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDeviceName, char* lpTargetPath, uint ucchMax)
        {
            // SpanOverloader
            return thisApi.QueryDosDeviceW(in lpDeviceName.GetPinnableReference(), lpTargetPath, ucchMax);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 959, Column 1 in fileapi.h")]
        public static unsafe uint QueryDosDeviceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDeviceName, Span<char> lpTargetPath, uint ucchMax)
        {
            // SpanOverloader
            return thisApi.QueryDosDeviceW(in lpDeviceName.GetPinnableReference(), ref lpTargetPath.GetPinnableReference(), ucchMax);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 959, Column 1 in fileapi.h")]
        public static unsafe uint QueryDosDeviceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpDeviceName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpTargetPath, uint ucchMax)
        {
            // SpanOverloader
            return thisApi.QueryDosDeviceW(in lpDeviceName.GetPinnableReference(), lpTargetPath, ucchMax);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 959, Column 1 in fileapi.h")]
        public static unsafe uint QueryDosDeviceW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpDeviceName, Span<char> lpTargetPath, uint ucchMax)
        {
            // SpanOverloader
            return thisApi.QueryDosDeviceW(lpDeviceName, ref lpTargetPath.GetPinnableReference(), ucchMax);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile(this Windows thisApi, void* hFile, void* lpBuffer, uint nNumberOfBytesToRead, uint* lpNumberOfBytesRead, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFile(hFile, lpBuffer, nNumberOfBytesToRead, lpNumberOfBytesRead, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile(this Windows thisApi, void* hFile, void* lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFile(hFile, lpBuffer, nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile(this Windows thisApi, void* hFile, void* lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFile(hFile, lpBuffer, nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, void* hFile, Span<T0> lpBuffer, uint nNumberOfBytesToRead, uint* lpNumberOfBytesRead, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(hFile, ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, lpNumberOfBytesRead, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, void* hFile, Span<T0> lpBuffer, uint nNumberOfBytesToRead, uint* lpNumberOfBytesRead, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(hFile, ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, lpNumberOfBytesRead, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, void* hFile, Span<T0> lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(hFile, ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, void* hFile, Span<T0> lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(hFile, ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, Span<T0> hFile, void* lpBuffer, uint nNumberOfBytesToRead, uint* lpNumberOfBytesRead, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToRead, lpNumberOfBytesRead, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, Span<T0> hFile, void* lpBuffer, uint nNumberOfBytesToRead, uint* lpNumberOfBytesRead, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToRead, lpNumberOfBytesRead, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, Span<T0> hFile, void* lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0>(this Windows thisApi, Span<T0> hFile, void* lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0, T1>(this Windows thisApi, Span<T0> hFile, Span<T1> lpBuffer, uint nNumberOfBytesToRead, uint* lpNumberOfBytesRead, Overlapped* lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, lpNumberOfBytesRead, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0, T1>(this Windows thisApi, Span<T0> hFile, Span<T1> lpBuffer, uint nNumberOfBytesToRead, uint* lpNumberOfBytesRead, Span<Overlapped> lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, lpNumberOfBytesRead, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0, T1>(this Windows thisApi, Span<T0> hFile, Span<T1> lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Overlapped* lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 979, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFile<T0, T1>(this Windows thisApi, Span<T0> hFile, Span<T1> lpBuffer, uint nNumberOfBytesToRead, Span<uint> lpNumberOfBytesRead, Span<Overlapped> lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFile(ref hFile.GetPinnableReference(), ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, ref lpNumberOfBytesRead.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileEx(this Windows thisApi, void* hFile, void* lpBuffer, uint nNumberOfBytesToRead, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine)
        {
            // SpanOverloader
            return thisApi.ReadFileEx(hFile, lpBuffer, nNumberOfBytesToRead, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileEx<T0>(this Windows thisApi, void* hFile, Span<T0> lpBuffer, uint nNumberOfBytesToRead, Overlapped* lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileEx(hFile, ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, lpOverlapped, lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileEx<T0>(this Windows thisApi, void* hFile, Span<T0> lpBuffer, uint nNumberOfBytesToRead, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileEx(hFile, ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileEx<T0>(this Windows thisApi, Span<T0> hFile, void* lpBuffer, uint nNumberOfBytesToRead, Overlapped* lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileEx(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToRead, lpOverlapped, lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileEx<T0>(this Windows thisApi, Span<T0> hFile, void* lpBuffer, uint nNumberOfBytesToRead, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileEx(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToRead, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileEx<T0, T1>(this Windows thisApi, Span<T0> hFile, Span<T1> lpBuffer, uint nNumberOfBytesToRead, Overlapped* lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileEx(ref hFile.GetPinnableReference(), ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, lpOverlapped, lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 991, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileEx<T0, T1>(this Windows thisApi, Span<T0> hFile, Span<T1> lpBuffer, uint nNumberOfBytesToRead, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileEx(ref hFile.GetPinnableReference(), ref lpBuffer.GetPinnableReference(), nNumberOfBytesToRead, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter(this Windows thisApi, void* hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToRead, uint* lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(hFile, aSegmentArray, nNumberOfBytesToRead, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter(this Windows thisApi, void* hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(hFile, aSegmentArray, nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter(this Windows thisApi, void* hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(hFile, aSegmentArray, nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, uint* lpReserved, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, lpReserved, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, uint* lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToRead, uint* lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToRead, lpReserved, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToRead, uint* lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToRead, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, uint* lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, lpReserved, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, uint* lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1003, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 ReadFileScatter<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToRead, Span<uint> lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ReadFileScatter(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToRead, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1014, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 RemoveDirectoryA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName)
        {
            // SpanOverloader
            return thisApi.RemoveDirectoryA(in lpPathName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1021, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 RemoveDirectoryW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpPathName)
        {
            // SpanOverloader
            return thisApi.RemoveDirectoryW(in lpPathName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1033, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetEndOfFile<T0>(this Windows thisApi, Span<T0> hFile) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetEndOfFile(ref hFile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1040, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileAttributesA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint dwFileAttributes)
        {
            // SpanOverloader
            return thisApi.SetFileAttributesA(in lpFileName.GetPinnableReference(), dwFileAttributes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1048, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileAttributesW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwFileAttributes)
        {
            // SpanOverloader
            return thisApi.SetFileAttributesW(in lpFileName.GetPinnableReference(), dwFileAttributes);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1063, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileInformationByHandle<T0>(this Windows thisApi, void* hFile, FileInfoByHandleClass FileInformationClass, Span<T0> lpFileInformation, uint dwBufferSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileInformationByHandle(hFile, FileInformationClass, ref lpFileInformation.GetPinnableReference(), dwBufferSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1063, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileInformationByHandle<T0>(this Windows thisApi, Span<T0> hFile, FileInfoByHandleClass FileInformationClass, void* lpFileInformation, uint dwBufferSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileInformationByHandle(ref hFile.GetPinnableReference(), FileInformationClass, lpFileInformation, dwBufferSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1063, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileInformationByHandle<T0, T1>(this Windows thisApi, Span<T0> hFile, FileInfoByHandleClass FileInformationClass, Span<T1> lpFileInformation, uint dwBufferSize) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileInformationByHandle(ref hFile.GetPinnableReference(), FileInformationClass, ref lpFileInformation.GetPinnableReference(), dwBufferSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1075, Column 1 in fileapi.h")]
        public static unsafe uint SetFilePointer(this Windows thisApi, void* hFile, int lDistanceToMove, Span<int> lpDistanceToMoveHigh, uint dwMoveMethod)
        {
            // SpanOverloader
            return thisApi.SetFilePointer(hFile, lDistanceToMove, ref lpDistanceToMoveHigh.GetPinnableReference(), dwMoveMethod);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1075, Column 1 in fileapi.h")]
        public static unsafe uint SetFilePointer<T0>(this Windows thisApi, Span<T0> hFile, int lDistanceToMove, int* lpDistanceToMoveHigh, uint dwMoveMethod) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFilePointer(ref hFile.GetPinnableReference(), lDistanceToMove, lpDistanceToMoveHigh, dwMoveMethod);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1075, Column 1 in fileapi.h")]
        public static unsafe uint SetFilePointer<T0>(this Windows thisApi, Span<T0> hFile, int lDistanceToMove, Span<int> lpDistanceToMoveHigh, uint dwMoveMethod) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFilePointer(ref hFile.GetPinnableReference(), lDistanceToMove, ref lpDistanceToMoveHigh.GetPinnableReference(), dwMoveMethod);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1085, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFilePointerEx(this Windows thisApi, void* hFile, long liDistanceToMove, Span<long> lpNewFilePointer, uint dwMoveMethod)
        {
            // SpanOverloader
            return thisApi.SetFilePointerEx(hFile, liDistanceToMove, ref lpNewFilePointer.GetPinnableReference(), dwMoveMethod);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1085, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFilePointerEx<T0>(this Windows thisApi, Span<T0> hFile, long liDistanceToMove, long* lpNewFilePointer, uint dwMoveMethod) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFilePointerEx(ref hFile.GetPinnableReference(), liDistanceToMove, lpNewFilePointer, dwMoveMethod);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1085, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFilePointerEx<T0>(this Windows thisApi, Span<T0> hFile, long liDistanceToMove, Span<long> lpNewFilePointer, uint dwMoveMethod) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFilePointerEx(ref hFile.GetPinnableReference(), liDistanceToMove, ref lpNewFilePointer.GetPinnableReference(), dwMoveMethod);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.SetFileTime(hFile, lpCreationTime, lpLastAccessTime, in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.SetFileTime(hFile, lpCreationTime, in lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.SetFileTime(hFile, lpCreationTime, in lpLastAccessTime.GetPinnableReference(), in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.SetFileTime(hFile, in lpCreationTime.GetPinnableReference(), lpLastAccessTime, lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.SetFileTime(hFile, in lpCreationTime.GetPinnableReference(), lpLastAccessTime, in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.SetFileTime(hFile, in lpCreationTime.GetPinnableReference(), in lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime)
        {
            // SpanOverloader
            return thisApi.SetFileTime(hFile, in lpCreationTime.GetPinnableReference(), in lpLastAccessTime.GetPinnableReference(), in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, lpLastAccessTime, lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, lpLastAccessTime, in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, in lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), lpCreationTime, in lpLastAccessTime.GetPinnableReference(), in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), in lpCreationTime.GetPinnableReference(), lpLastAccessTime, lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), in lpCreationTime.GetPinnableReference(), lpLastAccessTime, in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Filetime* lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), in lpCreationTime.GetPinnableReference(), in lpLastAccessTime.GetPinnableReference(), lpLastWriteTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1095, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileTime<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpCreationTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastAccessTime, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Filetime> lpLastWriteTime) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileTime(ref hFile.GetPinnableReference(), in lpCreationTime.GetPinnableReference(), in lpLastAccessTime.GetPinnableReference(), in lpLastWriteTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1107, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileValidData<T0>(this Windows thisApi, Span<T0> hFile, long ValidDataLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileValidData(ref hFile.GetPinnableReference(), ValidDataLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1117, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 UnlockFile<T0>(this Windows thisApi, Span<T0> hFile, uint dwFileOffsetLow, uint dwFileOffsetHigh, uint nNumberOfBytesToUnlockLow, uint nNumberOfBytesToUnlockHigh) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.UnlockFile(ref hFile.GetPinnableReference(), dwFileOffsetLow, dwFileOffsetHigh, nNumberOfBytesToUnlockLow, nNumberOfBytesToUnlockHigh);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1128, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 UnlockFileEx(this Windows thisApi, void* hFile, uint dwReserved, uint nNumberOfBytesToUnlockLow, uint nNumberOfBytesToUnlockHigh, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.UnlockFileEx(hFile, dwReserved, nNumberOfBytesToUnlockLow, nNumberOfBytesToUnlockHigh, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1128, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 UnlockFileEx<T0>(this Windows thisApi, Span<T0> hFile, uint dwReserved, uint nNumberOfBytesToUnlockLow, uint nNumberOfBytesToUnlockHigh, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.UnlockFileEx(ref hFile.GetPinnableReference(), dwReserved, nNumberOfBytesToUnlockLow, nNumberOfBytesToUnlockHigh, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1128, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 UnlockFileEx<T0>(this Windows thisApi, Span<T0> hFile, uint dwReserved, uint nNumberOfBytesToUnlockLow, uint nNumberOfBytesToUnlockHigh, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.UnlockFileEx(ref hFile.GetPinnableReference(), dwReserved, nNumberOfBytesToUnlockLow, nNumberOfBytesToUnlockHigh, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, uint* lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFile(hFile, lpBuffer, nNumberOfBytesToWrite, lpNumberOfBytesWritten, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFile(hFile, lpBuffer, nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFile(hFile, lpBuffer, nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> lpBuffer, uint nNumberOfBytesToWrite, uint* lpNumberOfBytesWritten, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(hFile, in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, lpNumberOfBytesWritten, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> lpBuffer, uint nNumberOfBytesToWrite, uint* lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(hFile, in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, lpNumberOfBytesWritten, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(hFile, in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(hFile, in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, uint* lpNumberOfBytesWritten, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToWrite, lpNumberOfBytesWritten, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, uint* lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToWrite, lpNumberOfBytesWritten, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0, T1>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T1> lpBuffer, uint nNumberOfBytesToWrite, uint* lpNumberOfBytesWritten, Overlapped* lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, lpNumberOfBytesWritten, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0, T1>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T1> lpBuffer, uint nNumberOfBytesToWrite, uint* lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, lpNumberOfBytesWritten, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0, T1>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T1> lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Overlapped* lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1139, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFile<T0, T1>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T1> lpBuffer, uint nNumberOfBytesToWrite, Span<uint> lpNumberOfBytesWritten, Span<Overlapped> lpOverlapped) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFile(ref hFile.GetPinnableReference(), in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, ref lpNumberOfBytesWritten.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1150, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileEx(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine)
        {
            // SpanOverloader
            return thisApi.WriteFileEx(hFile, lpBuffer, nNumberOfBytesToWrite, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1150, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileEx<T0>(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> lpBuffer, uint nNumberOfBytesToWrite, Overlapped* lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileEx(hFile, in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, lpOverlapped, lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1150, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileEx<T0>(this Windows thisApi, void* hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> lpBuffer, uint nNumberOfBytesToWrite, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileEx(hFile, in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1150, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileEx<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, Overlapped* lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileEx(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToWrite, lpOverlapped, lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1150, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileEx<T0>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* lpBuffer, uint nNumberOfBytesToWrite, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileEx(ref hFile.GetPinnableReference(), lpBuffer, nNumberOfBytesToWrite, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1150, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileEx<T0, T1>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T1> lpBuffer, uint nNumberOfBytesToWrite, Overlapped* lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileEx(ref hFile.GetPinnableReference(), in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, lpOverlapped, lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1150, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileEx<T0, T1>(this Windows thisApi, Span<T0> hFile, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T1> lpBuffer, uint nNumberOfBytesToWrite, Span<Overlapped> lpOverlapped, PfnLpoverlappedCompletionRoutine lpCompletionRoutine) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileEx(ref hFile.GetPinnableReference(), in lpBuffer.GetPinnableReference(), nNumberOfBytesToWrite, ref lpOverlapped.GetPinnableReference(), lpCompletionRoutine);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather(this Windows thisApi, void* hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToWrite, uint* lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFileGather(hFile, aSegmentArray, nNumberOfBytesToWrite, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather(this Windows thisApi, void* hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFileGather(hFile, aSegmentArray, nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather(this Windows thisApi, void* hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFileGather(hFile, aSegmentArray, nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, uint* lpReserved, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFileGather(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, lpReserved, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, uint* lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFileGather(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Overlapped* lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFileGather(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather(this Windows thisApi, void* hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Span<Overlapped> lpOverlapped)
        {
            // SpanOverloader
            return thisApi.WriteFileGather(hFile, ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToWrite, uint* lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToWrite, lpReserved, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToWrite, uint* lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToWrite, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, FileSegmentElement* aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), aSegmentArray, nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, uint* lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, lpReserved, lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, uint* lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, lpReserved, ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Overlapped* lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), lpOverlapped);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1161, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 WriteFileGather<T0>(this Windows thisApi, Span<T0> hFile, Span<FileSegmentElement> aSegmentArray, uint nNumberOfBytesToWrite, Span<uint> lpReserved, Span<Overlapped> lpOverlapped) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.WriteFileGather(ref hFile.GetPinnableReference(), ref aSegmentArray.GetPinnableReference(), nNumberOfBytesToWrite, ref lpReserved.GetPinnableReference(), ref lpOverlapped.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1172, Column 1 in fileapi.h")]
        public static unsafe uint GetTempPathW(this Windows thisApi, uint nBufferLength, Span<char> lpBuffer)
        {
            // SpanOverloader
            return thisApi.GetTempPathW(nBufferLength, ref lpBuffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1190, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeNameForVolumeMountPointW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszVolumeMountPoint, Span<char> lpszVolumeName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumeNameForVolumeMountPointW(lpszVolumeMountPoint, ref lpszVolumeName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1190, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeNameForVolumeMountPointW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeMountPoint, char* lpszVolumeName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumeNameForVolumeMountPointW(in lpszVolumeMountPoint.GetPinnableReference(), lpszVolumeName, cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1190, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeNameForVolumeMountPointW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeMountPoint, Span<char> lpszVolumeName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumeNameForVolumeMountPointW(in lpszVolumeMountPoint.GetPinnableReference(), ref lpszVolumeName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1190, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeNameForVolumeMountPointW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeMountPoint, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumeName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumeNameForVolumeMountPointW(in lpszVolumeMountPoint.GetPinnableReference(), lpszVolumeName, cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1190, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeNameForVolumeMountPointW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumeMountPoint, Span<char> lpszVolumeName, uint cchBufferLength)
        {
            // SpanOverloader
            return thisApi.GetVolumeNameForVolumeMountPointW(lpszVolumeMountPoint, ref lpszVolumeName.GetPinnableReference(), cchBufferLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszVolumeName, char* lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, lpszVolumePathNames, cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszVolumeName, Span<char> lpszVolumePathNames, uint cchBufferLength, uint* lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, ref lpszVolumePathNames.GetPinnableReference(), cchBufferLength, lpcchReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszVolumeName, Span<char> lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, ref lpszVolumePathNames.GetPinnableReference(), cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpszVolumeName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, lpszVolumePathNames, cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeName, char* lpszVolumePathNames, uint cchBufferLength, uint* lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(in lpszVolumeName.GetPinnableReference(), lpszVolumePathNames, cchBufferLength, lpcchReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeName, char* lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(in lpszVolumeName.GetPinnableReference(), lpszVolumePathNames, cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeName, Span<char> lpszVolumePathNames, uint cchBufferLength, uint* lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(in lpszVolumeName.GetPinnableReference(), ref lpszVolumePathNames.GetPinnableReference(), cchBufferLength, lpcchReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeName, Span<char> lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(in lpszVolumeName.GetPinnableReference(), ref lpszVolumePathNames.GetPinnableReference(), cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string lpszVolumePathNames, uint cchBufferLength, uint* lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(in lpszVolumeName.GetPinnableReference(), lpszVolumePathNames, cchBufferLength, lpcchReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpszVolumeName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(in lpszVolumeName.GetPinnableReference(), lpszVolumePathNames, cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumeName, char* lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, lpszVolumePathNames, cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumeName, Span<char> lpszVolumePathNames, uint cchBufferLength, uint* lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, ref lpszVolumePathNames.GetPinnableReference(), cchBufferLength, lpcchReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumeName, Span<char> lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, ref lpszVolumePathNames.GetPinnableReference(), cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1211, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumePathNamesForVolumeNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpszVolumeName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string lpszVolumePathNames, uint cchBufferLength, Span<uint> lpcchReturnLength)
        {
            // SpanOverloader
            return thisApi.GetVolumePathNamesForVolumeNameW(lpszVolumeName, lpszVolumePathNames, cchBufferLength, ref lpcchReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1244, Column 1 in fileapi.h")]
        public static unsafe void* CreateFile2(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwDesiredAccess, uint dwShareMode, uint dwCreationDisposition, Span<Createfile2ExtendedParameters> pCreateExParams)
        {
            // SpanOverloader
            return thisApi.CreateFile2(lpFileName, dwDesiredAccess, dwShareMode, dwCreationDisposition, ref pCreateExParams.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1244, Column 1 in fileapi.h")]
        public static unsafe void* CreateFile2(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwDesiredAccess, uint dwShareMode, uint dwCreationDisposition, Createfile2ExtendedParameters* pCreateExParams)
        {
            // SpanOverloader
            return thisApi.CreateFile2(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, dwCreationDisposition, pCreateExParams);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1244, Column 1 in fileapi.h")]
        public static unsafe void* CreateFile2(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwDesiredAccess, uint dwShareMode, uint dwCreationDisposition, Span<Createfile2ExtendedParameters> pCreateExParams)
        {
            // SpanOverloader
            return thisApi.CreateFile2(in lpFileName.GetPinnableReference(), dwDesiredAccess, dwShareMode, dwCreationDisposition, ref pCreateExParams.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1244, Column 1 in fileapi.h")]
        public static unsafe void* CreateFile2(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwDesiredAccess, uint dwShareMode, uint dwCreationDisposition, Span<Createfile2ExtendedParameters> pCreateExParams)
        {
            // SpanOverloader
            return thisApi.CreateFile2(lpFileName, dwDesiredAccess, dwShareMode, dwCreationDisposition, ref pCreateExParams.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileIoOverlappedRange(this Windows thisApi, void* FileHandle, Span<byte> OverlappedRangeStart, uint Length)
        {
            // SpanOverloader
            return thisApi.SetFileIoOverlappedRange(FileHandle, ref OverlappedRangeStart.GetPinnableReference(), Length);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileIoOverlappedRange<T0>(this Windows thisApi, Span<T0> FileHandle, byte* OverlappedRangeStart, uint Length) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileIoOverlappedRange(ref FileHandle.GetPinnableReference(), OverlappedRangeStart, Length);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileIoOverlappedRange<T0>(this Windows thisApi, Span<T0> FileHandle, Span<byte> OverlappedRangeStart, uint Length) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileIoOverlappedRange(ref FileHandle.GetPinnableReference(), ref OverlappedRangeStart.GetPinnableReference(), Length);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetFileIoOverlappedRange<T0>(this Windows thisApi, Span<T0> FileHandle, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string OverlappedRangeStart, uint Length) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetFileIoOverlappedRange(ref FileHandle.GetPinnableReference(), OverlappedRangeStart, Length);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1278, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpFileName, Span<uint> lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeA(lpFileName, ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1278, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, uint* lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeA(in lpFileName.GetPinnableReference(), lpFileSizeHigh);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1278, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpFileName, Span<uint> lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeA(in lpFileName.GetPinnableReference(), ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1278, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileName, Span<uint> lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeA(lpFileName, ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1286, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, Span<uint> lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeW(lpFileName, ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1286, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint* lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeW(in lpFileName.GetPinnableReference(), lpFileSizeHigh);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1286, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, Span<uint> lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeW(in lpFileName.GetPinnableReference(), ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1286, Column 1 in fileapi.h")]
        public static unsafe uint GetCompressedFileSizeW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, Span<uint> lpFileSizeHigh)
        {
            // SpanOverloader
            return thisApi.GetCompressedFileSizeW(lpFileName, ref lpFileSizeHigh.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1317, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstStreamW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, StreamInfoLevels InfoLevel, Span<T0> lpFindStreamData, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstStreamW(lpFileName, InfoLevel, ref lpFindStreamData.GetPinnableReference(), dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1317, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstStreamW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, StreamInfoLevels InfoLevel, void* lpFindStreamData, uint dwFlags)
        {
            // SpanOverloader
            return thisApi.FindFirstStreamW(in lpFileName.GetPinnableReference(), InfoLevel, lpFindStreamData, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1317, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstStreamW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, StreamInfoLevels InfoLevel, Span<T0> lpFindStreamData, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstStreamW(in lpFileName.GetPinnableReference(), InfoLevel, ref lpFindStreamData.GetPinnableReference(), dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1317, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstStreamW<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, StreamInfoLevels InfoLevel, Span<T0> lpFindStreamData, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindFirstStreamW(lpFileName, InfoLevel, ref lpFindStreamData.GetPinnableReference(), dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1327, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextStreamW<T0>(this Windows thisApi, void* hFindStream, Span<T0> lpFindStreamData) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextStreamW(hFindStream, ref lpFindStreamData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1327, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextStreamW<T0>(this Windows thisApi, Span<T0> hFindStream, void* lpFindStreamData) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextStreamW(ref hFindStream.GetPinnableReference(), lpFindStreamData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1327, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextStreamW<T0, T1>(this Windows thisApi, Span<T0> hFindStream, Span<T1> lpFindStreamData) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextStreamW(ref hFindStream.GetPinnableReference(), ref lpFindStreamData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1356, Column 1 in fileapi.h")]
        public static unsafe uint GetTempPathA(this Windows thisApi, uint nBufferLength, Span<byte> lpBuffer)
        {
            // SpanOverloader
            return thisApi.GetTempPathA(nBufferLength, ref lpBuffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwFlags, uint* StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, StringLength, ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwFlags, Span<uint> StringLength, char* LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwFlags, Span<uint> StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, ref StringLength.GetPinnableReference(), ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* lpFileName, uint dwFlags, Span<uint> StringLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwFlags, uint* StringLength, char* LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(in lpFileName.GetPinnableReference(), dwFlags, StringLength, LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwFlags, uint* StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(in lpFileName.GetPinnableReference(), dwFlags, StringLength, ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwFlags, uint* StringLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(in lpFileName.GetPinnableReference(), dwFlags, StringLength, LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwFlags, Span<uint> StringLength, char* LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(in lpFileName.GetPinnableReference(), dwFlags, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwFlags, Span<uint> StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(in lpFileName.GetPinnableReference(), dwFlags, ref StringLength.GetPinnableReference(), ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> lpFileName, uint dwFlags, Span<uint> StringLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(in lpFileName.GetPinnableReference(), dwFlags, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwFlags, uint* StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, StringLength, ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwFlags, Span<uint> StringLength, char* LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwFlags, Span<uint> StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, ref StringLength.GetPinnableReference(), ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1376, Column 1 in fileapi.h")]
        public static unsafe void* FindFirstFileNameW(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string lpFileName, uint dwFlags, Span<uint> StringLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LinkName)
        {
            // SpanOverloader
            return thisApi.FindFirstFileNameW(lpFileName, dwFlags, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW(this Windows thisApi, void* hFindStream, uint* StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(hFindStream, StringLength, ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW(this Windows thisApi, void* hFindStream, Span<uint> StringLength, char* LinkName)
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(hFindStream, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW(this Windows thisApi, void* hFindStream, Span<uint> StringLength, Span<char> LinkName)
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(hFindStream, ref StringLength.GetPinnableReference(), ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW(this Windows thisApi, void* hFindStream, Span<uint> StringLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LinkName)
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(hFindStream, ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW<T0>(this Windows thisApi, Span<T0> hFindStream, uint* StringLength, char* LinkName) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(ref hFindStream.GetPinnableReference(), StringLength, LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW<T0>(this Windows thisApi, Span<T0> hFindStream, uint* StringLength, Span<char> LinkName) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(ref hFindStream.GetPinnableReference(), StringLength, ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW<T0>(this Windows thisApi, Span<T0> hFindStream, uint* StringLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LinkName) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(ref hFindStream.GetPinnableReference(), StringLength, LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW<T0>(this Windows thisApi, Span<T0> hFindStream, Span<uint> StringLength, char* LinkName) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(ref hFindStream.GetPinnableReference(), ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW<T0>(this Windows thisApi, Span<T0> hFindStream, Span<uint> StringLength, Span<char> LinkName) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(ref hFindStream.GetPinnableReference(), ref StringLength.GetPinnableReference(), ref LinkName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1386, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 FindNextFileNameW<T0>(this Windows thisApi, Span<T0> hFindStream, Span<uint> StringLength, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LinkName) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.FindNextFileNameW(ref hFindStream.GetPinnableReference(), ref StringLength.GetPinnableReference(), LinkName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(in lpRootPathName.GetPinnableReference(), lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, byte* lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, Span<byte> lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, ref lpVolumeNameBuffer.GetPinnableReference(), nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, uint* lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, uint* lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), lpMaximumComponentLength, ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, uint* lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, byte* lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, Span<byte> lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), ref lpFileSystemNameBuffer.GetPinnableReference(), nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1403, Column 1 in fileapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetVolumeInformationA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpRootPathName, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpVolumeNameBuffer, uint nVolumeNameSize, Span<uint> lpVolumeSerialNumber, Span<uint> lpMaximumComponentLength, Span<uint> lpFileSystemFlags, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpFileSystemNameBuffer, uint nFileSystemNameSize)
        {
            // SpanOverloader
            return thisApi.GetVolumeInformationA(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, ref lpVolumeSerialNumber.GetPinnableReference(), ref lpMaximumComponentLength.GetPinnableReference(), ref lpFileSystemFlags.GetPinnableReference(), lpFileSystemNameBuffer, nFileSystemNameSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, byte* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPrefixString, uint uUnique, byte* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, byte* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), in lpPrefixString.GetPinnableReference(), uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPrefixString, uint uUnique, byte* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(in lpPathName.GetPinnableReference(), lpPrefixString, uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, byte* lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> lpPrefixString, uint uUnique, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, in lpPrefixString.GetPinnableReference(), uUnique, lpTempFileName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1427, Column 1 in fileapi.h")]
        public static unsafe uint GetTempFileNameA(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPathName, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string lpPrefixString, uint uUnique, Span<byte> lpTempFileName)
        {
            // SpanOverloader
            return thisApi.GetTempFileNameA(lpPathName, lpPrefixString, uUnique, ref lpTempFileName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1469, Column 1 in fileapi.h")]
        public static unsafe uint GetTempPath2W(this Windows thisApi, uint BufferLength, Span<char> Buffer)
        {
            // SpanOverloader
            return thisApi.GetTempPath2W(BufferLength, ref Buffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1482, Column 1 in fileapi.h")]
        public static unsafe uint GetTempPath2A(this Windows thisApi, uint BufferLength, Span<byte> Buffer)
        {
            // SpanOverloader
            return thisApi.GetTempPath2A(BufferLength, ref Buffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 39, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CloseHandle<T0>(this Windows thisApi, Span<T0> hObject) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CloseHandle(ref hObject.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0>(this Windows thisApi, void* hSourceProcessHandle, void* hSourceHandle, Span<T0> hTargetProcessHandle, void** lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(hSourceProcessHandle, hSourceHandle, ref hTargetProcessHandle.GetPinnableReference(), lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0>(this Windows thisApi, void* hSourceProcessHandle, void* hSourceHandle, Span<T0> hTargetProcessHandle, ref void* lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(hSourceProcessHandle, hSourceHandle, ref hTargetProcessHandle.GetPinnableReference(), ref lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0>(this Windows thisApi, void* hSourceProcessHandle, Span<T0> hSourceHandle, void* hTargetProcessHandle, void** lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(hSourceProcessHandle, ref hSourceHandle.GetPinnableReference(), hTargetProcessHandle, lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0>(this Windows thisApi, void* hSourceProcessHandle, Span<T0> hSourceHandle, void* hTargetProcessHandle, ref void* lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(hSourceProcessHandle, ref hSourceHandle.GetPinnableReference(), hTargetProcessHandle, ref lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1>(this Windows thisApi, void* hSourceProcessHandle, Span<T0> hSourceHandle, Span<T1> hTargetProcessHandle, void** lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(hSourceProcessHandle, ref hSourceHandle.GetPinnableReference(), ref hTargetProcessHandle.GetPinnableReference(), lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1>(this Windows thisApi, void* hSourceProcessHandle, Span<T0> hSourceHandle, Span<T1> hTargetProcessHandle, ref void* lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(hSourceProcessHandle, ref hSourceHandle.GetPinnableReference(), ref hTargetProcessHandle.GetPinnableReference(), ref lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0>(this Windows thisApi, Span<T0> hSourceProcessHandle, void* hSourceHandle, void* hTargetProcessHandle, void** lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), hSourceHandle, hTargetProcessHandle, lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0>(this Windows thisApi, Span<T0> hSourceProcessHandle, void* hSourceHandle, void* hTargetProcessHandle, ref void* lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), hSourceHandle, hTargetProcessHandle, ref lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1>(this Windows thisApi, Span<T0> hSourceProcessHandle, void* hSourceHandle, Span<T1> hTargetProcessHandle, void** lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), hSourceHandle, ref hTargetProcessHandle.GetPinnableReference(), lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1>(this Windows thisApi, Span<T0> hSourceProcessHandle, void* hSourceHandle, Span<T1> hTargetProcessHandle, ref void* lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), hSourceHandle, ref hTargetProcessHandle.GetPinnableReference(), ref lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1>(this Windows thisApi, Span<T0> hSourceProcessHandle, Span<T1> hSourceHandle, void* hTargetProcessHandle, void** lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), ref hSourceHandle.GetPinnableReference(), hTargetProcessHandle, lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1>(this Windows thisApi, Span<T0> hSourceProcessHandle, Span<T1> hSourceHandle, void* hTargetProcessHandle, ref void* lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), ref hSourceHandle.GetPinnableReference(), hTargetProcessHandle, ref lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1, T2>(this Windows thisApi, Span<T0> hSourceProcessHandle, Span<T1> hSourceHandle, Span<T2> hTargetProcessHandle, void** lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), ref hSourceHandle.GetPinnableReference(), ref hTargetProcessHandle.GetPinnableReference(), lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 46, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 DuplicateHandle<T0, T1, T2>(this Windows thisApi, Span<T0> hSourceProcessHandle, Span<T1> hSourceHandle, Span<T2> hTargetProcessHandle, ref void* lpTargetHandle, uint dwDesiredAccess, Silk.NET.Core.Bool32 bInheritHandle, uint dwOptions) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged
        {
            // SpanOverloader
            return thisApi.DuplicateHandle(ref hSourceProcessHandle.GetPinnableReference(), ref hSourceHandle.GetPinnableReference(), ref hTargetProcessHandle.GetPinnableReference(), ref lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 65, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CompareObjectHandles<T0>(this Windows thisApi, void* hFirstObjectHandle, Span<T0> hSecondObjectHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CompareObjectHandles(hFirstObjectHandle, ref hSecondObjectHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 65, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CompareObjectHandles<T0>(this Windows thisApi, Span<T0> hFirstObjectHandle, void* hSecondObjectHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CompareObjectHandles(ref hFirstObjectHandle.GetPinnableReference(), hSecondObjectHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 65, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 CompareObjectHandles<T0, T1>(this Windows thisApi, Span<T0> hFirstObjectHandle, Span<T1> hSecondObjectHandle) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.CompareObjectHandles(ref hFirstObjectHandle.GetPinnableReference(), ref hSecondObjectHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetHandleInformation(this Windows thisApi, void* hObject, Span<uint> lpdwFlags)
        {
            // SpanOverloader
            return thisApi.GetHandleInformation(hObject, ref lpdwFlags.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetHandleInformation<T0>(this Windows thisApi, Span<T0> hObject, uint* lpdwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetHandleInformation(ref hObject.GetPinnableReference(), lpdwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 79, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 GetHandleInformation<T0>(this Windows thisApi, Span<T0> hObject, Span<uint> lpdwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetHandleInformation(ref hObject.GetPinnableReference(), ref lpdwFlags.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 87, Column 1 in handleapi.h")]
        public static unsafe Silk.NET.Core.Bool32 SetHandleInformation<T0>(this Windows thisApi, Span<T0> hObject, uint dwMask, uint dwFlags) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.SetHandleInformation(ref hObject.GetPinnableReference(), dwMask, dwFlags);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2005, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownRemoteNextProxy(this Windows thisApi, IEnumUnknown* This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownRemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2005, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownRemoteNextProxy(this Windows thisApi, IEnumUnknown* This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownRemoteNextProxy(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2005, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownRemoteNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2005, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownRemoteNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2005, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownRemoteNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2005, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownRemoteNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2012, Column 17 in objidlbase.h")]
        public static unsafe void IEnumUnknownRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumUnknownRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2144, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringRemoteNextProxy(this Windows thisApi, IEnumString* This, uint celt, char** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringRemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2144, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringRemoteNextProxy(this Windows thisApi, IEnumString* This, uint celt, ref char* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringRemoteNextProxy(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2144, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringRemoteNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, char** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2144, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringRemoteNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, char** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2144, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringRemoteNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, ref char* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2144, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringRemoteNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, ref char* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2151, Column 17 in objidlbase.h")]
        public static unsafe void IEnumStringRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumStringRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, ISequentialStream* This, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(This, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, ISequentialStream* This, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(This, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, ISequentialStream* This, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(This, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, ISequentialStream* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(This, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, Span<ISequentialStream> This, byte* pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(ref This.GetPinnableReference(), pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, Span<ISequentialStream> This, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(ref This.GetPinnableReference(), pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, Span<ISequentialStream> This, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(ref This.GetPinnableReference(), ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, Span<ISequentialStream> This, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(ref This.GetPinnableReference(), ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, Span<ISequentialStream> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(ref This.GetPinnableReference(), pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2273, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteReadProxy(this Windows thisApi, Span<ISequentialStream> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteReadProxy(ref This.GetPinnableReference(), pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2280, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(This, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(This, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2287, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamRemoteWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamRemoteWriteProxy(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2294, Column 17 in objidlbase.h")]
        public static unsafe void ISequentialStreamRemoteWriteStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ISequentialStreamRemoteWriteStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2568, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteSeekProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, long dlibMove, uint dwOrigin, Span<ulong> plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteSeekProxy(This, dlibMove, dwOrigin, ref plibNewPosition.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2568, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteSeekProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, long dlibMove, uint dwOrigin, ulong* plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteSeekProxy(ref This.GetPinnableReference(), dlibMove, dwOrigin, plibNewPosition);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2568, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteSeekProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, long dlibMove, uint dwOrigin, Span<ulong> plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteSeekProxy(ref This.GetPinnableReference(), dlibMove, dwOrigin, ref plibNewPosition.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2575, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteSeekStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteSeekStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(This, pstm, cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(This, pstm, cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(This, pstm, cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(This, ref pstm.GetPinnableReference(), cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(This, ref pstm.GetPinnableReference(), cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(This, ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(This, ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), pstm, cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), pstm, cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), pstm, cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), pstm, cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2582, Column 43 in objidlbase.h")]
        public static unsafe int IStreamRemoteCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamRemoteCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2590, Column 17 in objidlbase.h")]
        public static unsafe void IStreamRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStreamRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8449, Column 41 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextProxy(this Windows thisApi, IEnumUnknown* This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8449, Column 41 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextProxy(this Windows thisApi, IEnumUnknown* This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextProxy(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8449, Column 41 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8449, Column 41 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8449, Column 41 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8449, Column 41 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextProxy(this Windows thisApi, Span<IEnumUnknown> This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8459, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextStub(this Windows thisApi, IEnumUnknown* This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8459, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextStub(this Windows thisApi, IEnumUnknown* This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextStub(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8459, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextStub(this Windows thisApi, Span<IEnumUnknown> This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8459, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextStub(this Windows thisApi, Span<IEnumUnknown> This, uint celt, Silk.NET.Core.Native.IUnknown** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8459, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextStub(this Windows thisApi, Span<IEnumUnknown> This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextStub(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8459, Column 43 in objidlbase.h")]
        public static unsafe int IEnumUnknownNextStub(this Windows thisApi, Span<IEnumUnknown> This, uint celt, ref Silk.NET.Core.Native.IUnknown* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumUnknownNextStub(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8465, Column 41 in objidlbase.h")]
        public static unsafe int IEnumStringNextProxy(this Windows thisApi, IEnumString* This, uint celt, char** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8465, Column 41 in objidlbase.h")]
        public static unsafe int IEnumStringNextProxy(this Windows thisApi, IEnumString* This, uint celt, ref char* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextProxy(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8465, Column 41 in objidlbase.h")]
        public static unsafe int IEnumStringNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, char** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8465, Column 41 in objidlbase.h")]
        public static unsafe int IEnumStringNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, char** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8465, Column 41 in objidlbase.h")]
        public static unsafe int IEnumStringNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, ref char* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8465, Column 41 in objidlbase.h")]
        public static unsafe int IEnumStringNextProxy(this Windows thisApi, Span<IEnumString> This, uint celt, ref char* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8474, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringNextStub(this Windows thisApi, IEnumString* This, uint celt, char** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8474, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringNextStub(this Windows thisApi, IEnumString* This, uint celt, ref char* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextStub(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8474, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringNextStub(this Windows thisApi, Span<IEnumString> This, uint celt, char** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8474, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringNextStub(this Windows thisApi, Span<IEnumString> This, uint celt, char** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8474, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringNextStub(this Windows thisApi, Span<IEnumString> This, uint celt, ref char* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextStub(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8474, Column 43 in objidlbase.h")]
        public static unsafe int IEnumStringNextStub(this Windows thisApi, Span<IEnumString> This, uint celt, ref char* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumStringNextStub(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8480, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadProxy(this Windows thisApi, ISequentialStream* This, void* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadProxy(This, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8480, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadProxy<T0>(this Windows thisApi, ISequentialStream* This, Span<T0> pv, uint cb, uint* pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadProxy(This, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8480, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadProxy<T0>(this Windows thisApi, ISequentialStream* This, Span<T0> pv, uint cb, Span<uint> pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadProxy(This, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8480, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadProxy(this Windows thisApi, Span<ISequentialStream> This, void* pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadProxy(ref This.GetPinnableReference(), pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8480, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadProxy(this Windows thisApi, Span<ISequentialStream> This, void* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadProxy(ref This.GetPinnableReference(), pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8480, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadProxy<T0>(this Windows thisApi, Span<ISequentialStream> This, Span<T0> pv, uint cb, uint* pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadProxy(ref This.GetPinnableReference(), ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8480, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadProxy<T0>(this Windows thisApi, Span<ISequentialStream> This, Span<T0> pv, uint cb, Span<uint> pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadProxy(ref This.GetPinnableReference(), ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, ISequentialStream* This, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(This, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, ISequentialStream* This, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(This, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, ISequentialStream* This, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(This, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, ISequentialStream* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(This, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, Span<ISequentialStream> This, byte* pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(ref This.GetPinnableReference(), pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, Span<ISequentialStream> This, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(ref This.GetPinnableReference(), pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, Span<ISequentialStream> This, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(ref This.GetPinnableReference(), ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, Span<ISequentialStream> This, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(ref This.GetPinnableReference(), ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, Span<ISequentialStream> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(ref This.GetPinnableReference(), pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8490, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamReadStub(this Windows thisApi, Span<ISequentialStream> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamReadStub(ref This.GetPinnableReference(), pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8496, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteProxy(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteProxy(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8496, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteProxy<T0>(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteProxy(This, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8496, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteProxy<T0>(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteProxy(This, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8496, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteProxy(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8496, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteProxy(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteProxy(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8496, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteProxy<T0>(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8496, Column 41 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteProxy<T0>(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(This, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(This, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, ISequentialStream* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8506, Column 43 in objidlbase.h")]
        public static unsafe int ISequentialStreamWriteStub(this Windows thisApi, Span<ISequentialStream> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ISequentialStreamWriteStub(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8512, Column 41 in objidlbase.h")]
        public static unsafe int IStreamSeekProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, long dlibMove, uint dwOrigin, Span<ulong> plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamSeekProxy(This, dlibMove, dwOrigin, ref plibNewPosition.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8512, Column 41 in objidlbase.h")]
        public static unsafe int IStreamSeekProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, long dlibMove, uint dwOrigin, ulong* plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamSeekProxy(ref This.GetPinnableReference(), dlibMove, dwOrigin, plibNewPosition);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8512, Column 41 in objidlbase.h")]
        public static unsafe int IStreamSeekProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, long dlibMove, uint dwOrigin, Span<ulong> plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamSeekProxy(ref This.GetPinnableReference(), dlibMove, dwOrigin, ref plibNewPosition.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8520, Column 43 in objidlbase.h")]
        public static unsafe int IStreamSeekStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, long dlibMove, uint dwOrigin, Span<ulong> plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamSeekStub(This, dlibMove, dwOrigin, ref plibNewPosition.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8520, Column 43 in objidlbase.h")]
        public static unsafe int IStreamSeekStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, long dlibMove, uint dwOrigin, ulong* plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamSeekStub(ref This.GetPinnableReference(), dlibMove, dwOrigin, plibNewPosition);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8520, Column 43 in objidlbase.h")]
        public static unsafe int IStreamSeekStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, long dlibMove, uint dwOrigin, Span<ulong> plibNewPosition)
        {
            // SpanOverloader
            return thisApi.IStreamSeekStub(ref This.GetPinnableReference(), dlibMove, dwOrigin, ref plibNewPosition.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(This, pstm, cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(This, pstm, cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(This, pstm, cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(This, ref pstm.GetPinnableReference(), cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(This, ref pstm.GetPinnableReference(), cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(This, ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(This, ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), pstm, cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), pstm, cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), pstm, cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), pstm, cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8526, Column 41 in objidlbase.h")]
        public static unsafe int IStreamCopyToProxy(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToProxy(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(This, pstm, cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(This, pstm, cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(This, pstm, cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(This, ref pstm.GetPinnableReference(), cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(This, ref pstm.GetPinnableReference(), cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(This, ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Silk.NET.Core.Win32Extras.IStream* This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(This, ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), pstm, cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), pstm, cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), pstm, cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Silk.NET.Core.Win32Extras.IStream* pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), pstm, cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, pcbRead, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, ulong* pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, pcbRead, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, ulong* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 8537, Column 43 in objidlbase.h")]
        public static unsafe int IStreamCopyToStub(this Windows thisApi, Span<Silk.NET.Core.Win32Extras.IStream> This, Span<Silk.NET.Core.Win32Extras.IStream> pstm, ulong cb, Span<ulong> pcbRead, Span<ulong> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IStreamCopyToStub(ref This.GetPinnableReference(), ref pstm.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference(), ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9306, Column 43 in objidl.h")]
        public static unsafe int IBindCtxRemoteSetBindOptionsProxy(this Windows thisApi, IBindCtx* This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxRemoteSetBindOptionsProxy(This, ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9306, Column 43 in objidl.h")]
        public static unsafe int IBindCtxRemoteSetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, BindOpts2* pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxRemoteSetBindOptionsProxy(ref This.GetPinnableReference(), pbindopts);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9306, Column 43 in objidl.h")]
        public static unsafe int IBindCtxRemoteSetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxRemoteSetBindOptionsProxy(ref This.GetPinnableReference(), ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9311, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteSetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteSetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9318, Column 43 in objidl.h")]
        public static unsafe int IBindCtxRemoteGetBindOptionsProxy(this Windows thisApi, IBindCtx* This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxRemoteGetBindOptionsProxy(This, ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9318, Column 43 in objidl.h")]
        public static unsafe int IBindCtxRemoteGetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, BindOpts2* pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxRemoteGetBindOptionsProxy(ref This.GetPinnableReference(), pbindopts);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9318, Column 43 in objidl.h")]
        public static unsafe int IBindCtxRemoteGetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxRemoteGetBindOptionsProxy(ref This.GetPinnableReference(), ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9323, Column 17 in objidl.h")]
        public static unsafe void IBindCtxRemoteGetBindOptionsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IBindCtxRemoteGetBindOptionsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9455, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerRemoteNextProxy(this Windows thisApi, IEnumMoniker* This, uint celt, IMoniker** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerRemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9455, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerRemoteNextProxy(this Windows thisApi, IEnumMoniker* This, uint celt, ref IMoniker* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerRemoteNextProxy(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9455, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerRemoteNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, IMoniker** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9455, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerRemoteNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, IMoniker** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9455, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerRemoteNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, ref IMoniker* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9455, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerRemoteNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, ref IMoniker* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9462, Column 17 in objidl.h")]
        public static unsafe void IEnumMonikerRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumMonikerRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9611, Column 43 in objidl.h")]
        public static unsafe int IRunnableObjectRemoteIsRunningProxy(this Windows thisApi, Span<IRunnableObject> This)
        {
            // SpanOverloader
            return thisApi.IRunnableObjectRemoteIsRunningProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 9615, Column 17 in objidl.h")]
        public static unsafe void IRunnableObjectRemoteIsRunningStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IRunnableObjectRemoteIsRunningStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10382, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10390, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToObjectStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToObjectStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, pbc, pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, pbc, pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10397, Column 43 in objidl.h")]
        public static unsafe int IMonikerRemoteBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerRemoteBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10405, Column 17 in objidl.h")]
        public static unsafe void IMonikerRemoteBindToStorageStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IMonikerRemoteBindToStorageStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10649, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGRemoteNextProxy(this Windows thisApi, IEnumSTATSTG* This, uint celt, STATSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGRemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10649, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGRemoteNextProxy(this Windows thisApi, IEnumSTATSTG* This, uint celt, Span<STATSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10649, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGRemoteNextProxy(this Windows thisApi, IEnumSTATSTG* This, uint celt, Span<STATSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10649, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, STATSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10649, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, STATSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10649, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, Span<STATSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10649, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, Span<STATSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10656, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 10998, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11008, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteOpenStreamStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteOpenStreamStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(This, ciidExclude, rgiidExclude, snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(This, ciidExclude, rgiidExclude, ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11015, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11023, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteCopyToStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteCopyToStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, IStorage* This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(This, reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, IStorage* This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(This, reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, byte* reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, byte* reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(ref This.GetPinnableReference(), reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(ref This.GetPinnableReference(), reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11030, Column 43 in objidl.h")]
        public static unsafe int IStorageRemoteEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageRemoteEnumElementsProxy(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11039, Column 17 in objidl.h")]
        public static unsafe void IStorageRemoteEnumElementsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IStorageRemoteEnumElementsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(This, ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(This, ulOffset, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(This, ulOffset, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(This, ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, byte* pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(ref This.GetPinnableReference(), ulOffset, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(ref This.GetPinnableReference(), ulOffset, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11539, Column 35 in objidl.h")]
        public static unsafe int ILockBytesRemoteReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteReadAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11547, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteReadAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteReadAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11554, Column 43 in objidl.h")]
        public static unsafe int ILockBytesRemoteWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesRemoteWriteAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11562, Column 17 in objidl.h")]
        public static unsafe void ILockBytesRemoteWriteAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ILockBytesRemoteWriteAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11719, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCRemoteNextProxy(this Windows thisApi, IEnumFORMATETC* This, uint celt, FORMATETC* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCRemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11719, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCRemoteNextProxy(this Windows thisApi, IEnumFORMATETC* This, uint celt, Span<FORMATETC> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11719, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCRemoteNextProxy(this Windows thisApi, IEnumFORMATETC* This, uint celt, Span<FORMATETC> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11719, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCRemoteNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, FORMATETC* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11719, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCRemoteNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, FORMATETC* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11719, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCRemoteNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, Span<FORMATETC> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11719, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCRemoteNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, Span<FORMATETC> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11726, Column 17 in objidl.h")]
        public static unsafe void IEnumFORMATETCRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumFORMATETCRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11880, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATARemoteNextProxy(this Windows thisApi, IEnumSTATDATA* This, uint celt, STATDATA* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATARemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11880, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATARemoteNextProxy(this Windows thisApi, IEnumSTATDATA* This, uint celt, Span<STATDATA> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATARemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11880, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATARemoteNextProxy(this Windows thisApi, IEnumSTATDATA* This, uint celt, Span<STATDATA> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATARemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11880, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATARemoteNextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, STATDATA* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATARemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11880, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATARemoteNextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, STATDATA* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATARemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11880, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATARemoteNextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, Span<STATDATA> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATARemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11880, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATARemoteNextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, Span<STATDATA> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATARemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 11887, Column 17 in objidl.h")]
        public static unsafe void IEnumSTATDATARemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATDATARemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12242, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnDataChangeProxy(this Windows thisApi, IAdviseSink* This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnDataChangeProxy(This, pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12242, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnDataChangeProxy(this Windows thisApi, IAdviseSink* This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12242, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnDataChangeProxy(this Windows thisApi, IAdviseSink* This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12242, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, FORMATETC* pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12242, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12242, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12242, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12248, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12255, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnViewChangeProxy(this Windows thisApi, Span<IAdviseSink> This, uint dwAspect, int lindex)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnViewChangeProxy(ref This.GetPinnableReference(), dwAspect, lindex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12261, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12268, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnRenameProxy(this Windows thisApi, IAdviseSink* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnRenameProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12268, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnRenameProxy(this Windows thisApi, Span<IAdviseSink> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnRenameProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12268, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnRenameProxy(this Windows thisApi, Span<IAdviseSink> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnRenameProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12273, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12280, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnSaveProxy(this Windows thisApi, Span<IAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnSaveProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12284, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12291, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkRemoteOnCloseProxy(this Windows thisApi, Span<IAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkRemoteOnCloseProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12295, Column 17 in objidl.h")]
        public static unsafe void IAdviseSinkRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12481, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(this Windows thisApi, AsyncIAdviseSink* This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(This, pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12481, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(this Windows thisApi, AsyncIAdviseSink* This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12481, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(this Windows thisApi, AsyncIAdviseSink* This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12481, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, FORMATETC* pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12481, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12481, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12481, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12487, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12494, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishRemoteOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12498, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnDataChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnDataChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12505, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnViewChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, uint dwAspect, int lindex)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeProxy(ref This.GetPinnableReference(), dwAspect, lindex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12511, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12518, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishRemoteOnViewChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12522, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnViewChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnViewChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12529, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnRenameProxy(this Windows thisApi, AsyncIAdviseSink* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnRenameProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12529, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnRenameProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnRenameProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12529, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnRenameProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnRenameProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12534, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12541, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishRemoteOnRenameProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishRemoteOnRenameProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12545, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnRenameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnRenameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12552, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnSaveProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnSaveProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12556, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12563, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishRemoteOnSaveProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishRemoteOnSaveProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12567, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12574, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginRemoteOnCloseProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginRemoteOnCloseProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12578, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12585, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishRemoteOnCloseProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishRemoteOnCloseProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12589, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishRemoteOnCloseStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishRemoteOnCloseStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12740, Column 43 in objidl.h")]
        public static unsafe int IAdviseSink2RemoteOnLinkSrcChangeProxy(this Windows thisApi, IAdviseSink2* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSink2RemoteOnLinkSrcChangeProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12740, Column 43 in objidl.h")]
        public static unsafe int IAdviseSink2RemoteOnLinkSrcChangeProxy(this Windows thisApi, Span<IAdviseSink2> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSink2RemoteOnLinkSrcChangeProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12740, Column 43 in objidl.h")]
        public static unsafe int IAdviseSink2RemoteOnLinkSrcChangeProxy(this Windows thisApi, Span<IAdviseSink2> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSink2RemoteOnLinkSrcChangeProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12745, Column 17 in objidl.h")]
        public static unsafe void IAdviseSink2RemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSink2RemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12926, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeProxy(this Windows thisApi, AsyncIAdviseSink2* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12926, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink2> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12926, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink2> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12931, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12938, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink2> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 12942, Column 17 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishRemoteOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13172, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataProxy(this Windows thisApi, IDataObject* This, FORMATETC* pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataProxy(This, pformatetcIn, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13172, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetcIn, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataProxy(This, ref pformatetcIn.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13172, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataProxy(This, ref pformatetcIn.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13172, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetcIn, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataProxy(ref This.GetPinnableReference(), pformatetcIn, pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13172, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataProxy(ref This.GetPinnableReference(), pformatetcIn, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13172, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetcIn, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataProxy(ref This.GetPinnableReference(), ref pformatetcIn.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13172, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataProxy(ref This.GetPinnableReference(), ref pformatetcIn.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13178, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13185, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataHereProxy(this Windows thisApi, IDataObject* This, FORMATETC* pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataHereProxy(This, pformatetc, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13185, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataHereProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataHereProxy(This, ref pformatetc.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13185, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataHereProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataHereProxy(This, ref pformatetc.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13185, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataHereProxy(ref This.GetPinnableReference(), pformatetc, pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13185, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataHereProxy(ref This.GetPinnableReference(), pformatetc, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13185, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataHereProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13185, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteGetDataHereProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13191, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteGetDataHereStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteGetDataHereStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13198, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteSetDataProxy(this Windows thisApi, IDataObject* This, FORMATETC* pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteSetDataProxy(This, pformatetc, ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13198, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteSetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, FlagStgmedium* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteSetDataProxy(This, ref pformatetc.GetPinnableReference(), pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13198, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteSetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteSetDataProxy(This, ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13198, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteSetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, FlagStgmedium* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteSetDataProxy(ref This.GetPinnableReference(), pformatetc, pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13198, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteSetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteSetDataProxy(ref This.GetPinnableReference(), pformatetc, ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13198, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteSetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, FlagStgmedium* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteSetDataProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13198, Column 43 in objidl.h")]
        public static unsafe int IDataObjectRemoteSetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectRemoteSetDataProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13205, Column 17 in objidl.h")]
        public static unsafe void IDataObjectRemoteSetDataStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDataObjectRemoteSetDataStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(This, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(This, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13830, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAppendProxy(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13837, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAppendStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAppendStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13844, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesRemoteFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesRemoteFillAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 13852, Column 17 in objidl.h")]
        public static unsafe void IFillLockBytesRemoteFillAtStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IFillLockBytesRemoteFillAtStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15463, Column 39 in objidl.h")]
        public static unsafe uint ASYNCSTGMEDIUMUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15463, Column 39 in objidl.h")]
        public static unsafe uint ASYNCSTGMEDIUMUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15463, Column 39 in objidl.h")]
        public static unsafe uint ASYNCSTGMEDIUMUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15464, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15465, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15466, Column 39 in objidl.h")]
        public static unsafe void ASYNCSTGMEDIUMUserFree(this Windows thisApi, uint* arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.ASYNCSTGMEDIUMUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15466, Column 39 in objidl.h")]
        public static unsafe void ASYNCSTGMEDIUMUserFree(this Windows thisApi, Span<uint> arg0, STGMEDIUM* arg1)
        {
            // SpanOverloader
            thisApi.ASYNCSTGMEDIUMUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15466, Column 39 in objidl.h")]
        public static unsafe void ASYNCSTGMEDIUMUserFree(this Windows thisApi, Span<uint> arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.ASYNCSTGMEDIUMUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15468, Column 39 in objidl.h")]
        public static unsafe uint CLIPFORMATUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15468, Column 39 in objidl.h")]
        public static unsafe uint CLIPFORMATUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15468, Column 39 in objidl.h")]
        public static unsafe uint CLIPFORMATUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15469, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15470, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15471, Column 39 in objidl.h")]
        public static unsafe void CLIPFORMATUserFree(this Windows thisApi, uint* arg0, Span<ushort> arg1)
        {
            // SpanOverloader
            thisApi.CLIPFORMATUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15471, Column 39 in objidl.h")]
        public static unsafe void CLIPFORMATUserFree(this Windows thisApi, Span<uint> arg0, ushort* arg1)
        {
            // SpanOverloader
            thisApi.CLIPFORMATUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15471, Column 39 in objidl.h")]
        public static unsafe void CLIPFORMATUserFree(this Windows thisApi, Span<uint> arg0, Span<ushort> arg1)
        {
            // SpanOverloader
            thisApi.CLIPFORMATUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15473, Column 39 in objidl.h")]
        public static unsafe uint FLAGSTGMEDIUMUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15473, Column 39 in objidl.h")]
        public static unsafe uint FLAGSTGMEDIUMUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15473, Column 39 in objidl.h")]
        public static unsafe uint FLAGSTGMEDIUMUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15474, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15475, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15476, Column 39 in objidl.h")]
        public static unsafe void FLAGSTGMEDIUMUserFree(this Windows thisApi, uint* arg0, Span<FlagStgmedium> arg1)
        {
            // SpanOverloader
            thisApi.FLAGSTGMEDIUMUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15476, Column 39 in objidl.h")]
        public static unsafe void FLAGSTGMEDIUMUserFree(this Windows thisApi, Span<uint> arg0, FlagStgmedium* arg1)
        {
            // SpanOverloader
            thisApi.FLAGSTGMEDIUMUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15476, Column 39 in objidl.h")]
        public static unsafe void FLAGSTGMEDIUMUserFree(this Windows thisApi, Span<uint> arg0, Span<FlagStgmedium> arg1)
        {
            // SpanOverloader
            thisApi.FLAGSTGMEDIUMUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15478, Column 39 in objidl.h")]
        public static unsafe uint HBITMAPUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15478, Column 39 in objidl.h")]
        public static unsafe uint HBITMAPUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15479, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15480, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15481, Column 39 in objidl.h")]
        public static unsafe void HBITMAPUserFree(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HBITMAPUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15481, Column 39 in objidl.h")]
        public static unsafe void HBITMAPUserFree(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HBITMAPUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15483, Column 39 in objidl.h")]
        public static unsafe uint HDCUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15483, Column 39 in objidl.h")]
        public static unsafe uint HDCUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15483, Column 39 in objidl.h")]
        public static unsafe uint HDCUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15484, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15485, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15486, Column 39 in objidl.h")]
        public static unsafe void HDCUserFree(this Windows thisApi, uint* arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HDCUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15486, Column 39 in objidl.h")]
        public static unsafe void HDCUserFree(this Windows thisApi, Span<uint> arg0, nint* arg1)
        {
            // SpanOverloader
            thisApi.HDCUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15486, Column 39 in objidl.h")]
        public static unsafe void HDCUserFree(this Windows thisApi, Span<uint> arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HDCUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15488, Column 39 in objidl.h")]
        public static unsafe uint HICONUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15488, Column 39 in objidl.h")]
        public static unsafe uint HICONUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15489, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15490, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15491, Column 39 in objidl.h")]
        public static unsafe void HICONUserFree(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HICONUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15491, Column 39 in objidl.h")]
        public static unsafe void HICONUserFree(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HICONUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15493, Column 39 in objidl.h")]
        public static unsafe uint SNBUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15493, Column 39 in objidl.h")]
        public static unsafe uint SNBUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15494, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15495, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15496, Column 39 in objidl.h")]
        public static unsafe void SNBUserFree(this Windows thisApi, Span<uint> arg0, char*** arg1)
        {
            // SpanOverloader
            thisApi.SNBUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15496, Column 39 in objidl.h")]
        public static unsafe void SNBUserFree(this Windows thisApi, Span<uint> arg0, ref char** arg1)
        {
            // SpanOverloader
            thisApi.SNBUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15498, Column 39 in objidl.h")]
        public static unsafe uint STGMEDIUMUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15498, Column 39 in objidl.h")]
        public static unsafe uint STGMEDIUMUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15498, Column 39 in objidl.h")]
        public static unsafe uint STGMEDIUMUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15499, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15500, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15501, Column 39 in objidl.h")]
        public static unsafe void STGMEDIUMUserFree(this Windows thisApi, uint* arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.STGMEDIUMUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15501, Column 39 in objidl.h")]
        public static unsafe void STGMEDIUMUserFree(this Windows thisApi, Span<uint> arg0, STGMEDIUM* arg1)
        {
            // SpanOverloader
            thisApi.STGMEDIUMUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15501, Column 39 in objidl.h")]
        public static unsafe void STGMEDIUMUserFree(this Windows thisApi, Span<uint> arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.STGMEDIUMUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15503, Column 39 in objidl.h")]
        public static unsafe uint ASYNCSTGMEDIUMUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15503, Column 39 in objidl.h")]
        public static unsafe uint ASYNCSTGMEDIUMUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15503, Column 39 in objidl.h")]
        public static unsafe uint ASYNCSTGMEDIUMUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15504, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15505, Column 29 in objidl.h")]
        public static unsafe byte* ASYNCSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.ASYNCSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15506, Column 39 in objidl.h")]
        public static unsafe void ASYNCSTGMEDIUMUserFree64(this Windows thisApi, uint* arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.ASYNCSTGMEDIUMUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15506, Column 39 in objidl.h")]
        public static unsafe void ASYNCSTGMEDIUMUserFree64(this Windows thisApi, Span<uint> arg0, STGMEDIUM* arg1)
        {
            // SpanOverloader
            thisApi.ASYNCSTGMEDIUMUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15506, Column 39 in objidl.h")]
        public static unsafe void ASYNCSTGMEDIUMUserFree64(this Windows thisApi, Span<uint> arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.ASYNCSTGMEDIUMUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15508, Column 39 in objidl.h")]
        public static unsafe uint CLIPFORMATUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15508, Column 39 in objidl.h")]
        public static unsafe uint CLIPFORMATUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15508, Column 39 in objidl.h")]
        public static unsafe uint CLIPFORMATUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15509, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ushort* arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15510, Column 29 in objidl.h")]
        public static unsafe byte* CLIPFORMATUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<ushort> arg2)
        {
            // SpanOverloader
            return thisApi.CLIPFORMATUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15511, Column 39 in objidl.h")]
        public static unsafe void CLIPFORMATUserFree64(this Windows thisApi, uint* arg0, Span<ushort> arg1)
        {
            // SpanOverloader
            thisApi.CLIPFORMATUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15511, Column 39 in objidl.h")]
        public static unsafe void CLIPFORMATUserFree64(this Windows thisApi, Span<uint> arg0, ushort* arg1)
        {
            // SpanOverloader
            thisApi.CLIPFORMATUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15511, Column 39 in objidl.h")]
        public static unsafe void CLIPFORMATUserFree64(this Windows thisApi, Span<uint> arg0, Span<ushort> arg1)
        {
            // SpanOverloader
            thisApi.CLIPFORMATUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15513, Column 39 in objidl.h")]
        public static unsafe uint FLAGSTGMEDIUMUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15513, Column 39 in objidl.h")]
        public static unsafe uint FLAGSTGMEDIUMUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15513, Column 39 in objidl.h")]
        public static unsafe uint FLAGSTGMEDIUMUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15514, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, FlagStgmedium* arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15515, Column 29 in objidl.h")]
        public static unsafe byte* FLAGSTGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<FlagStgmedium> arg2)
        {
            // SpanOverloader
            return thisApi.FLAGSTGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15516, Column 39 in objidl.h")]
        public static unsafe void FLAGSTGMEDIUMUserFree64(this Windows thisApi, uint* arg0, Span<FlagStgmedium> arg1)
        {
            // SpanOverloader
            thisApi.FLAGSTGMEDIUMUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15516, Column 39 in objidl.h")]
        public static unsafe void FLAGSTGMEDIUMUserFree64(this Windows thisApi, Span<uint> arg0, FlagStgmedium* arg1)
        {
            // SpanOverloader
            thisApi.FLAGSTGMEDIUMUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15516, Column 39 in objidl.h")]
        public static unsafe void FLAGSTGMEDIUMUserFree64(this Windows thisApi, Span<uint> arg0, Span<FlagStgmedium> arg1)
        {
            // SpanOverloader
            thisApi.FLAGSTGMEDIUMUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15518, Column 39 in objidl.h")]
        public static unsafe uint HBITMAPUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15518, Column 39 in objidl.h")]
        public static unsafe uint HBITMAPUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15519, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15520, Column 29 in objidl.h")]
        public static unsafe byte* HBITMAPUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HBITMAPUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15521, Column 39 in objidl.h")]
        public static unsafe void HBITMAPUserFree64(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HBITMAPUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15521, Column 39 in objidl.h")]
        public static unsafe void HBITMAPUserFree64(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HBITMAPUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15523, Column 39 in objidl.h")]
        public static unsafe uint HDCUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15523, Column 39 in objidl.h")]
        public static unsafe uint HDCUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15523, Column 39 in objidl.h")]
        public static unsafe uint HDCUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15524, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15525, Column 29 in objidl.h")]
        public static unsafe byte* HDCUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HDCUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15526, Column 39 in objidl.h")]
        public static unsafe void HDCUserFree64(this Windows thisApi, uint* arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HDCUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15526, Column 39 in objidl.h")]
        public static unsafe void HDCUserFree64(this Windows thisApi, Span<uint> arg0, nint* arg1)
        {
            // SpanOverloader
            thisApi.HDCUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15526, Column 39 in objidl.h")]
        public static unsafe void HDCUserFree64(this Windows thisApi, Span<uint> arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HDCUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15528, Column 39 in objidl.h")]
        public static unsafe uint HICONUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15528, Column 39 in objidl.h")]
        public static unsafe uint HICONUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15529, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15530, Column 29 in objidl.h")]
        public static unsafe byte* HICONUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HICONUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15531, Column 39 in objidl.h")]
        public static unsafe void HICONUserFree64(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HICONUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15531, Column 39 in objidl.h")]
        public static unsafe void HICONUserFree64(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HICONUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15533, Column 39 in objidl.h")]
        public static unsafe uint SNBUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15533, Column 39 in objidl.h")]
        public static unsafe uint SNBUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15534, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char*** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15535, Column 29 in objidl.h")]
        public static unsafe byte* SNBUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char** arg2)
        {
            // SpanOverloader
            return thisApi.SNBUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15536, Column 39 in objidl.h")]
        public static unsafe void SNBUserFree64(this Windows thisApi, Span<uint> arg0, char*** arg1)
        {
            // SpanOverloader
            thisApi.SNBUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15536, Column 39 in objidl.h")]
        public static unsafe void SNBUserFree64(this Windows thisApi, Span<uint> arg0, ref char** arg1)
        {
            // SpanOverloader
            thisApi.SNBUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15538, Column 39 in objidl.h")]
        public static unsafe uint STGMEDIUMUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15538, Column 39 in objidl.h")]
        public static unsafe uint STGMEDIUMUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15538, Column 39 in objidl.h")]
        public static unsafe uint STGMEDIUMUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15539, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, STGMEDIUM* arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15540, Column 29 in objidl.h")]
        public static unsafe byte* STGMEDIUMUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<STGMEDIUM> arg2)
        {
            // SpanOverloader
            return thisApi.STGMEDIUMUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15541, Column 39 in objidl.h")]
        public static unsafe void STGMEDIUMUserFree64(this Windows thisApi, uint* arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.STGMEDIUMUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15541, Column 39 in objidl.h")]
        public static unsafe void STGMEDIUMUserFree64(this Windows thisApi, Span<uint> arg0, STGMEDIUM* arg1)
        {
            // SpanOverloader
            thisApi.STGMEDIUMUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15541, Column 39 in objidl.h")]
        public static unsafe void STGMEDIUMUserFree64(this Windows thisApi, Span<uint> arg0, Span<STGMEDIUM> arg1)
        {
            // SpanOverloader
            thisApi.STGMEDIUMUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15638, Column 41 in objidl.h")]
        public static unsafe int IBindCtxSetBindOptionsProxy(this Windows thisApi, IBindCtx* This, Span<BindOpts> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxSetBindOptionsProxy(This, ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15638, Column 41 in objidl.h")]
        public static unsafe int IBindCtxSetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, BindOpts* pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxSetBindOptionsProxy(ref This.GetPinnableReference(), pbindopts);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15638, Column 41 in objidl.h")]
        public static unsafe int IBindCtxSetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, Span<BindOpts> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxSetBindOptionsProxy(ref This.GetPinnableReference(), ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15644, Column 43 in objidl.h")]
        public static unsafe int IBindCtxSetBindOptionsStub(this Windows thisApi, IBindCtx* This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxSetBindOptionsStub(This, ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15644, Column 43 in objidl.h")]
        public static unsafe int IBindCtxSetBindOptionsStub(this Windows thisApi, Span<IBindCtx> This, BindOpts2* pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxSetBindOptionsStub(ref This.GetPinnableReference(), pbindopts);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15644, Column 43 in objidl.h")]
        public static unsafe int IBindCtxSetBindOptionsStub(this Windows thisApi, Span<IBindCtx> This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxSetBindOptionsStub(ref This.GetPinnableReference(), ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15648, Column 41 in objidl.h")]
        public static unsafe int IBindCtxGetBindOptionsProxy(this Windows thisApi, IBindCtx* This, Span<BindOpts> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxGetBindOptionsProxy(This, ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15648, Column 41 in objidl.h")]
        public static unsafe int IBindCtxGetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, BindOpts* pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxGetBindOptionsProxy(ref This.GetPinnableReference(), pbindopts);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15648, Column 41 in objidl.h")]
        public static unsafe int IBindCtxGetBindOptionsProxy(this Windows thisApi, Span<IBindCtx> This, Span<BindOpts> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxGetBindOptionsProxy(ref This.GetPinnableReference(), ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15654, Column 43 in objidl.h")]
        public static unsafe int IBindCtxGetBindOptionsStub(this Windows thisApi, IBindCtx* This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxGetBindOptionsStub(This, ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15654, Column 43 in objidl.h")]
        public static unsafe int IBindCtxGetBindOptionsStub(this Windows thisApi, Span<IBindCtx> This, BindOpts2* pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxGetBindOptionsStub(ref This.GetPinnableReference(), pbindopts);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15654, Column 43 in objidl.h")]
        public static unsafe int IBindCtxGetBindOptionsStub(this Windows thisApi, Span<IBindCtx> This, Span<BindOpts2> pbindopts)
        {
            // SpanOverloader
            return thisApi.IBindCtxGetBindOptionsStub(ref This.GetPinnableReference(), ref pbindopts.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15658, Column 41 in objidl.h")]
        public static unsafe int IEnumMonikerNextProxy(this Windows thisApi, IEnumMoniker* This, uint celt, IMoniker** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15658, Column 41 in objidl.h")]
        public static unsafe int IEnumMonikerNextProxy(this Windows thisApi, IEnumMoniker* This, uint celt, ref IMoniker* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextProxy(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15658, Column 41 in objidl.h")]
        public static unsafe int IEnumMonikerNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, IMoniker** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15658, Column 41 in objidl.h")]
        public static unsafe int IEnumMonikerNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, IMoniker** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15658, Column 41 in objidl.h")]
        public static unsafe int IEnumMonikerNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, ref IMoniker* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15658, Column 41 in objidl.h")]
        public static unsafe int IEnumMonikerNextProxy(this Windows thisApi, Span<IEnumMoniker> This, uint celt, ref IMoniker* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextProxy(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15667, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerNextStub(this Windows thisApi, IEnumMoniker* This, uint celt, IMoniker** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15667, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerNextStub(this Windows thisApi, IEnumMoniker* This, uint celt, ref IMoniker* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextStub(This, celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15667, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerNextStub(this Windows thisApi, Span<IEnumMoniker> This, uint celt, IMoniker** rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15667, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerNextStub(this Windows thisApi, Span<IEnumMoniker> This, uint celt, IMoniker** rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15667, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerNextStub(this Windows thisApi, Span<IEnumMoniker> This, uint celt, ref IMoniker* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextStub(ref This.GetPinnableReference(), celt, ref rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15667, Column 43 in objidl.h")]
        public static unsafe int IEnumMonikerNextStub(this Windows thisApi, Span<IEnumMoniker> This, uint celt, ref IMoniker* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumMonikerNextStub(ref This.GetPinnableReference(), celt, ref rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15673, Column 38 in objidl.h")]
        public static unsafe Silk.NET.Core.Bool32 IRunnableObjectIsRunningProxy(this Windows thisApi, Span<IRunnableObject> This)
        {
            // SpanOverloader
            return thisApi.IRunnableObjectIsRunningProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15677, Column 43 in objidl.h")]
        public static unsafe int IRunnableObjectIsRunningStub(this Windows thisApi, Span<IRunnableObject> This)
        {
            // SpanOverloader
            return thisApi.IRunnableObjectIsRunningStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, void** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15680, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToObjectProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref void* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riidResult, ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, Silk.NET.Core.Native.IUnknown** ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15692, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToObjectStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riidResult, ref Silk.NET.Core.Native.IUnknown* ppvResult)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToObjectStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riidResult.GetPinnableReference(), ref ppvResult);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, pbc, pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, pbc, pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15699, Column 41 in objidl.h")]
        public static unsafe int IMonikerBindToStorageProxy(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageProxy(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, pbc, pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, pbc, pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, pbc, ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, pbc, ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, IMoniker* This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(This, ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, IBindCtx* pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), pbc, ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, IMoniker* pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), pmkToLeft, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15711, Column 43 in objidl.h")]
        public static unsafe int IMonikerBindToStorageStub(this Windows thisApi, Span<IMoniker> This, Span<IBindCtx> pbc, Span<IMoniker> pmkToLeft, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IMonikerBindToStorageStub(ref This.GetPinnableReference(), ref pbc.GetPinnableReference(), ref pmkToLeft.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15718, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextProxy(this Windows thisApi, IEnumSTATSTG* This, uint celt, STATSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15718, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextProxy(this Windows thisApi, IEnumSTATSTG* This, uint celt, Span<STATSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15718, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextProxy(this Windows thisApi, IEnumSTATSTG* This, uint celt, Span<STATSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15718, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, STATSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15718, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, STATSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15718, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, Span<STATSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15718, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextProxy(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, Span<STATSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15727, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextStub(this Windows thisApi, IEnumSTATSTG* This, uint celt, STATSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15727, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextStub(this Windows thisApi, IEnumSTATSTG* This, uint celt, Span<STATSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextStub(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15727, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextStub(this Windows thisApi, IEnumSTATSTG* This, uint celt, Span<STATSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextStub(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15727, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextStub(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, STATSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15727, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextStub(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, STATSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15727, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextStub(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, Span<STATSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15727, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATSTGNextStub(this Windows thisApi, Span<IEnumSTATSTG> This, uint celt, Span<STATSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATSTGNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, void* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, in pwcsName.GetPinnableReference(), reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, void* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, in pwcsName.GetPinnableReference(), reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, in pwcsName.GetPinnableReference(), ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, in pwcsName.GetPinnableReference(), ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(This, pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, void* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, void* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, void* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, void* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, void* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, void* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15733, Column 41 in objidl.h")]
        public static unsafe int IStorageOpenStreamProxy<T0>(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, Span<T0> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamProxy(ref This.GetPinnableReference(), pwcsName, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, IStorage* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(This, pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), in pwcsName.GetPinnableReference(), cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, byte* reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, Span<byte> reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, ref reserved1.GetPinnableReference(), grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, Silk.NET.Core.Win32Extras.IStream** ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15745, Column 43 in objidl.h")]
        public static unsafe int IStorageOpenStreamStub(this Windows thisApi, Span<IStorage> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pwcsName, uint cbReserved1, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved1, uint grfMode, uint reserved2, ref Silk.NET.Core.Win32Extras.IStream* ppstm)
        {
            // SpanOverloader
            return thisApi.IStorageOpenStreamStub(ref This.GetPinnableReference(), pwcsName, cbReserved1, reserved1, grfMode, reserved2, ref ppstm);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(This, ciidExclude, rgiidExclude, snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(This, ciidExclude, rgiidExclude, ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(This, ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15754, Column 41 in objidl.h")]
        public static unsafe int IStorageCopyToProxy(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToProxy(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(This, ciidExclude, rgiidExclude, snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(This, ciidExclude, rgiidExclude, ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(This, ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(This, ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(This, ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, IStorage* This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(This, ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, rgiidExclude, ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, char** snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, IStorage* pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, pstgDest);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15765, Column 43 in objidl.h")]
        public static unsafe int IStorageCopyToStub(this Windows thisApi, Span<IStorage> This, uint ciidExclude, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> rgiidExclude, ref char* snbExclude, Span<IStorage> pstgDest)
        {
            // SpanOverloader
            return thisApi.IStorageCopyToStub(ref This.GetPinnableReference(), ciidExclude, in rgiidExclude.GetPinnableReference(), ref snbExclude, ref pstgDest.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15772, Column 41 in objidl.h")]
        public static unsafe int IStorageEnumElementsProxy<T0>(this Windows thisApi, IStorage* This, uint reserved1, Span<T0> reserved2, uint reserved3, IEnumSTATSTG** ppenum) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsProxy(This, reserved1, ref reserved2.GetPinnableReference(), reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15772, Column 41 in objidl.h")]
        public static unsafe int IStorageEnumElementsProxy<T0>(this Windows thisApi, IStorage* This, uint reserved1, Span<T0> reserved2, uint reserved3, ref IEnumSTATSTG* ppenum) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsProxy(This, reserved1, ref reserved2.GetPinnableReference(), reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15772, Column 41 in objidl.h")]
        public static unsafe int IStorageEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, void* reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsProxy(ref This.GetPinnableReference(), reserved1, reserved2, reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15772, Column 41 in objidl.h")]
        public static unsafe int IStorageEnumElementsProxy(this Windows thisApi, Span<IStorage> This, uint reserved1, void* reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsProxy(ref This.GetPinnableReference(), reserved1, reserved2, reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15772, Column 41 in objidl.h")]
        public static unsafe int IStorageEnumElementsProxy<T0>(this Windows thisApi, Span<IStorage> This, uint reserved1, Span<T0> reserved2, uint reserved3, IEnumSTATSTG** ppenum) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsProxy(ref This.GetPinnableReference(), reserved1, ref reserved2.GetPinnableReference(), reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15772, Column 41 in objidl.h")]
        public static unsafe int IStorageEnumElementsProxy<T0>(this Windows thisApi, Span<IStorage> This, uint reserved1, Span<T0> reserved2, uint reserved3, ref IEnumSTATSTG* ppenum) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsProxy(ref This.GetPinnableReference(), reserved1, ref reserved2.GetPinnableReference(), reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, IStorage* This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(This, reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, IStorage* This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(This, reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, byte* reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, byte* reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(ref This.GetPinnableReference(), reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, Span<byte> reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(ref This.GetPinnableReference(), reserved1, cbReserved2, ref reserved2.GetPinnableReference(), reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved2, uint reserved3, IEnumSTATSTG** ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15784, Column 43 in objidl.h")]
        public static unsafe int IStorageEnumElementsStub(this Windows thisApi, Span<IStorage> This, uint reserved1, uint cbReserved2, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string reserved2, uint reserved3, ref IEnumSTATSTG* ppenum)
        {
            // SpanOverloader
            return thisApi.IStorageEnumElementsStub(ref This.GetPinnableReference(), reserved1, cbReserved2, reserved2, reserved3, ref ppenum);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15792, Column 41 in objidl.h")]
        public static unsafe int ILockBytesReadAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, void* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtProxy(This, ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15792, Column 41 in objidl.h")]
        public static unsafe int ILockBytesReadAtProxy<T0>(this Windows thisApi, ILockBytes* This, ulong ulOffset, Span<T0> pv, uint cb, uint* pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtProxy(This, ulOffset, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15792, Column 41 in objidl.h")]
        public static unsafe int ILockBytesReadAtProxy<T0>(this Windows thisApi, ILockBytes* This, ulong ulOffset, Span<T0> pv, uint cb, Span<uint> pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtProxy(This, ulOffset, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15792, Column 41 in objidl.h")]
        public static unsafe int ILockBytesReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, void* pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15792, Column 41 in objidl.h")]
        public static unsafe int ILockBytesReadAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, void* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15792, Column 41 in objidl.h")]
        public static unsafe int ILockBytesReadAtProxy<T0>(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, Span<T0> pv, uint cb, uint* pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtProxy(ref This.GetPinnableReference(), ulOffset, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15792, Column 41 in objidl.h")]
        public static unsafe int ILockBytesReadAtProxy<T0>(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, Span<T0> pv, uint cb, Span<uint> pcbRead) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtProxy(ref This.GetPinnableReference(), ulOffset, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(This, ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(This, ulOffset, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(This, ulOffset, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(This, ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, byte* pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, byte* pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, Span<byte> pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(ref This.GetPinnableReference(), ulOffset, ref pv.GetPinnableReference(), cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, Span<byte> pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(ref This.GetPinnableReference(), ulOffset, ref pv.GetPinnableReference(), cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbRead);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15802, Column 35 in objidl.h")]
        public static unsafe int ILockBytesReadAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbRead)
        {
            // SpanOverloader
            return thisApi.ILockBytesReadAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbRead.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15809, Column 41 in objidl.h")]
        public static unsafe int ILockBytesWriteAtProxy(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtProxy(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15809, Column 41 in objidl.h")]
        public static unsafe int ILockBytesWriteAtProxy<T0>(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15809, Column 41 in objidl.h")]
        public static unsafe int ILockBytesWriteAtProxy<T0>(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15809, Column 41 in objidl.h")]
        public static unsafe int ILockBytesWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15809, Column 41 in objidl.h")]
        public static unsafe int ILockBytesWriteAtProxy(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15809, Column 41 in objidl.h")]
        public static unsafe int ILockBytesWriteAtProxy<T0>(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15809, Column 41 in objidl.h")]
        public static unsafe int ILockBytesWriteAtProxy<T0>(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(This, ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(This, ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, ILockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15819, Column 43 in objidl.h")]
        public static unsafe int ILockBytesWriteAtStub(this Windows thisApi, Span<ILockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.ILockBytesWriteAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15826, Column 41 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextProxy(this Windows thisApi, IEnumFORMATETC* This, uint celt, FORMATETC* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15826, Column 41 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextProxy(this Windows thisApi, IEnumFORMATETC* This, uint celt, Span<FORMATETC> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15826, Column 41 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextProxy(this Windows thisApi, IEnumFORMATETC* This, uint celt, Span<FORMATETC> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15826, Column 41 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, FORMATETC* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15826, Column 41 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, FORMATETC* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15826, Column 41 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, Span<FORMATETC> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15826, Column 41 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextProxy(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, Span<FORMATETC> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15835, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextStub(this Windows thisApi, IEnumFORMATETC* This, uint celt, FORMATETC* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15835, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextStub(this Windows thisApi, IEnumFORMATETC* This, uint celt, Span<FORMATETC> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextStub(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15835, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextStub(this Windows thisApi, IEnumFORMATETC* This, uint celt, Span<FORMATETC> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextStub(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15835, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextStub(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, FORMATETC* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15835, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextStub(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, FORMATETC* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15835, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextStub(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, Span<FORMATETC> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15835, Column 43 in objidl.h")]
        public static unsafe int IEnumFORMATETCNextStub(this Windows thisApi, Span<IEnumFORMATETC> This, uint celt, Span<FORMATETC> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumFORMATETCNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15841, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATDATANextProxy(this Windows thisApi, IEnumSTATDATA* This, uint celt, STATDATA* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15841, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATDATANextProxy(this Windows thisApi, IEnumSTATDATA* This, uint celt, Span<STATDATA> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15841, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATDATANextProxy(this Windows thisApi, IEnumSTATDATA* This, uint celt, Span<STATDATA> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15841, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATDATANextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, STATDATA* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15841, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATDATANextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, STATDATA* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15841, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATDATANextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, Span<STATDATA> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15841, Column 41 in objidl.h")]
        public static unsafe int IEnumSTATDATANextProxy(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, Span<STATDATA> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15850, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATANextStub(this Windows thisApi, IEnumSTATDATA* This, uint celt, STATDATA* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15850, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATANextStub(this Windows thisApi, IEnumSTATDATA* This, uint celt, Span<STATDATA> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextStub(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15850, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATANextStub(this Windows thisApi, IEnumSTATDATA* This, uint celt, Span<STATDATA> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextStub(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15850, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATANextStub(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, STATDATA* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15850, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATANextStub(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, STATDATA* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15850, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATANextStub(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, Span<STATDATA> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15850, Column 43 in objidl.h")]
        public static unsafe int IEnumSTATDATANextStub(this Windows thisApi, Span<IEnumSTATDATA> This, uint celt, Span<STATDATA> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATDATANextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15856, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnDataChangeProxy(this Windows thisApi, IAdviseSink* This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnDataChangeProxy(This, pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15856, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnDataChangeProxy(this Windows thisApi, IAdviseSink* This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15856, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnDataChangeProxy(this Windows thisApi, IAdviseSink* This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15856, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, FORMATETC* pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15856, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15856, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15856, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnDataChangeProxy(this Windows thisApi, Span<IAdviseSink> This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15864, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnDataChangeStub(this Windows thisApi, IAdviseSink* This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnDataChangeStub(This, pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15864, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnDataChangeStub(this Windows thisApi, IAdviseSink* This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnDataChangeStub(This, ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15864, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnDataChangeStub(this Windows thisApi, IAdviseSink* This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnDataChangeStub(This, ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15864, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnDataChangeStub(this Windows thisApi, Span<IAdviseSink> This, FORMATETC* pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnDataChangeStub(ref This.GetPinnableReference(), pFormatetc, pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15864, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnDataChangeStub(this Windows thisApi, Span<IAdviseSink> This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnDataChangeStub(ref This.GetPinnableReference(), pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15864, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnDataChangeStub(this Windows thisApi, Span<IAdviseSink> This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnDataChangeStub(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15864, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnDataChangeStub(this Windows thisApi, Span<IAdviseSink> This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnDataChangeStub(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15869, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnViewChangeProxy(this Windows thisApi, Span<IAdviseSink> This, uint dwAspect, int lindex)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnViewChangeProxy(ref This.GetPinnableReference(), dwAspect, lindex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15875, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnViewChangeStub(this Windows thisApi, Span<IAdviseSink> This, uint dwAspect, int lindex)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnViewChangeStub(ref This.GetPinnableReference(), dwAspect, lindex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15880, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnRenameProxy(this Windows thisApi, IAdviseSink* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnRenameProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15880, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnRenameProxy(this Windows thisApi, Span<IAdviseSink> This, IMoniker* pmk)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnRenameProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15880, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnRenameProxy(this Windows thisApi, Span<IAdviseSink> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnRenameProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15886, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnRenameStub(this Windows thisApi, IAdviseSink* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnRenameStub(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15886, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnRenameStub(this Windows thisApi, Span<IAdviseSink> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnRenameStub(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15886, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnRenameStub(this Windows thisApi, Span<IAdviseSink> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnRenameStub(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15890, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnSaveProxy(this Windows thisApi, Span<IAdviseSink> This)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnSaveProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15894, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnSaveStub(this Windows thisApi, Span<IAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnSaveStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15897, Column 38 in objidl.h")]
        public static unsafe void IAdviseSinkOnCloseProxy(this Windows thisApi, Span<IAdviseSink> This)
        {
            // SpanOverloader
            thisApi.IAdviseSinkOnCloseProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15901, Column 43 in objidl.h")]
        public static unsafe int IAdviseSinkOnCloseStub(this Windows thisApi, Span<IAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkOnCloseStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15904, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnDataChangeProxy(this Windows thisApi, AsyncIAdviseSink* This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnDataChangeProxy(This, pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15904, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnDataChangeProxy(this Windows thisApi, AsyncIAdviseSink* This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15904, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnDataChangeProxy(this Windows thisApi, AsyncIAdviseSink* This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnDataChangeProxy(This, ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15904, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, FORMATETC* pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15904, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnDataChangeProxy(ref This.GetPinnableReference(), pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15904, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15904, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnDataChangeProxy(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15912, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnDataChangeStub(this Windows thisApi, AsyncIAdviseSink* This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnDataChangeStub(This, pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15912, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnDataChangeStub(this Windows thisApi, AsyncIAdviseSink* This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnDataChangeStub(This, ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15912, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnDataChangeStub(this Windows thisApi, AsyncIAdviseSink* This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnDataChangeStub(This, ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15912, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnDataChangeStub(this Windows thisApi, Span<AsyncIAdviseSink> This, FORMATETC* pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnDataChangeStub(ref This.GetPinnableReference(), pFormatetc, pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15912, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnDataChangeStub(this Windows thisApi, Span<AsyncIAdviseSink> This, FORMATETC* pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnDataChangeStub(ref This.GetPinnableReference(), pFormatetc, ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15912, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnDataChangeStub(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<FORMATETC> pFormatetc, STGMEDIUM* pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnDataChangeStub(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), pStgmed);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15912, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnDataChangeStub(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<FORMATETC> pFormatetc, Span<STGMEDIUM> pStgmed)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnDataChangeStub(ref This.GetPinnableReference(), ref pFormatetc.GetPinnableReference(), ref pStgmed.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15917, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishOnDataChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishOnDataChangeProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15921, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishOnDataChangeStub(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishOnDataChangeStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15924, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnViewChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, uint dwAspect, int lindex)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnViewChangeProxy(ref This.GetPinnableReference(), dwAspect, lindex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15930, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnViewChangeStub(this Windows thisApi, Span<AsyncIAdviseSink> This, uint dwAspect, int lindex)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnViewChangeStub(ref This.GetPinnableReference(), dwAspect, lindex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15935, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishOnViewChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishOnViewChangeProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15939, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishOnViewChangeStub(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishOnViewChangeStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15942, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnRenameProxy(this Windows thisApi, AsyncIAdviseSink* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnRenameProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15942, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnRenameProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, IMoniker* pmk)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnRenameProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15942, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnRenameProxy(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnRenameProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15948, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnRenameStub(this Windows thisApi, AsyncIAdviseSink* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnRenameStub(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15948, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnRenameStub(this Windows thisApi, Span<AsyncIAdviseSink> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnRenameStub(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15948, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnRenameStub(this Windows thisApi, Span<AsyncIAdviseSink> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnRenameStub(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15952, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishOnRenameProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishOnRenameProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15956, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishOnRenameStub(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishOnRenameStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15959, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnSaveProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnSaveProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15963, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnSaveStub(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnSaveStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15966, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishOnSaveProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishOnSaveProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15970, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishOnSaveStub(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishOnSaveStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15973, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkBeginOnCloseProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkBeginOnCloseProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15977, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkBeginOnCloseStub(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkBeginOnCloseStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15980, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSinkFinishOnCloseProxy(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSinkFinishOnCloseProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15984, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSinkFinishOnCloseStub(this Windows thisApi, Span<AsyncIAdviseSink> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSinkFinishOnCloseStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15987, Column 38 in objidl.h")]
        public static unsafe void IAdviseSink2OnLinkSrcChangeProxy(this Windows thisApi, IAdviseSink2* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.IAdviseSink2OnLinkSrcChangeProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15987, Column 38 in objidl.h")]
        public static unsafe void IAdviseSink2OnLinkSrcChangeProxy(this Windows thisApi, Span<IAdviseSink2> This, IMoniker* pmk)
        {
            // SpanOverloader
            thisApi.IAdviseSink2OnLinkSrcChangeProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15987, Column 38 in objidl.h")]
        public static unsafe void IAdviseSink2OnLinkSrcChangeProxy(this Windows thisApi, Span<IAdviseSink2> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.IAdviseSink2OnLinkSrcChangeProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15993, Column 43 in objidl.h")]
        public static unsafe int IAdviseSink2OnLinkSrcChangeStub(this Windows thisApi, IAdviseSink2* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSink2OnLinkSrcChangeStub(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15993, Column 43 in objidl.h")]
        public static unsafe int IAdviseSink2OnLinkSrcChangeStub(this Windows thisApi, Span<IAdviseSink2> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSink2OnLinkSrcChangeStub(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15993, Column 43 in objidl.h")]
        public static unsafe int IAdviseSink2OnLinkSrcChangeStub(this Windows thisApi, Span<IAdviseSink2> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.IAdviseSink2OnLinkSrcChangeStub(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15997, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginOnLinkSrcChangeProxy(this Windows thisApi, AsyncIAdviseSink2* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginOnLinkSrcChangeProxy(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15997, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginOnLinkSrcChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink2> This, IMoniker* pmk)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginOnLinkSrcChangeProxy(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 15997, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2BeginOnLinkSrcChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink2> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2BeginOnLinkSrcChangeProxy(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16003, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2BeginOnLinkSrcChangeStub(this Windows thisApi, AsyncIAdviseSink2* This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2BeginOnLinkSrcChangeStub(This, ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16003, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2BeginOnLinkSrcChangeStub(this Windows thisApi, Span<AsyncIAdviseSink2> This, IMoniker* pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2BeginOnLinkSrcChangeStub(ref This.GetPinnableReference(), pmk);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16003, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2BeginOnLinkSrcChangeStub(this Windows thisApi, Span<AsyncIAdviseSink2> This, Span<IMoniker> pmk)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2BeginOnLinkSrcChangeStub(ref This.GetPinnableReference(), ref pmk.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16007, Column 38 in objidl.h")]
        public static unsafe void AsyncIAdviseSink2FinishOnLinkSrcChangeProxy(this Windows thisApi, Span<AsyncIAdviseSink2> This)
        {
            // SpanOverloader
            thisApi.AsyncIAdviseSink2FinishOnLinkSrcChangeProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16011, Column 43 in objidl.h")]
        public static unsafe int AsyncIAdviseSink2FinishOnLinkSrcChangeStub(this Windows thisApi, Span<AsyncIAdviseSink2> This)
        {
            // SpanOverloader
            return thisApi.AsyncIAdviseSink2FinishOnLinkSrcChangeStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16014, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataProxy(this Windows thisApi, IDataObject* This, FORMATETC* pformatetcIn, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataProxy(This, pformatetcIn, ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16014, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetcIn, STGMEDIUM* pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataProxy(This, ref pformatetcIn.GetPinnableReference(), pmedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16014, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetcIn, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataProxy(This, ref pformatetcIn.GetPinnableReference(), ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16014, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetcIn, STGMEDIUM* pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataProxy(ref This.GetPinnableReference(), pformatetcIn, pmedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16014, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetcIn, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataProxy(ref This.GetPinnableReference(), pformatetcIn, ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16014, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetcIn, STGMEDIUM* pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataProxy(ref This.GetPinnableReference(), ref pformatetcIn.GetPinnableReference(), pmedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16014, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetcIn, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataProxy(ref This.GetPinnableReference(), ref pformatetcIn.GetPinnableReference(), ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16022, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataStub(this Windows thisApi, IDataObject* This, FORMATETC* pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataStub(This, pformatetcIn, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16022, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataStub(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetcIn, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataStub(This, ref pformatetcIn.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16022, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataStub(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataStub(This, ref pformatetcIn.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16022, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataStub(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetcIn, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataStub(ref This.GetPinnableReference(), pformatetcIn, pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16022, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataStub(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataStub(ref This.GetPinnableReference(), pformatetcIn, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16022, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataStub(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetcIn, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataStub(ref This.GetPinnableReference(), ref pformatetcIn.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16022, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataStub(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetcIn, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataStub(ref This.GetPinnableReference(), ref pformatetcIn.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16027, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereProxy(this Windows thisApi, IDataObject* This, FORMATETC* pformatetc, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereProxy(This, pformatetc, ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16027, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, STGMEDIUM* pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereProxy(This, ref pformatetc.GetPinnableReference(), pmedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16027, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereProxy(This, ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16027, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, STGMEDIUM* pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereProxy(ref This.GetPinnableReference(), pformatetc, pmedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16027, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereProxy(ref This.GetPinnableReference(), pformatetc, ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16027, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, STGMEDIUM* pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), pmedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16027, Column 41 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pmedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16035, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereStub(this Windows thisApi, IDataObject* This, FORMATETC* pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereStub(This, pformatetc, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16035, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereStub(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereStub(This, ref pformatetc.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16035, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereStub(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereStub(This, ref pformatetc.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16035, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereStub(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereStub(ref This.GetPinnableReference(), pformatetc, pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16035, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereStub(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereStub(ref This.GetPinnableReference(), pformatetc, ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16035, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereStub(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, STGMEDIUM* pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereStub(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), pRemoteMedium);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16035, Column 43 in objidl.h")]
        public static unsafe int IDataObjectGetDataHereStub(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pRemoteMedium)
        {
            // SpanOverloader
            return thisApi.IDataObjectGetDataHereStub(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), ref pRemoteMedium.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16040, Column 41 in objidl.h")]
        public static unsafe int IDataObjectSetDataProxy(this Windows thisApi, IDataObject* This, FORMATETC* pformatetc, Span<STGMEDIUM> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataProxy(This, pformatetc, ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16040, Column 41 in objidl.h")]
        public static unsafe int IDataObjectSetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, STGMEDIUM* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataProxy(This, ref pformatetc.GetPinnableReference(), pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16040, Column 41 in objidl.h")]
        public static unsafe int IDataObjectSetDataProxy(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataProxy(This, ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16040, Column 41 in objidl.h")]
        public static unsafe int IDataObjectSetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, STGMEDIUM* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataProxy(ref This.GetPinnableReference(), pformatetc, pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16040, Column 41 in objidl.h")]
        public static unsafe int IDataObjectSetDataProxy(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, Span<STGMEDIUM> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataProxy(ref This.GetPinnableReference(), pformatetc, ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16040, Column 41 in objidl.h")]
        public static unsafe int IDataObjectSetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, STGMEDIUM* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16040, Column 41 in objidl.h")]
        public static unsafe int IDataObjectSetDataProxy(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, Span<STGMEDIUM> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataProxy(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16049, Column 43 in objidl.h")]
        public static unsafe int IDataObjectSetDataStub(this Windows thisApi, IDataObject* This, FORMATETC* pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataStub(This, pformatetc, ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16049, Column 43 in objidl.h")]
        public static unsafe int IDataObjectSetDataStub(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, FlagStgmedium* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataStub(This, ref pformatetc.GetPinnableReference(), pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16049, Column 43 in objidl.h")]
        public static unsafe int IDataObjectSetDataStub(this Windows thisApi, IDataObject* This, Span<FORMATETC> pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataStub(This, ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16049, Column 43 in objidl.h")]
        public static unsafe int IDataObjectSetDataStub(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, FlagStgmedium* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataStub(ref This.GetPinnableReference(), pformatetc, pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16049, Column 43 in objidl.h")]
        public static unsafe int IDataObjectSetDataStub(this Windows thisApi, Span<IDataObject> This, FORMATETC* pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataStub(ref This.GetPinnableReference(), pformatetc, ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16049, Column 43 in objidl.h")]
        public static unsafe int IDataObjectSetDataStub(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, FlagStgmedium* pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataStub(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), pmedium, fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16049, Column 43 in objidl.h")]
        public static unsafe int IDataObjectSetDataStub(this Windows thisApi, Span<IDataObject> This, Span<FORMATETC> pformatetc, Span<FlagStgmedium> pmedium, Silk.NET.Core.Bool32 fRelease)
        {
            // SpanOverloader
            return thisApi.IDataObjectSetDataStub(ref This.GetPinnableReference(), ref pformatetc.GetPinnableReference(), ref pmedium.GetPinnableReference(), fRelease);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16055, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendProxy(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendProxy(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16055, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendProxy<T0>(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendProxy(This, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16055, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendProxy<T0>(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendProxy(This, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16055, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendProxy(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16055, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendProxy(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendProxy(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16055, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendProxy<T0>(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16055, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendProxy<T0>(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendProxy(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(This, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(This, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, IFillLockBytes* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(This, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(ref This.GetPinnableReference(), in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(ref This.GetPinnableReference(), pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16065, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAppendStub(this Windows thisApi, Span<IFillLockBytes> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAppendStub(ref This.GetPinnableReference(), pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16071, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtProxy(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtProxy(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16071, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtProxy<T0>(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16071, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtProxy<T0>(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtProxy(This, ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16071, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16071, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtProxy(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] void* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtProxy(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16071, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtProxy<T0>(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, uint* pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16071, Column 41 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtProxy<T0>(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<T0> pv, uint cb, Span<uint> pcbWritten) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtProxy(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(This, ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(This, ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, IFillLockBytes* This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(This, ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(ref This.GetPinnableReference(), ulOffset, in pv.GetPinnableReference(), cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, uint* pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, pcbWritten);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 16083, Column 35 in objidl.h")]
        public static unsafe int IFillLockBytesFillAtStub(this Windows thisApi, Span<IFillLockBytes> This, ulong ulOffset, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pv, uint cb, Span<uint> pcbWritten)
        {
            // SpanOverloader
            return thisApi.IFillLockBytesFillAtStub(ref This.GetPinnableReference(), ulOffset, pv, cb, ref pcbWritten.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2449, Column 43 in oaidl.h")]
        public static unsafe int IDispatchRemoteInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchRemoteInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2464, Column 17 in oaidl.h")]
        public static unsafe void IDispatchRemoteInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IDispatchRemoteInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2592, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTRemoteNextProxy(this Windows thisApi, IEnumVARIANT* This, uint celt, Variant* rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTRemoteNextProxy(This, celt, rgVar, ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2592, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTRemoteNextProxy(this Windows thisApi, IEnumVARIANT* This, uint celt, Span<Variant> rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTRemoteNextProxy(This, celt, ref rgVar.GetPinnableReference(), pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2592, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTRemoteNextProxy(this Windows thisApi, IEnumVARIANT* This, uint celt, Span<Variant> rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTRemoteNextProxy(This, celt, ref rgVar.GetPinnableReference(), ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2592, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTRemoteNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Variant* rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTRemoteNextProxy(ref This.GetPinnableReference(), celt, rgVar, pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2592, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTRemoteNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Variant* rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTRemoteNextProxy(ref This.GetPinnableReference(), celt, rgVar, ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2592, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTRemoteNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Span<Variant> rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgVar.GetPinnableReference(), pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2592, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTRemoteNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Span<Variant> rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgVar.GetPinnableReference(), ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2599, Column 17 in oaidl.h")]
        public static unsafe void IEnumVARIANTRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumVARIANTRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2743, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2756, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(This, ref szName.GetPinnableReference(), lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(This, ref szName.GetPinnableReference(), lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2763, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompRemoteBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompRemoteBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2770, Column 17 in oaidl.h")]
        public static unsafe void ITypeCompRemoteBindTypeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeCompRemoteBindTypeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3149, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetTypeAttrProxy(this Windows thisApi, ITypeInfo* This, TypeAttr** ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetTypeAttrProxy(This, ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3149, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetTypeAttrProxy(this Windows thisApi, ITypeInfo* This, ref TypeAttr* ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetTypeAttrProxy(This, ref ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3149, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, TypeAttr** ppTypeAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetTypeAttrProxy(ref This.GetPinnableReference(), ppTypeAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3149, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, TypeAttr** ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetTypeAttrProxy(ref This.GetPinnableReference(), ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3149, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, ref TypeAttr* ppTypeAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetTypeAttrProxy(ref This.GetPinnableReference(), ref ppTypeAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3149, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, ref TypeAttr* ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetTypeAttrProxy(ref This.GetPinnableReference(), ref ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3155, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3162, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetFuncDescProxy(this Windows thisApi, ITypeInfo* This, uint index, FuncDesc** ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetFuncDescProxy(This, index, ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3162, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetFuncDescProxy(this Windows thisApi, ITypeInfo* This, uint index, ref FuncDesc* ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetFuncDescProxy(This, index, ref ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3162, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, FuncDesc** ppFuncDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetFuncDescProxy(ref This.GetPinnableReference(), index, ppFuncDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3162, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, FuncDesc** ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetFuncDescProxy(ref This.GetPinnableReference(), index, ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3162, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, ref FuncDesc* ppFuncDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetFuncDescProxy(ref This.GetPinnableReference(), index, ref ppFuncDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3162, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, ref FuncDesc* ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetFuncDescProxy(ref This.GetPinnableReference(), index, ref ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3169, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3176, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetVarDescProxy(this Windows thisApi, ITypeInfo* This, uint index, VarDesc** ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetVarDescProxy(This, index, ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3176, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetVarDescProxy(this Windows thisApi, ITypeInfo* This, uint index, ref VarDesc* ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetVarDescProxy(This, index, ref ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3176, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, VarDesc** ppVarDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetVarDescProxy(ref This.GetPinnableReference(), index, ppVarDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3176, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, VarDesc** ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetVarDescProxy(ref This.GetPinnableReference(), index, ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3176, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, ref VarDesc* ppVarDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetVarDescProxy(ref This.GetPinnableReference(), index, ref ppVarDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3176, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, ref VarDesc* ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetVarDescProxy(ref This.GetPinnableReference(), index, ref ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3183, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3190, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetNamesProxy(this Windows thisApi, ITypeInfo* This, int memid, char** rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetNamesProxy(This, memid, rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3190, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetNamesProxy(this Windows thisApi, ITypeInfo* This, int memid, ref char* rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetNamesProxy(This, memid, ref rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3190, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** rgBstrNames, uint cMaxNames, uint* pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetNamesProxy(ref This.GetPinnableReference(), memid, rgBstrNames, cMaxNames, pcNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3190, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetNamesProxy(ref This.GetPinnableReference(), memid, rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3190, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* rgBstrNames, uint cMaxNames, uint* pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetNamesProxy(ref This.GetPinnableReference(), memid, ref rgBstrNames, cMaxNames, pcNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3190, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetNamesProxy(ref This.GetPinnableReference(), memid, ref rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3198, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3205, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoLocalGetIDsOfNamesProxy(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoLocalGetIDsOfNamesProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3209, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalGetIDsOfNamesStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalGetIDsOfNamesStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3216, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoLocalInvokeProxy(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoLocalInvokeProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3220, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalInvokeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalInvokeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(This, memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3227, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDocumentationProxy(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3237, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(This, memid, invKind, refPtrFlags, pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(This, memid, invKind, refPtrFlags, pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(This, memid, invKind, refPtrFlags, ref pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(This, memid, invKind, refPtrFlags, ref pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, char** pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, ref char* pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, ref pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, char** pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, ref char* pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, ref pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3244, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3254, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetDllEntryStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetDllEntryStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3261, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoLocalAddressOfMemberProxy(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoLocalAddressOfMemberProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3265, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalAddressOfMemberStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalAddressOfMemberStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3272, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteCreateInstanceProxy(This, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3272, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteCreateInstanceProxy(This, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3272, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteCreateInstanceProxy(ref This.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3272, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteCreateInstanceProxy(ref This.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3272, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteCreateInstanceProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3272, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteCreateInstanceProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3278, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteCreateInstanceStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteCreateInstanceStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3285, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetContainingTypeLibProxy(this Windows thisApi, ITypeInfo* This, ITypeLib** ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetContainingTypeLibProxy(This, ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3285, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetContainingTypeLibProxy(this Windows thisApi, ITypeInfo* This, ref ITypeLib* ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetContainingTypeLibProxy(This, ref ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3285, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ITypeLib** ppTLib, uint* pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetContainingTypeLibProxy(ref This.GetPinnableReference(), ppTLib, pIndex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3285, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ITypeLib** ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetContainingTypeLibProxy(ref This.GetPinnableReference(), ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3285, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ref ITypeLib* ppTLib, uint* pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetContainingTypeLibProxy(ref This.GetPinnableReference(), ref ppTLib, pIndex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3285, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoRemoteGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ref ITypeLib* ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoRemoteGetContainingTypeLibProxy(ref This.GetPinnableReference(), ref ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3291, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoRemoteGetContainingTypeLibStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoRemoteGetContainingTypeLibStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3298, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoLocalReleaseTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoLocalReleaseTypeAttrProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3302, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseTypeAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseTypeAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3309, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoLocalReleaseFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoLocalReleaseFuncDescProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3313, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseFuncDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseFuncDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3320, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoLocalReleaseVarDescProxy(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoLocalReleaseVarDescProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3324, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfoLocalReleaseVarDescStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfoLocalReleaseVarDescStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(This, memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(This, memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(This, memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(This, memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3810, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 3820, Column 17 in oaidl.h")]
        public static unsafe void ITypeInfo2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeInfo2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4088, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetTypeInfoCountProxy(this Windows thisApi, ITypeLib* This, Span<uint> pcTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetTypeInfoCountProxy(This, ref pcTInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4088, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetTypeInfoCountProxy(this Windows thisApi, Span<ITypeLib> This, uint* pcTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetTypeInfoCountProxy(ref This.GetPinnableReference(), pcTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4088, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetTypeInfoCountProxy(this Windows thisApi, Span<ITypeLib> This, Span<uint> pcTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetTypeInfoCountProxy(ref This.GetPinnableReference(), ref pcTInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4093, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetTypeInfoCountStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetTypeInfoCountStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4100, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetLibAttrProxy(this Windows thisApi, ITypeLib* This, TLibAttr** ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetLibAttrProxy(This, ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4100, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetLibAttrProxy(this Windows thisApi, ITypeLib* This, ref TLibAttr* ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetLibAttrProxy(This, ref ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4100, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, TLibAttr** ppTLibAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetLibAttrProxy(ref This.GetPinnableReference(), ppTLibAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4100, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, TLibAttr** ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetLibAttrProxy(ref This.GetPinnableReference(), ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4100, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, ref TLibAttr* ppTLibAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetLibAttrProxy(ref This.GetPinnableReference(), ref ppTLibAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4100, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, ref TLibAttr* ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetLibAttrProxy(ref This.GetPinnableReference(), ref ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4106, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(This, index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4113, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteGetDocumentationProxy(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4123, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteGetDocumentationStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteGetDocumentationStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4130, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteIsNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4138, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteIsNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteIsNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4145, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibRemoteFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibRemoteFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4155, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibRemoteFindNameStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibRemoteFindNameStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4162, Column 51 in oaidl.h")]
        public static unsafe int ITypeLibLocalReleaseTLibAttrProxy(this Windows thisApi, Span<ITypeLib> This)
        {
            // SpanOverloader
            return thisApi.ITypeLibLocalReleaseTLibAttrProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4166, Column 17 in oaidl.h")]
        public static unsafe void ITypeLibLocalReleaseTLibAttrStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLibLocalReleaseTLibAttrStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4418, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetLibStatisticsProxy(this Windows thisApi, ITypeLib2* This, uint* pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetLibStatisticsProxy(This, pcUniqueNames, ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4418, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetLibStatisticsProxy(this Windows thisApi, ITypeLib2* This, Span<uint> pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetLibStatisticsProxy(This, ref pcUniqueNames.GetPinnableReference(), pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4418, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetLibStatisticsProxy(this Windows thisApi, ITypeLib2* This, Span<uint> pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetLibStatisticsProxy(This, ref pcUniqueNames.GetPinnableReference(), ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4418, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, uint* pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetLibStatisticsProxy(ref This.GetPinnableReference(), pcUniqueNames, pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4418, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, uint* pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetLibStatisticsProxy(ref This.GetPinnableReference(), pcUniqueNames, ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4418, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, Span<uint> pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetLibStatisticsProxy(ref This.GetPinnableReference(), ref pcUniqueNames.GetPinnableReference(), pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4418, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, Span<uint> pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetLibStatisticsProxy(ref This.GetPinnableReference(), ref pcUniqueNames.GetPinnableReference(), ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4424, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetLibStatisticsStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetLibStatisticsStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(This, index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(This, index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(This, index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(This, index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4431, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2RemoteGetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2RemoteGetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 4441, Column 17 in oaidl.h")]
        public static unsafe void ITypeLib2RemoteGetDocumentation2Stub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.ITypeLib2RemoteGetDocumentation2Stub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5627, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagRemoteReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagRemoteReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5636, Column 17 in oaidl.h")]
        public static unsafe void IPropertyBagRemoteReadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPropertyBagRemoteReadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5912, Column 39 in oaidl.h")]
        public static unsafe uint BSTRUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5912, Column 39 in oaidl.h")]
        public static unsafe uint BSTRUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5913, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5914, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5915, Column 39 in oaidl.h")]
        public static unsafe void BSTRUserFree(this Windows thisApi, Span<uint> arg0, char** arg1)
        {
            // SpanOverloader
            thisApi.BSTRUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5915, Column 39 in oaidl.h")]
        public static unsafe void BSTRUserFree(this Windows thisApi, Span<uint> arg0, ref char* arg1)
        {
            // SpanOverloader
            thisApi.BSTRUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5917, Column 39 in oaidl.h")]
        public static unsafe uint CLEANLOCALSTORAGEUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5917, Column 39 in oaidl.h")]
        public static unsafe uint CLEANLOCALSTORAGEUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5917, Column 39 in oaidl.h")]
        public static unsafe uint CLEANLOCALSTORAGEUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5918, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5919, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5920, Column 39 in oaidl.h")]
        public static unsafe void CLEANLOCALSTORAGEUserFree(this Windows thisApi, uint* arg0, Span<CleanLocalStorage> arg1)
        {
            // SpanOverloader
            thisApi.CLEANLOCALSTORAGEUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5920, Column 39 in oaidl.h")]
        public static unsafe void CLEANLOCALSTORAGEUserFree(this Windows thisApi, Span<uint> arg0, CleanLocalStorage* arg1)
        {
            // SpanOverloader
            thisApi.CLEANLOCALSTORAGEUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5920, Column 39 in oaidl.h")]
        public static unsafe void CLEANLOCALSTORAGEUserFree(this Windows thisApi, Span<uint> arg0, Span<CleanLocalStorage> arg1)
        {
            // SpanOverloader
            thisApi.CLEANLOCALSTORAGEUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5922, Column 39 in oaidl.h")]
        public static unsafe uint VARIANTUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5922, Column 39 in oaidl.h")]
        public static unsafe uint VARIANTUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5922, Column 39 in oaidl.h")]
        public static unsafe uint VARIANTUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5923, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5924, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5925, Column 39 in oaidl.h")]
        public static unsafe void VARIANTUserFree(this Windows thisApi, uint* arg0, Span<Variant> arg1)
        {
            // SpanOverloader
            thisApi.VARIANTUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5925, Column 39 in oaidl.h")]
        public static unsafe void VARIANTUserFree(this Windows thisApi, Span<uint> arg0, Variant* arg1)
        {
            // SpanOverloader
            thisApi.VARIANTUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5925, Column 39 in oaidl.h")]
        public static unsafe void VARIANTUserFree(this Windows thisApi, Span<uint> arg0, Span<Variant> arg1)
        {
            // SpanOverloader
            thisApi.VARIANTUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5927, Column 39 in oaidl.h")]
        public static unsafe uint BSTRUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5927, Column 39 in oaidl.h")]
        public static unsafe uint BSTRUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5928, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, char** arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5929, Column 29 in oaidl.h")]
        public static unsafe byte* BSTRUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref char* arg2)
        {
            // SpanOverloader
            return thisApi.BSTRUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5930, Column 39 in oaidl.h")]
        public static unsafe void BSTRUserFree64(this Windows thisApi, Span<uint> arg0, char** arg1)
        {
            // SpanOverloader
            thisApi.BSTRUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5930, Column 39 in oaidl.h")]
        public static unsafe void BSTRUserFree64(this Windows thisApi, Span<uint> arg0, ref char* arg1)
        {
            // SpanOverloader
            thisApi.BSTRUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5932, Column 39 in oaidl.h")]
        public static unsafe uint CLEANLOCALSTORAGEUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5932, Column 39 in oaidl.h")]
        public static unsafe uint CLEANLOCALSTORAGEUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5932, Column 39 in oaidl.h")]
        public static unsafe uint CLEANLOCALSTORAGEUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5933, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, CleanLocalStorage* arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5934, Column 29 in oaidl.h")]
        public static unsafe byte* CLEANLOCALSTORAGEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<CleanLocalStorage> arg2)
        {
            // SpanOverloader
            return thisApi.CLEANLOCALSTORAGEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5935, Column 39 in oaidl.h")]
        public static unsafe void CLEANLOCALSTORAGEUserFree64(this Windows thisApi, uint* arg0, Span<CleanLocalStorage> arg1)
        {
            // SpanOverloader
            thisApi.CLEANLOCALSTORAGEUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5935, Column 39 in oaidl.h")]
        public static unsafe void CLEANLOCALSTORAGEUserFree64(this Windows thisApi, Span<uint> arg0, CleanLocalStorage* arg1)
        {
            // SpanOverloader
            thisApi.CLEANLOCALSTORAGEUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5935, Column 39 in oaidl.h")]
        public static unsafe void CLEANLOCALSTORAGEUserFree64(this Windows thisApi, Span<uint> arg0, Span<CleanLocalStorage> arg1)
        {
            // SpanOverloader
            thisApi.CLEANLOCALSTORAGEUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5937, Column 39 in oaidl.h")]
        public static unsafe uint VARIANTUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5937, Column 39 in oaidl.h")]
        public static unsafe uint VARIANTUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5937, Column 39 in oaidl.h")]
        public static unsafe uint VARIANTUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5938, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Variant* arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5939, Column 29 in oaidl.h")]
        public static unsafe byte* VARIANTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<Variant> arg2)
        {
            // SpanOverloader
            return thisApi.VARIANTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5940, Column 39 in oaidl.h")]
        public static unsafe void VARIANTUserFree64(this Windows thisApi, uint* arg0, Span<Variant> arg1)
        {
            // SpanOverloader
            thisApi.VARIANTUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5940, Column 39 in oaidl.h")]
        public static unsafe void VARIANTUserFree64(this Windows thisApi, Span<uint> arg0, Variant* arg1)
        {
            // SpanOverloader
            thisApi.VARIANTUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5940, Column 39 in oaidl.h")]
        public static unsafe void VARIANTUserFree64(this Windows thisApi, Span<uint> arg0, Span<Variant> arg1)
        {
            // SpanOverloader
            thisApi.VARIANTUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(This, dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, riid, lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5942, Column 41 in oaidl.h")]
        public static unsafe int IDispatchInvokeProxy(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeProxy(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, IDispatch* This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(This, dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Guid* riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, riid, lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), pArgErr, cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, uint* rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, rgVarRefIdx, ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Variant* rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), rgVarRef);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5962, Column 43 in oaidl.h")]
        public static unsafe int IDispatchInvokeStub(this Windows thisApi, Span<IDispatch> This, int dispIdMember, Span<Guid> riid, uint lcid, uint dwFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> pArgErr, uint cVarRef, Span<uint> rgVarRefIdx, Span<Variant> rgVarRef)
        {
            // SpanOverloader
            return thisApi.IDispatchInvokeStub(ref This.GetPinnableReference(), dispIdMember, ref riid.GetPinnableReference(), lcid, dwFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref pArgErr.GetPinnableReference(), cVarRef, ref rgVarRefIdx.GetPinnableReference(), ref rgVarRef.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5976, Column 41 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextProxy(this Windows thisApi, IEnumVARIANT* This, uint celt, Variant* rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextProxy(This, celt, rgVar, ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5976, Column 41 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextProxy(this Windows thisApi, IEnumVARIANT* This, uint celt, Span<Variant> rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextProxy(This, celt, ref rgVar.GetPinnableReference(), pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5976, Column 41 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextProxy(this Windows thisApi, IEnumVARIANT* This, uint celt, Span<Variant> rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextProxy(This, celt, ref rgVar.GetPinnableReference(), ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5976, Column 41 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Variant* rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextProxy(ref This.GetPinnableReference(), celt, rgVar, pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5976, Column 41 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Variant* rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextProxy(ref This.GetPinnableReference(), celt, rgVar, ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5976, Column 41 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Span<Variant> rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextProxy(ref This.GetPinnableReference(), celt, ref rgVar.GetPinnableReference(), pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5976, Column 41 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextProxy(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Span<Variant> rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextProxy(ref This.GetPinnableReference(), celt, ref rgVar.GetPinnableReference(), ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5983, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextStub(this Windows thisApi, IEnumVARIANT* This, uint celt, Variant* rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextStub(This, celt, rgVar, ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5983, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextStub(this Windows thisApi, IEnumVARIANT* This, uint celt, Span<Variant> rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextStub(This, celt, ref rgVar.GetPinnableReference(), pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5983, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextStub(this Windows thisApi, IEnumVARIANT* This, uint celt, Span<Variant> rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextStub(This, celt, ref rgVar.GetPinnableReference(), ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5983, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextStub(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Variant* rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextStub(ref This.GetPinnableReference(), celt, rgVar, pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5983, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextStub(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Variant* rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextStub(ref This.GetPinnableReference(), celt, rgVar, ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5983, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextStub(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Span<Variant> rgVar, uint* pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextStub(ref This.GetPinnableReference(), celt, ref rgVar.GetPinnableReference(), pCeltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5983, Column 43 in oaidl.h")]
        public static unsafe int IEnumVARIANTNextStub(this Windows thisApi, Span<IEnumVARIANT> This, uint celt, Span<Variant> rgVar, Span<uint> pCeltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumVARIANTNextStub(ref This.GetPinnableReference(), celt, ref rgVar.GetPinnableReference(), ref pCeltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, BindPtr* pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), pBindPtr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5989, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, Span<BindPtr> pBindPtr)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindProxy(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref pBindPtr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, ITypeComp* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(This, szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ITypeInfo** ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, DescKind* pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, pDescKind, ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, FuncDesc** ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, VarDesc** ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ITypeComp** ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6000, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ushort wFlags, ref ITypeInfo* ppTInfo, Span<DescKind> pDescKind, ref FuncDesc* ppFuncDesc, ref VarDesc* ppVarDesc, ref ITypeComp* ppTypeComp, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindStub(ref This.GetPinnableReference(), szName, lHashVal, wFlags, ref ppTInfo, ref pDescKind.GetPinnableReference(), ref ppFuncDesc, ref ppVarDesc, ref ppTypeComp, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(This, ref szName.GetPinnableReference(), lHashVal, ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(This, ref szName.GetPinnableReference(), lHashVal, ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(This, ref szName.GetPinnableReference(), lHashVal, ref ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(This, ref szName.GetPinnableReference(), lHashVal, ref ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ITypeInfo** ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ITypeInfo** ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ref ITypeInfo* ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ref ITypeInfo* ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ref ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ref ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ITypeInfo** ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ITypeInfo** ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ref ITypeInfo* ppTInfo, ITypeComp** ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo, ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6012, Column 41 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeProxy(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ref ITypeInfo* ppTInfo, ref ITypeComp* ppTComp)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeProxy(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo, ref ppTComp);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(This, ref szName.GetPinnableReference(), lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, ITypeComp* This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(This, ref szName.GetPinnableReference(), lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, Span<ITypeComp> This, char* szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, Span<ITypeComp> This, Span<char> szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(ref This.GetPinnableReference(), ref szName.GetPinnableReference(), lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ITypeInfo** ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(ref This.GetPinnableReference(), szName, lHashVal, ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6021, Column 43 in oaidl.h")]
        public static unsafe int ITypeCompBindTypeStub(this Windows thisApi, Span<ITypeComp> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szName, uint lHashVal, ref ITypeInfo* ppTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeCompBindTypeStub(ref This.GetPinnableReference(), szName, lHashVal, ref ppTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6027, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, TypeAttr** ppTypeAttr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrProxy(ref This.GetPinnableReference(), ppTypeAttr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6027, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, ref TypeAttr* ppTypeAttr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrProxy(ref This.GetPinnableReference(), ref ppTypeAttr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6032, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrStub(this Windows thisApi, ITypeInfo* This, TypeAttr** ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrStub(This, ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6032, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrStub(this Windows thisApi, ITypeInfo* This, ref TypeAttr* ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrStub(This, ref ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6032, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrStub(this Windows thisApi, Span<ITypeInfo> This, TypeAttr** ppTypeAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrStub(ref This.GetPinnableReference(), ppTypeAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6032, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrStub(this Windows thisApi, Span<ITypeInfo> This, TypeAttr** ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrStub(ref This.GetPinnableReference(), ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6032, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrStub(this Windows thisApi, Span<ITypeInfo> This, ref TypeAttr* ppTypeAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrStub(ref This.GetPinnableReference(), ref ppTypeAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6032, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetTypeAttrStub(this Windows thisApi, Span<ITypeInfo> This, ref TypeAttr* ppTypeAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetTypeAttrStub(ref This.GetPinnableReference(), ref ppTypeAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6037, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, FuncDesc** ppFuncDesc)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescProxy(ref This.GetPinnableReference(), index, ppFuncDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6037, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, ref FuncDesc* ppFuncDesc)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescProxy(ref This.GetPinnableReference(), index, ref ppFuncDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6043, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescStub(this Windows thisApi, ITypeInfo* This, uint index, FuncDesc** ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescStub(This, index, ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6043, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescStub(this Windows thisApi, ITypeInfo* This, uint index, ref FuncDesc* ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescStub(This, index, ref ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6043, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, FuncDesc** ppFuncDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescStub(ref This.GetPinnableReference(), index, ppFuncDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6043, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, FuncDesc** ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescStub(ref This.GetPinnableReference(), index, ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6043, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, ref FuncDesc* ppFuncDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescStub(ref This.GetPinnableReference(), index, ref ppFuncDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6043, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetFuncDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, ref FuncDesc* ppFuncDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetFuncDescStub(ref This.GetPinnableReference(), index, ref ppFuncDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6049, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, VarDesc** ppVarDesc)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescProxy(ref This.GetPinnableReference(), index, ppVarDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6049, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, uint index, ref VarDesc* ppVarDesc)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescProxy(ref This.GetPinnableReference(), index, ref ppVarDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6055, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescStub(this Windows thisApi, ITypeInfo* This, uint index, VarDesc** ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescStub(This, index, ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6055, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescStub(this Windows thisApi, ITypeInfo* This, uint index, ref VarDesc* ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescStub(This, index, ref ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6055, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, VarDesc** ppVarDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescStub(ref This.GetPinnableReference(), index, ppVarDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6055, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, VarDesc** ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescStub(ref This.GetPinnableReference(), index, ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6055, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, ref VarDesc* ppVarDesc, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescStub(ref This.GetPinnableReference(), index, ref ppVarDesc, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6055, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetVarDescStub(this Windows thisApi, Span<ITypeInfo> This, uint index, ref VarDesc* ppVarDesc, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetVarDescStub(ref This.GetPinnableReference(), index, ref ppVarDesc, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6061, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesProxy(this Windows thisApi, ITypeInfo* This, int memid, char** rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesProxy(This, memid, rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6061, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesProxy(this Windows thisApi, ITypeInfo* This, int memid, ref char* rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesProxy(This, memid, ref rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6061, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** rgBstrNames, uint cMaxNames, uint* pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesProxy(ref This.GetPinnableReference(), memid, rgBstrNames, cMaxNames, pcNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6061, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesProxy(ref This.GetPinnableReference(), memid, rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6061, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* rgBstrNames, uint cMaxNames, uint* pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesProxy(ref This.GetPinnableReference(), memid, ref rgBstrNames, cMaxNames, pcNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6061, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesProxy(ref This.GetPinnableReference(), memid, ref rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6071, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesStub(this Windows thisApi, ITypeInfo* This, int memid, char** rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesStub(This, memid, rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6071, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesStub(this Windows thisApi, ITypeInfo* This, int memid, ref char* rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesStub(This, memid, ref rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6071, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesStub(this Windows thisApi, Span<ITypeInfo> This, int memid, char** rgBstrNames, uint cMaxNames, uint* pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesStub(ref This.GetPinnableReference(), memid, rgBstrNames, cMaxNames, pcNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6071, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesStub(this Windows thisApi, Span<ITypeInfo> This, int memid, char** rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesStub(ref This.GetPinnableReference(), memid, rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6071, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesStub(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* rgBstrNames, uint cMaxNames, uint* pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesStub(ref This.GetPinnableReference(), memid, ref rgBstrNames, cMaxNames, pcNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6071, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetNamesStub(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* rgBstrNames, uint cMaxNames, Span<uint> pcNames)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetNamesStub(ref This.GetPinnableReference(), memid, ref rgBstrNames, cMaxNames, ref pcNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6078, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetIDsOfNamesProxy(this Windows thisApi, ITypeInfo* This, char** rgszNames, uint cNames, Span<int> pMemId)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetIDsOfNamesProxy(This, rgszNames, cNames, ref pMemId.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6078, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetIDsOfNamesProxy(this Windows thisApi, ITypeInfo* This, ref char* rgszNames, uint cNames, Span<int> pMemId)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetIDsOfNamesProxy(This, ref rgszNames, cNames, ref pMemId.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6078, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetIDsOfNamesProxy(this Windows thisApi, Span<ITypeInfo> This, char** rgszNames, uint cNames, int* pMemId)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetIDsOfNamesProxy(ref This.GetPinnableReference(), rgszNames, cNames, pMemId);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6078, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetIDsOfNamesProxy(this Windows thisApi, Span<ITypeInfo> This, char** rgszNames, uint cNames, Span<int> pMemId)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetIDsOfNamesProxy(ref This.GetPinnableReference(), rgszNames, cNames, ref pMemId.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6078, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetIDsOfNamesProxy(this Windows thisApi, Span<ITypeInfo> This, ref char* rgszNames, uint cNames, int* pMemId)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetIDsOfNamesProxy(ref This.GetPinnableReference(), ref rgszNames, cNames, pMemId);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6078, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetIDsOfNamesProxy(this Windows thisApi, Span<ITypeInfo> This, ref char* rgszNames, uint cNames, Span<int> pMemId)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetIDsOfNamesProxy(ref This.GetPinnableReference(), ref rgszNames, cNames, ref pMemId.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6086, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoGetIDsOfNamesStub(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetIDsOfNamesStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, ITypeInfo* This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, ITypeInfo* This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(This, ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy(this Windows thisApi, Span<ITypeInfo> This, void* pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), pvInstance, memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, DispatchParams* pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, pDispParams, ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Variant* pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), pVarResult, ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, ExceptionInfo* pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), pExcepInfo, ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, uint* puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), puArgErr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6089, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeProxy<T0>(this Windows thisApi, Span<ITypeInfo> This, Span<T0> pvInstance, int memid, ushort wFlags, Span<DispatchParams> pDispParams, Span<Variant> pVarResult, Span<ExceptionInfo> pExcepInfo, Span<uint> puArgErr) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeProxy(ref This.GetPinnableReference(), ref pvInstance.GetPinnableReference(), memid, wFlags, ref pDispParams.GetPinnableReference(), ref pVarResult.GetPinnableReference(), ref pExcepInfo.GetPinnableReference(), ref puArgErr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6100, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoInvokeStub(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoInvokeStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, ITypeInfo* This, int memid, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(This, memid, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6103, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationProxy(ref This.GetPinnableReference(), memid, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, ITypeInfo* This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(This, memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6115, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDocumentationStub(this Windows thisApi, Span<ITypeInfo> This, int memid, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDocumentationStub(ref This.GetPinnableReference(), memid, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, char** pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(This, memid, invKind, pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, char** pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(This, memid, invKind, pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, ref char* pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(This, memid, invKind, ref pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, ref char* pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(This, memid, invKind, ref pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, char** pBstrDllName, char** pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, pBstrDllName, pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, char** pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, char** pBstrDllName, ref char* pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, pBstrDllName, ref pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, char** pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, ref char* pBstrDllName, char** pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, ref pBstrDllName, pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, ref char* pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, ref pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, ref char* pBstrDllName, ref char* pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, ref pBstrDllName, ref pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6124, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, ref char* pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryProxy(ref This.GetPinnableReference(), memid, invKind, ref pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(This, memid, invKind, refPtrFlags, pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(This, memid, invKind, refPtrFlags, pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(This, memid, invKind, refPtrFlags, ref pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, ITypeInfo* This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(This, memid, invKind, refPtrFlags, ref pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, char** pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, ref char* pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, ref pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, char** pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, char** pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, char** pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, ref char* pBstrName, ushort* pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, ref pBstrName, pwOrdinal);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6135, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetDllEntryStub(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, uint refPtrFlags, ref char* pBstrDllName, ref char* pBstrName, Span<ushort> pwOrdinal)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetDllEntryStub(ref This.GetPinnableReference(), memid, invKind, refPtrFlags, ref pBstrDllName, ref pBstrName, ref pwOrdinal.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6144, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoAddressOfMemberProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, void** ppv)
        {
            // SpanOverloader
            return thisApi.ITypeInfoAddressOfMemberProxy(ref This.GetPinnableReference(), memid, invKind, ppv);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6144, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoAddressOfMemberProxy(this Windows thisApi, Span<ITypeInfo> This, int memid, InvokeKind invKind, ref void* ppv)
        {
            // SpanOverloader
            return thisApi.ITypeInfoAddressOfMemberProxy(ref This.GetPinnableReference(), memid, invKind, ref ppv);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6151, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoAddressOfMemberStub(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoAddressOfMemberStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(This, pUnkOuter, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(This, pUnkOuter, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(This, ref pUnkOuter.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(This, ref pUnkOuter.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(This, ref pUnkOuter.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, ITypeInfo* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(This, ref pUnkOuter.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), pUnkOuter, riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), pUnkOuter, riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), pUnkOuter, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), pUnkOuter, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Guid* riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Guid* riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Guid> riid, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6154, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceProxy(this Windows thisApi, Span<ITypeInfo> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Guid> riid, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6161, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceStub(this Windows thisApi, ITypeInfo* This, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceStub(This, ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6161, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceStub(this Windows thisApi, ITypeInfo* This, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceStub(This, ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6161, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceStub(this Windows thisApi, Span<ITypeInfo> This, Guid* riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceStub(ref This.GetPinnableReference(), riid, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6161, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceStub(this Windows thisApi, Span<ITypeInfo> This, Guid* riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceStub(ref This.GetPinnableReference(), riid, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6161, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceStub(this Windows thisApi, Span<ITypeInfo> This, Span<Guid> riid, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6161, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoCreateInstanceStub(this Windows thisApi, Span<ITypeInfo> This, Span<Guid> riid, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.ITypeInfoCreateInstanceStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6166, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibProxy(this Windows thisApi, ITypeInfo* This, ITypeLib** ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibProxy(This, ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6166, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibProxy(this Windows thisApi, ITypeInfo* This, ref ITypeLib* ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibProxy(This, ref ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6166, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ITypeLib** ppTLib, uint* pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibProxy(ref This.GetPinnableReference(), ppTLib, pIndex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6166, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ITypeLib** ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibProxy(ref This.GetPinnableReference(), ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6166, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ref ITypeLib* ppTLib, uint* pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibProxy(ref This.GetPinnableReference(), ref ppTLib, pIndex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6166, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibProxy(this Windows thisApi, Span<ITypeInfo> This, ref ITypeLib* ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibProxy(ref This.GetPinnableReference(), ref ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6172, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibStub(this Windows thisApi, ITypeInfo* This, ITypeLib** ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibStub(This, ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6172, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibStub(this Windows thisApi, ITypeInfo* This, ref ITypeLib* ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibStub(This, ref ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6172, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibStub(this Windows thisApi, Span<ITypeInfo> This, ITypeLib** ppTLib, uint* pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibStub(ref This.GetPinnableReference(), ppTLib, pIndex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6172, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibStub(this Windows thisApi, Span<ITypeInfo> This, ITypeLib** ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibStub(ref This.GetPinnableReference(), ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6172, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibStub(this Windows thisApi, Span<ITypeInfo> This, ref ITypeLib* ppTLib, uint* pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibStub(ref This.GetPinnableReference(), ref ppTLib, pIndex);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6172, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfoGetContainingTypeLibStub(this Windows thisApi, Span<ITypeInfo> This, ref ITypeLib* ppTLib, Span<uint> pIndex)
        {
            // SpanOverloader
            return thisApi.ITypeInfoGetContainingTypeLibStub(ref This.GetPinnableReference(), ref ppTLib, ref pIndex.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6177, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseTypeAttrProxy(this Windows thisApi, ITypeInfo* This, Span<TypeAttr> pTypeAttr)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseTypeAttrProxy(This, ref pTypeAttr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6177, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, TypeAttr* pTypeAttr)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseTypeAttrProxy(ref This.GetPinnableReference(), pTypeAttr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6177, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseTypeAttrProxy(this Windows thisApi, Span<ITypeInfo> This, Span<TypeAttr> pTypeAttr)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseTypeAttrProxy(ref This.GetPinnableReference(), ref pTypeAttr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6182, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoReleaseTypeAttrStub(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoReleaseTypeAttrStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6185, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseFuncDescProxy(this Windows thisApi, ITypeInfo* This, Span<FuncDesc> pFuncDesc)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseFuncDescProxy(This, ref pFuncDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6185, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, FuncDesc* pFuncDesc)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseFuncDescProxy(ref This.GetPinnableReference(), pFuncDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6185, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseFuncDescProxy(this Windows thisApi, Span<ITypeInfo> This, Span<FuncDesc> pFuncDesc)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseFuncDescProxy(ref This.GetPinnableReference(), ref pFuncDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6190, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoReleaseFuncDescStub(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoReleaseFuncDescStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6193, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseVarDescProxy(this Windows thisApi, ITypeInfo* This, Span<VarDesc> pVarDesc)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseVarDescProxy(This, ref pVarDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6193, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, VarDesc* pVarDesc)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseVarDescProxy(ref This.GetPinnableReference(), pVarDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6193, Column 38 in oaidl.h")]
        public static unsafe void ITypeInfoReleaseVarDescProxy(this Windows thisApi, Span<ITypeInfo> This, Span<VarDesc> pVarDesc)
        {
            // SpanOverloader
            thisApi.ITypeInfoReleaseVarDescProxy(ref This.GetPinnableReference(), ref pVarDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6198, Column 51 in oaidl.h")]
        public static unsafe int ITypeInfoReleaseVarDescStub(this Windows thisApi, Span<ITypeInfo> This)
        {
            // SpanOverloader
            return thisApi.ITypeInfoReleaseVarDescStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(This, memid, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(This, memid, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(This, memid, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(This, memid, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, char** pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, char** pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, ref char* pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, ref pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, ref char* pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, ref pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6201, Column 41 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Proxy(ref This.GetPinnableReference(), memid, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(This, memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(This, memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(This, memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, ITypeInfo2* This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(This, memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6212, Column 43 in oaidl.h")]
        public static unsafe int ITypeInfo2GetDocumentation2Stub(this Windows thisApi, Span<ITypeInfo2> This, int memid, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeInfo2GetDocumentation2Stub(ref This.GetPinnableReference(), memid, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6221, Column 38 in oaidl.h")]
        public static unsafe uint ITypeLibGetTypeInfoCountProxy(this Windows thisApi, Span<ITypeLib> This)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetTypeInfoCountProxy(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6225, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetTypeInfoCountStub(this Windows thisApi, ITypeLib* This, Span<uint> pcTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetTypeInfoCountStub(This, ref pcTInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6225, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetTypeInfoCountStub(this Windows thisApi, Span<ITypeLib> This, uint* pcTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetTypeInfoCountStub(ref This.GetPinnableReference(), pcTInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6225, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetTypeInfoCountStub(this Windows thisApi, Span<ITypeLib> This, Span<uint> pcTInfo)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetTypeInfoCountStub(ref This.GetPinnableReference(), ref pcTInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6229, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, TLibAttr** ppTLibAttr)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrProxy(ref This.GetPinnableReference(), ppTLibAttr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6229, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, ref TLibAttr* ppTLibAttr)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrProxy(ref This.GetPinnableReference(), ref ppTLibAttr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6234, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrStub(this Windows thisApi, ITypeLib* This, TLibAttr** ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrStub(This, ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6234, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrStub(this Windows thisApi, ITypeLib* This, ref TLibAttr* ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrStub(This, ref ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6234, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrStub(this Windows thisApi, Span<ITypeLib> This, TLibAttr** ppTLibAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrStub(ref This.GetPinnableReference(), ppTLibAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6234, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrStub(this Windows thisApi, Span<ITypeLib> This, TLibAttr** ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrStub(ref This.GetPinnableReference(), ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6234, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrStub(this Windows thisApi, Span<ITypeLib> This, ref TLibAttr* ppTLibAttr, CleanLocalStorage* pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrStub(ref This.GetPinnableReference(), ref ppTLibAttr, pDummy);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6234, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetLibAttrStub(this Windows thisApi, Span<ITypeLib> This, ref TLibAttr* ppTLibAttr, Span<CleanLocalStorage> pDummy)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetLibAttrStub(ref This.GetPinnableReference(), ref ppTLibAttr, ref pDummy.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, ITypeLib* This, int index, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(This, index, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6239, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationProxy(this Windows thisApi, Span<ITypeLib> This, int index, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationProxy(ref This.GetPinnableReference(), index, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, ITypeLib* This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(This, index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, char** pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, char** pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, uint* pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, pdwHelpContext, ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, char** pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6251, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibGetDocumentationStub(this Windows thisApi, Span<ITypeLib> This, int index, uint refPtrFlags, ref char* pBstrName, ref char* pBstrDocString, Span<uint> pdwHelpContext, ref char* pBstrHelpFile)
        {
            // SpanOverloader
            return thisApi.ITypeLibGetDocumentationStub(ref This.GetPinnableReference(), index, refPtrFlags, ref pBstrName, ref pBstrDocString, ref pdwHelpContext.GetPinnableReference(), ref pBstrHelpFile);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, Span<int> pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, int* pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, pfName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, int* pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, Span<int> pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, int* pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, pfName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, int* pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6260, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibIsNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(This, szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, int* pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, int* pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, pfName, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6268, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibIsNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, Span<int> pfName, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibIsNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref pfName.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6275, Column 41 in oaidl.h")]
        public static unsafe int ITypeLibFindNameProxy(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameProxy(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, ITypeLib* This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(This, szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, char* szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, Span<char> szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), ref szNameBuf.GetPinnableReference(), lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ITypeInfo** ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, int* rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, rgMemId, ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, ushort* pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), pcFound, ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, char** pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6285, Column 43 in oaidl.h")]
        public static unsafe int ITypeLibFindNameStub(this Windows thisApi, Span<ITypeLib> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string szNameBuf, uint lHashVal, ref ITypeInfo* ppTInfo, Span<int> rgMemId, Span<ushort> pcFound, ref char* pBstrLibName)
        {
            // SpanOverloader
            return thisApi.ITypeLibFindNameStub(ref This.GetPinnableReference(), szNameBuf, lHashVal, ref ppTInfo, ref rgMemId.GetPinnableReference(), ref pcFound.GetPinnableReference(), ref pBstrLibName);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6294, Column 38 in oaidl.h")]
        public static unsafe void ITypeLibReleaseTLibAttrProxy(this Windows thisApi, ITypeLib* This, Span<TLibAttr> pTLibAttr)
        {
            // SpanOverloader
            thisApi.ITypeLibReleaseTLibAttrProxy(This, ref pTLibAttr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6294, Column 38 in oaidl.h")]
        public static unsafe void ITypeLibReleaseTLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, TLibAttr* pTLibAttr)
        {
            // SpanOverloader
            thisApi.ITypeLibReleaseTLibAttrProxy(ref This.GetPinnableReference(), pTLibAttr);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6294, Column 38 in oaidl.h")]
        public static unsafe void ITypeLibReleaseTLibAttrProxy(this Windows thisApi, Span<ITypeLib> This, Span<TLibAttr> pTLibAttr)
        {
            // SpanOverloader
            thisApi.ITypeLibReleaseTLibAttrProxy(ref This.GetPinnableReference(), ref pTLibAttr.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6299, Column 51 in oaidl.h")]
        public static unsafe int ITypeLibReleaseTLibAttrStub(this Windows thisApi, Span<ITypeLib> This)
        {
            // SpanOverloader
            return thisApi.ITypeLibReleaseTLibAttrStub(ref This.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6302, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsProxy(this Windows thisApi, ITypeLib2* This, uint* pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsProxy(This, pcUniqueNames, ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6302, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsProxy(this Windows thisApi, ITypeLib2* This, Span<uint> pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsProxy(This, ref pcUniqueNames.GetPinnableReference(), pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6302, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsProxy(this Windows thisApi, ITypeLib2* This, Span<uint> pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsProxy(This, ref pcUniqueNames.GetPinnableReference(), ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6302, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, uint* pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsProxy(ref This.GetPinnableReference(), pcUniqueNames, pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6302, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, uint* pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsProxy(ref This.GetPinnableReference(), pcUniqueNames, ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6302, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, Span<uint> pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsProxy(ref This.GetPinnableReference(), ref pcUniqueNames.GetPinnableReference(), pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6302, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsProxy(this Windows thisApi, Span<ITypeLib2> This, Span<uint> pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsProxy(ref This.GetPinnableReference(), ref pcUniqueNames.GetPinnableReference(), ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6308, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsStub(this Windows thisApi, ITypeLib2* This, uint* pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsStub(This, pcUniqueNames, ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6308, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsStub(this Windows thisApi, ITypeLib2* This, Span<uint> pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsStub(This, ref pcUniqueNames.GetPinnableReference(), pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6308, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsStub(this Windows thisApi, ITypeLib2* This, Span<uint> pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsStub(This, ref pcUniqueNames.GetPinnableReference(), ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6308, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsStub(this Windows thisApi, Span<ITypeLib2> This, uint* pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsStub(ref This.GetPinnableReference(), pcUniqueNames, pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6308, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsStub(this Windows thisApi, Span<ITypeLib2> This, uint* pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsStub(ref This.GetPinnableReference(), pcUniqueNames, ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6308, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsStub(this Windows thisApi, Span<ITypeLib2> This, Span<uint> pcUniqueNames, uint* pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsStub(ref This.GetPinnableReference(), ref pcUniqueNames.GetPinnableReference(), pcchUniqueNames);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6308, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetLibStatisticsStub(this Windows thisApi, Span<ITypeLib2> This, Span<uint> pcUniqueNames, Span<uint> pcchUniqueNames)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetLibStatisticsStub(ref This.GetPinnableReference(), ref pcUniqueNames.GetPinnableReference(), ref pcchUniqueNames.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(This, index, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(This, index, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(This, index, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, ITypeLib2* This, int index, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(This, index, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, char** pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, char** pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, ref char* pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, ref pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, ref char* pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, ref pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6313, Column 41 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Proxy(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Proxy(ref This.GetPinnableReference(), index, lcid, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(This, index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(This, index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(This, index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, ITypeLib2* This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(This, index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, char** pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, uint* pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, pdwHelpStringContext, ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, char** pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6324, Column 43 in oaidl.h")]
        public static unsafe int ITypeLib2GetDocumentation2Stub(this Windows thisApi, Span<ITypeLib2> This, int index, uint lcid, uint refPtrFlags, ref char* pbstrHelpString, Span<uint> pdwHelpStringContext, ref char* pbstrHelpStringDll)
        {
            // SpanOverloader
            return thisApi.ITypeLib2GetDocumentation2Stub(ref This.GetPinnableReference(), index, lcid, refPtrFlags, ref pbstrHelpString, ref pdwHelpStringContext.GetPinnableReference(), ref pbstrHelpStringDll);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, in pszPropName.GetPinnableReference(), pVar, pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6333, Column 41 in oaidl.h")]
        public static unsafe int IPropertyBagReadProxy(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadProxy(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, IPropertyBag* This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(This, pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), in pszPropName.GetPinnableReference(), ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Variant* pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, pVar, ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, IErrorLog* pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), pErrorLog, varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Silk.NET.Core.Native.IUnknown* pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, pUnkObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6340, Column 43 in oaidl.h")]
        public static unsafe int IPropertyBagReadStub(this Windows thisApi, Span<IPropertyBag> This, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pszPropName, Span<Variant> pVar, Span<IErrorLog> pErrorLog, uint varType, Span<Silk.NET.Core.Native.IUnknown> pUnkObj)
        {
            // SpanOverloader
            return thisApi.IPropertyBagReadStub(ref This.GetPinnableReference(), pszPropName, ref pVar.GetPinnableReference(), ref pErrorLog.GetPinnableReference(), varType, ref pUnkObj.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 969, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGRemoteNextProxy(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, STATPROPSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGRemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 969, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGRemoteNextProxy(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, Span<STATPROPSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 969, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGRemoteNextProxy(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, Span<STATPROPSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 969, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, STATPROPSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 969, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, STATPROPSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 969, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, Span<STATPROPSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 969, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, Span<STATPROPSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 976, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1108, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGRemoteNextProxy(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, STATPROPSETSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGRemoteNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1108, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGRemoteNextProxy(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, Span<STATPROPSETSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1108, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGRemoteNextProxy(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, Span<STATPROPSETSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGRemoteNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1108, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, STATPROPSETSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1108, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, STATPROPSETSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1108, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, Span<STATPROPSETSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1108, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGRemoteNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, Span<STATPROPSETSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGRemoteNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1115, Column 17 in propidlbase.h")]
        public static unsafe void IEnumSTATPROPSETSTGRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumSTATPROPSETSTGRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1154, Column 39 in propidlbase.h")]
        public static unsafe uint LPSAFEARRAYUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1154, Column 39 in propidlbase.h")]
        public static unsafe uint LPSAFEARRAYUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1155, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1156, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1157, Column 39 in propidlbase.h")]
        public static unsafe void LPSAFEARRAYUserFree(this Windows thisApi, Span<uint> arg0, SafeArray** arg1)
        {
            // SpanOverloader
            thisApi.LPSAFEARRAYUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1157, Column 39 in propidlbase.h")]
        public static unsafe void LPSAFEARRAYUserFree(this Windows thisApi, Span<uint> arg0, ref SafeArray* arg1)
        {
            // SpanOverloader
            thisApi.LPSAFEARRAYUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1164, Column 39 in propidlbase.h")]
        public static unsafe uint LPSAFEARRAYUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1164, Column 39 in propidlbase.h")]
        public static unsafe uint LPSAFEARRAYUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1165, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, SafeArray** arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1166, Column 29 in propidlbase.h")]
        public static unsafe byte* LPSAFEARRAYUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref SafeArray* arg2)
        {
            // SpanOverloader
            return thisApi.LPSAFEARRAYUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1167, Column 39 in propidlbase.h")]
        public static unsafe void LPSAFEARRAYUserFree64(this Windows thisApi, Span<uint> arg0, SafeArray** arg1)
        {
            // SpanOverloader
            thisApi.LPSAFEARRAYUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1167, Column 39 in propidlbase.h")]
        public static unsafe void LPSAFEARRAYUserFree64(this Windows thisApi, Span<uint> arg0, ref SafeArray* arg1)
        {
            // SpanOverloader
            thisApi.LPSAFEARRAYUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1169, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextProxy(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, STATPROPSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1169, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextProxy(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, Span<STATPROPSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1169, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextProxy(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, Span<STATPROPSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1169, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, STATPROPSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1169, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, STATPROPSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1169, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, Span<STATPROPSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1169, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, Span<STATPROPSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1178, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextStub(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, STATPROPSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1178, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextStub(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, Span<STATPROPSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextStub(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1178, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextStub(this Windows thisApi, IEnumSTATPROPSTG* This, uint celt, Span<STATPROPSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextStub(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1178, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, STATPROPSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1178, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, STATPROPSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1178, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, Span<STATPROPSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1178, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSTG> This, uint celt, Span<STATPROPSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSTGNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1184, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextProxy(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, STATPROPSETSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextProxy(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1184, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextProxy(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, Span<STATPROPSETSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextProxy(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1184, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextProxy(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, Span<STATPROPSETSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextProxy(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1184, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, STATPROPSETSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextProxy(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1184, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, STATPROPSETSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextProxy(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1184, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, Span<STATPROPSETSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1184, Column 41 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextProxy(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, Span<STATPROPSETSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextProxy(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1193, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextStub(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, STATPROPSETSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextStub(This, celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1193, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextStub(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, Span<STATPROPSETSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextStub(This, celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1193, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextStub(this Windows thisApi, IEnumSTATPROPSETSTG* This, uint celt, Span<STATPROPSETSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextStub(This, celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1193, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, STATPROPSETSTG* rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextStub(ref This.GetPinnableReference(), celt, rgelt, pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1193, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, STATPROPSETSTG* rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextStub(ref This.GetPinnableReference(), celt, rgelt, ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1193, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, Span<STATPROPSETSTG> rgelt, uint* pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), pceltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1193, Column 43 in propidlbase.h")]
        public static unsafe int IEnumSTATPROPSETSTGNextStub(this Windows thisApi, Span<IEnumSTATPROPSETSTG> This, uint celt, Span<STATPROPSETSTG> rgelt, Span<uint> pceltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumSTATPROPSETSTGNextStub(ref This.GetPinnableReference(), celt, ref rgelt.GetPinnableReference(), ref pceltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1215, Column 26 in propidl.h")]
        public static unsafe int PropVariantCopy(this Windows thisApi, PropVariant* pvarDest, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvarSrc)
        {
            // SpanOverloader
            return thisApi.PropVariantCopy(pvarDest, in pvarSrc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1215, Column 26 in propidl.h")]
        public static unsafe int PropVariantCopy(this Windows thisApi, Span<PropVariant> pvarDest, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvarSrc)
        {
            // SpanOverloader
            return thisApi.PropVariantCopy(ref pvarDest.GetPinnableReference(), pvarSrc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1215, Column 26 in propidl.h")]
        public static unsafe int PropVariantCopy(this Windows thisApi, Span<PropVariant> pvarDest, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvarSrc)
        {
            // SpanOverloader
            return thisApi.PropVariantCopy(ref pvarDest.GetPinnableReference(), in pvarSrc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1219, Column 11 in propidl.h")]
        public static unsafe int PropVariantClear(this Windows thisApi, Span<PropVariant> pvar)
        {
            // SpanOverloader
            return thisApi.PropVariantClear(ref pvar.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1221, Column 11 in propidl.h")]
        public static unsafe int FreePropVariantArray(this Windows thisApi, uint cVariants, Span<PropVariant> rgvars)
        {
            // SpanOverloader
            return thisApi.FreePropVariantArray(cVariants, ref rgvars.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvar, ushort CodePage, SerializedPropertyValue* pprop, uint* pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(pvar, CodePage, pprop, pcb, pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvar, ushort CodePage, SerializedPropertyValue* pprop, Span<uint> pcb, uint pid, byte fReserved, uint* pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(pvar, CodePage, pprop, ref pcb.GetPinnableReference(), pid, fReserved, pcIndirect);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvar, ushort CodePage, SerializedPropertyValue* pprop, Span<uint> pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(pvar, CodePage, pprop, ref pcb.GetPinnableReference(), pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, uint* pcb, uint pid, byte fReserved, uint* pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(pvar, CodePage, ref pprop.GetPinnableReference(), pcb, pid, fReserved, pcIndirect);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, uint* pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(pvar, CodePage, ref pprop.GetPinnableReference(), pcb, pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, Span<uint> pcb, uint pid, byte fReserved, uint* pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(pvar, CodePage, ref pprop.GetPinnableReference(), ref pcb.GetPinnableReference(), pid, fReserved, pcIndirect);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] PropVariant* pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, Span<uint> pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(pvar, CodePage, ref pprop.GetPinnableReference(), ref pcb.GetPinnableReference(), pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, SerializedPropertyValue* pprop, uint* pcb, uint pid, byte fReserved, uint* pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, pprop, pcb, pid, fReserved, pcIndirect);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, SerializedPropertyValue* pprop, uint* pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, pprop, pcb, pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, SerializedPropertyValue* pprop, Span<uint> pcb, uint pid, byte fReserved, uint* pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, pprop, ref pcb.GetPinnableReference(), pid, fReserved, pcIndirect);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, SerializedPropertyValue* pprop, Span<uint> pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, pprop, ref pcb.GetPinnableReference(), pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, uint* pcb, uint pid, byte fReserved, uint* pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, ref pprop.GetPinnableReference(), pcb, pid, fReserved, pcIndirect);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, uint* pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, ref pprop.GetPinnableReference(), pcb, pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, Span<uint> pcb, uint pid, byte fReserved, uint* pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, ref pprop.GetPinnableReference(), ref pcb.GetPinnableReference(), pid, fReserved, pcIndirect);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1265, Column 1 in propidl.h")]
        public static unsafe SerializedPropertyValue* StgConvertVariantToProperty(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<PropVariant> pvar, ushort CodePage, Span<SerializedPropertyValue> pprop, Span<uint> pcb, uint pid, byte fReserved, Span<uint> pcIndirect)
        {
            // SpanOverloader
            return thisApi.StgConvertVariantToProperty(in pvar.GetPinnableReference(), CodePage, ref pprop.GetPinnableReference(), ref pcb.GetPinnableReference(), pid, fReserved, ref pcIndirect.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1280, Column 1 in propidl.h")]
        public static unsafe byte StgConvertPropertyToVariant(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] SerializedPropertyValue* pprop, ushort CodePage, Span<PropVariant> pvar, PMemoryAllocator* pma)
        {
            // SpanOverloader
            return thisApi.StgConvertPropertyToVariant(pprop, CodePage, ref pvar.GetPinnableReference(), pma);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1280, Column 1 in propidl.h")]
        public static unsafe byte StgConvertPropertyToVariant(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<SerializedPropertyValue> pprop, ushort CodePage, PropVariant* pvar, PMemoryAllocator* pma)
        {
            // SpanOverloader
            return thisApi.StgConvertPropertyToVariant(in pprop.GetPinnableReference(), CodePage, pvar, pma);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1280, Column 1 in propidl.h")]
        public static unsafe byte StgConvertPropertyToVariant(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<SerializedPropertyValue> pprop, ushort CodePage, Span<PropVariant> pvar, PMemoryAllocator* pma)
        {
            // SpanOverloader
            return thisApi.StgConvertPropertyToVariant(in pprop.GetPinnableReference(), CodePage, ref pvar.GetPinnableReference(), pma);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsRemoteNextProxy(this Windows thisApi, IEnumConnections* This, uint cConnections, ConnectData* rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsRemoteNextProxy(This, cConnections, rgcd, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsRemoteNextProxy(this Windows thisApi, IEnumConnections* This, uint cConnections, Span<ConnectData> rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsRemoteNextProxy(This, cConnections, ref rgcd.GetPinnableReference(), pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsRemoteNextProxy(this Windows thisApi, IEnumConnections* This, uint cConnections, Span<ConnectData> rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsRemoteNextProxy(This, cConnections, ref rgcd.GetPinnableReference(), ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsRemoteNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, ConnectData* rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, rgcd, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsRemoteNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, ConnectData* rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, rgcd, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsRemoteNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, Span<ConnectData> rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, ref rgcd.GetPinnableReference(), pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 588, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsRemoteNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, Span<ConnectData> rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, ref rgcd.GetPinnableReference(), ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 595, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 859, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsRemoteNextProxy(this Windows thisApi, IEnumConnectionPoints* This, uint cConnections, IConnectionPoint** ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsRemoteNextProxy(This, cConnections, ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 859, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsRemoteNextProxy(this Windows thisApi, IEnumConnectionPoints* This, uint cConnections, ref IConnectionPoint* ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsRemoteNextProxy(This, cConnections, ref ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 859, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsRemoteNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, IConnectionPoint** ppCP, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, ppCP, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 859, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsRemoteNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, IConnectionPoint** ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 859, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsRemoteNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, ref IConnectionPoint* ppCP, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, ref ppCP, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 859, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsRemoteNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, ref IConnectionPoint* ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsRemoteNextProxy(ref This.GetPinnableReference(), cConnections, ref ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 866, Column 17 in ocidl.h")]
        public static unsafe void IEnumConnectionPointsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumConnectionPointsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Guid* riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Guid* riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, char* bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, char* bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(This, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, char* bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, char* bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, char* bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, char* bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1145, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2RemoteCreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2RemoteCreateInstanceLicProxy(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1152, Column 17 in ocidl.h")]
        public static unsafe void IClassFactory2RemoteCreateInstanceLicStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IClassFactory2RemoteCreateInstanceLicStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2631, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteLoadProxy(this Windows thisApi, IPersistMemory* This, Span<byte> pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteLoadProxy(This, ref pMem.GetPinnableReference(), cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2631, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteLoadProxy(this Windows thisApi, Span<IPersistMemory> This, byte* pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteLoadProxy(ref This.GetPinnableReference(), pMem, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2631, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteLoadProxy(this Windows thisApi, Span<IPersistMemory> This, Span<byte> pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteLoadProxy(ref This.GetPinnableReference(), ref pMem.GetPinnableReference(), cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2631, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteLoadProxy(this Windows thisApi, Span<IPersistMemory> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteLoadProxy(ref This.GetPinnableReference(), pMem, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2637, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteLoadStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteLoadStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2644, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteSaveProxy(this Windows thisApi, IPersistMemory* This, Span<byte> pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteSaveProxy(This, ref pMem.GetPinnableReference(), fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2644, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteSaveProxy(this Windows thisApi, Span<IPersistMemory> This, byte* pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteSaveProxy(ref This.GetPinnableReference(), pMem, fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2644, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteSaveProxy(this Windows thisApi, Span<IPersistMemory> This, Span<byte> pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteSaveProxy(ref This.GetPinnableReference(), ref pMem.GetPinnableReference(), fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2644, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryRemoteSaveProxy(this Windows thisApi, Span<IPersistMemory> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryRemoteSaveProxy(ref This.GetPinnableReference(), pMem, fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2651, Column 17 in ocidl.h")]
        public static unsafe void IPersistMemoryRemoteSaveStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IPersistMemoryRemoteSaveStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5735, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsRemoteNextProxy(this Windows thisApi, IEnumOleUndoUnits* This, uint cElt, IOleUndoUnit** rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsRemoteNextProxy(This, cElt, rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5735, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsRemoteNextProxy(this Windows thisApi, IEnumOleUndoUnits* This, uint cElt, ref IOleUndoUnit* rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsRemoteNextProxy(This, cElt, ref rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5735, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsRemoteNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, IOleUndoUnit** rgElt, uint* pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsRemoteNextProxy(ref This.GetPinnableReference(), cElt, rgElt, pcEltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5735, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsRemoteNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, IOleUndoUnit** rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsRemoteNextProxy(ref This.GetPinnableReference(), cElt, rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5735, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsRemoteNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, ref IOleUndoUnit* rgElt, uint* pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsRemoteNextProxy(ref This.GetPinnableReference(), cElt, ref rgElt, pcEltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5735, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsRemoteNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, ref IOleUndoUnit* rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsRemoteNextProxy(ref This.GetPinnableReference(), cElt, ref rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 5742, Column 17 in ocidl.h")]
        public static unsafe void IEnumOleUndoUnitsRemoteNextStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IEnumOleUndoUnitsRemoteNextStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6819, Column 43 in ocidl.h")]
        public static unsafe int IAdviseSinkExRemoteOnViewStatusChangeProxy(this Windows thisApi, Span<IAdviseSinkEx> This, uint dwViewStatus)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkExRemoteOnViewStatusChangeProxy(ref This.GetPinnableReference(), dwViewStatus);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6824, Column 17 in ocidl.h")]
        public static unsafe void IAdviseSinkExRemoteOnViewStatusChangeStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExRemoteOnViewStatusChangeStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6998, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateRemoteQuickActivateProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, void* pQaContainer, Span<QAControl> pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateRemoteQuickActivateProxy(This, pQaContainer, ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6998, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateRemoteQuickActivateProxy<T0>(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<T0> pQaContainer, QAControl* pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateRemoteQuickActivateProxy(This, ref pQaContainer.GetPinnableReference(), pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6998, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateRemoteQuickActivateProxy<T0>(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<T0> pQaContainer, Span<QAControl> pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateRemoteQuickActivateProxy(This, ref pQaContainer.GetPinnableReference(), ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6998, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateRemoteQuickActivateProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, void* pQaContainer, QAControl* pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateRemoteQuickActivateProxy(ref This.GetPinnableReference(), pQaContainer, pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6998, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateRemoteQuickActivateProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, void* pQaContainer, Span<QAControl> pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateRemoteQuickActivateProxy(ref This.GetPinnableReference(), pQaContainer, ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6998, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateRemoteQuickActivateProxy<T0>(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<T0> pQaContainer, QAControl* pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateRemoteQuickActivateProxy(ref This.GetPinnableReference(), ref pQaContainer.GetPinnableReference(), pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 6998, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateRemoteQuickActivateProxy<T0>(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<T0> pQaContainer, Span<QAControl> pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateRemoteQuickActivateProxy(ref This.GetPinnableReference(), ref pQaContainer.GetPinnableReference(), ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(This, _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(This, _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, IRpcStubBuffer* This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(This, ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, IRpcChannelBuffer* _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), _pRpcChannelBuffer, ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, RPCMessage* _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), _pRpcMessage, ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, uint* _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), _pdwStubPhase);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7004, Column 17 in ocidl.h")]
        public static unsafe void IQuickActivateRemoteQuickActivateStub(this Windows thisApi, Span<IRpcStubBuffer> This, Span<IRpcChannelBuffer> _pRpcChannelBuffer, Span<RPCMessage> _pRpcMessage, Span<uint> _pdwStubPhase)
        {
            // SpanOverloader
            thisApi.IQuickActivateRemoteQuickActivateStub(ref This.GetPinnableReference(), ref _pRpcChannelBuffer.GetPinnableReference(), ref _pRpcMessage.GetPinnableReference(), ref _pdwStubPhase.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7040, Column 39 in ocidl.h")]
        public static unsafe uint HACCELUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7040, Column 39 in ocidl.h")]
        public static unsafe uint HACCELUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7041, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7042, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7043, Column 39 in ocidl.h")]
        public static unsafe void HACCELUserFree(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HACCELUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7043, Column 39 in ocidl.h")]
        public static unsafe void HACCELUserFree(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HACCELUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7050, Column 39 in ocidl.h")]
        public static unsafe uint HFONTUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7050, Column 39 in ocidl.h")]
        public static unsafe uint HFONTUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7051, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7052, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7053, Column 39 in ocidl.h")]
        public static unsafe void HFONTUserFree(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HFONTUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7053, Column 39 in ocidl.h")]
        public static unsafe void HFONTUserFree(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HFONTUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7055, Column 39 in ocidl.h")]
        public static unsafe uint HPALETTEUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7055, Column 39 in ocidl.h")]
        public static unsafe uint HPALETTEUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7056, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7057, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7058, Column 39 in ocidl.h")]
        public static unsafe void HPALETTEUserFree(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HPALETTEUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7058, Column 39 in ocidl.h")]
        public static unsafe void HPALETTEUserFree(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HPALETTEUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7060, Column 39 in ocidl.h")]
        public static unsafe uint HRGNUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7060, Column 39 in ocidl.h")]
        public static unsafe uint HRGNUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7061, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7062, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7063, Column 39 in ocidl.h")]
        public static unsafe void HRGNUserFree(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HRGNUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7063, Column 39 in ocidl.h")]
        public static unsafe void HRGNUserFree(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HRGNUserFree(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7065, Column 39 in ocidl.h")]
        public static unsafe uint HWNDUserSize(this Windows thisApi, uint* arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserSize(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7065, Column 39 in ocidl.h")]
        public static unsafe uint HWNDUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserSize(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7065, Column 39 in ocidl.h")]
        public static unsafe uint HWNDUserSize(this Windows thisApi, Span<uint> arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserSize(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7066, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7067, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7068, Column 39 in ocidl.h")]
        public static unsafe void HWNDUserFree(this Windows thisApi, uint* arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HWNDUserFree(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7068, Column 39 in ocidl.h")]
        public static unsafe void HWNDUserFree(this Windows thisApi, Span<uint> arg0, nint* arg1)
        {
            // SpanOverloader
            thisApi.HWNDUserFree(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7068, Column 39 in ocidl.h")]
        public static unsafe void HWNDUserFree(this Windows thisApi, Span<uint> arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HWNDUserFree(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7085, Column 39 in ocidl.h")]
        public static unsafe uint HACCELUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7085, Column 39 in ocidl.h")]
        public static unsafe uint HACCELUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7086, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7087, Column 29 in ocidl.h")]
        public static unsafe byte* HACCELUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HACCELUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7088, Column 39 in ocidl.h")]
        public static unsafe void HACCELUserFree64(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HACCELUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7088, Column 39 in ocidl.h")]
        public static unsafe void HACCELUserFree64(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HACCELUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7095, Column 39 in ocidl.h")]
        public static unsafe uint HFONTUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7095, Column 39 in ocidl.h")]
        public static unsafe uint HFONTUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7096, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7097, Column 29 in ocidl.h")]
        public static unsafe byte* HFONTUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HFONTUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7098, Column 39 in ocidl.h")]
        public static unsafe void HFONTUserFree64(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HFONTUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7098, Column 39 in ocidl.h")]
        public static unsafe void HFONTUserFree64(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HFONTUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7100, Column 39 in ocidl.h")]
        public static unsafe uint HPALETTEUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7100, Column 39 in ocidl.h")]
        public static unsafe uint HPALETTEUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7101, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7102, Column 29 in ocidl.h")]
        public static unsafe byte* HPALETTEUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HPALETTEUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7103, Column 39 in ocidl.h")]
        public static unsafe void HPALETTEUserFree64(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HPALETTEUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7103, Column 39 in ocidl.h")]
        public static unsafe void HPALETTEUserFree64(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HPALETTEUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7105, Column 39 in ocidl.h")]
        public static unsafe uint HRGNUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7105, Column 39 in ocidl.h")]
        public static unsafe uint HRGNUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7106, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, void** arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7107, Column 29 in ocidl.h")]
        public static unsafe byte* HRGNUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, ref void* arg2)
        {
            // SpanOverloader
            return thisApi.HRGNUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7108, Column 39 in ocidl.h")]
        public static unsafe void HRGNUserFree64(this Windows thisApi, Span<uint> arg0, void** arg1)
        {
            // SpanOverloader
            thisApi.HRGNUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7108, Column 39 in ocidl.h")]
        public static unsafe void HRGNUserFree64(this Windows thisApi, Span<uint> arg0, ref void* arg1)
        {
            // SpanOverloader
            thisApi.HRGNUserFree64(ref arg0.GetPinnableReference(), ref arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7110, Column 39 in ocidl.h")]
        public static unsafe uint HWNDUserSize64(this Windows thisApi, uint* arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserSize64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7110, Column 39 in ocidl.h")]
        public static unsafe uint HWNDUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserSize64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7110, Column 39 in ocidl.h")]
        public static unsafe uint HWNDUserSize64(this Windows thisApi, Span<uint> arg0, uint arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserSize64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7111, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserMarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserMarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, uint* arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, uint* arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(arg0, ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, uint* arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(arg0, arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, Span<uint> arg0, byte* arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, Span<uint> arg0, Span<byte> arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference(), ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, nint* arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, arg2);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7112, Column 29 in ocidl.h")]
        public static unsafe byte* HWNDUserUnmarshal64(this Windows thisApi, Span<uint> arg0, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string arg1, Span<nint> arg2)
        {
            // SpanOverloader
            return thisApi.HWNDUserUnmarshal64(ref arg0.GetPinnableReference(), arg1, ref arg2.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7113, Column 39 in ocidl.h")]
        public static unsafe void HWNDUserFree64(this Windows thisApi, uint* arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HWNDUserFree64(arg0, ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7113, Column 39 in ocidl.h")]
        public static unsafe void HWNDUserFree64(this Windows thisApi, Span<uint> arg0, nint* arg1)
        {
            // SpanOverloader
            thisApi.HWNDUserFree64(ref arg0.GetPinnableReference(), arg1);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7113, Column 39 in ocidl.h")]
        public static unsafe void HWNDUserFree64(this Windows thisApi, Span<uint> arg0, Span<nint> arg1)
        {
            // SpanOverloader
            thisApi.HWNDUserFree64(ref arg0.GetPinnableReference(), ref arg1.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7120, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextProxy(this Windows thisApi, IEnumConnections* This, uint cConnections, ConnectData* rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextProxy(This, cConnections, rgcd, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7120, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextProxy(this Windows thisApi, IEnumConnections* This, uint cConnections, Span<ConnectData> rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextProxy(This, cConnections, ref rgcd.GetPinnableReference(), pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7120, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextProxy(this Windows thisApi, IEnumConnections* This, uint cConnections, Span<ConnectData> rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextProxy(This, cConnections, ref rgcd.GetPinnableReference(), ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7120, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, ConnectData* rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextProxy(ref This.GetPinnableReference(), cConnections, rgcd, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7120, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, ConnectData* rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextProxy(ref This.GetPinnableReference(), cConnections, rgcd, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7120, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, Span<ConnectData> rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextProxy(ref This.GetPinnableReference(), cConnections, ref rgcd.GetPinnableReference(), pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7120, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextProxy(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, Span<ConnectData> rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextProxy(ref This.GetPinnableReference(), cConnections, ref rgcd.GetPinnableReference(), ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7127, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextStub(this Windows thisApi, IEnumConnections* This, uint cConnections, ConnectData* rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextStub(This, cConnections, rgcd, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7127, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextStub(this Windows thisApi, IEnumConnections* This, uint cConnections, Span<ConnectData> rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextStub(This, cConnections, ref rgcd.GetPinnableReference(), pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7127, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextStub(this Windows thisApi, IEnumConnections* This, uint cConnections, Span<ConnectData> rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextStub(This, cConnections, ref rgcd.GetPinnableReference(), ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7127, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextStub(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, ConnectData* rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextStub(ref This.GetPinnableReference(), cConnections, rgcd, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7127, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextStub(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, ConnectData* rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextStub(ref This.GetPinnableReference(), cConnections, rgcd, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7127, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextStub(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, Span<ConnectData> rgcd, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextStub(ref This.GetPinnableReference(), cConnections, ref rgcd.GetPinnableReference(), pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7127, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionsNextStub(this Windows thisApi, Span<IEnumConnections> This, uint cConnections, Span<ConnectData> rgcd, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionsNextStub(ref This.GetPinnableReference(), cConnections, ref rgcd.GetPinnableReference(), ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7133, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextProxy(this Windows thisApi, IEnumConnectionPoints* This, uint cConnections, IConnectionPoint** ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextProxy(This, cConnections, ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7133, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextProxy(this Windows thisApi, IEnumConnectionPoints* This, uint cConnections, ref IConnectionPoint* ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextProxy(This, cConnections, ref ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7133, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, IConnectionPoint** ppCP, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextProxy(ref This.GetPinnableReference(), cConnections, ppCP, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7133, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, IConnectionPoint** ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextProxy(ref This.GetPinnableReference(), cConnections, ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7133, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, ref IConnectionPoint* ppCP, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextProxy(ref This.GetPinnableReference(), cConnections, ref ppCP, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7133, Column 41 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextProxy(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, ref IConnectionPoint* ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextProxy(ref This.GetPinnableReference(), cConnections, ref ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7140, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextStub(this Windows thisApi, IEnumConnectionPoints* This, uint cConnections, IConnectionPoint** ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextStub(This, cConnections, ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7140, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextStub(this Windows thisApi, IEnumConnectionPoints* This, uint cConnections, ref IConnectionPoint* ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextStub(This, cConnections, ref ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7140, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextStub(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, IConnectionPoint** ppCP, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextStub(ref This.GetPinnableReference(), cConnections, ppCP, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7140, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextStub(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, IConnectionPoint** ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextStub(ref This.GetPinnableReference(), cConnections, ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7140, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextStub(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, ref IConnectionPoint* ppCP, uint* pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextStub(ref This.GetPinnableReference(), cConnections, ref ppCP, pcFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7140, Column 43 in ocidl.h")]
        public static unsafe int IEnumConnectionPointsNextStub(this Windows thisApi, Span<IEnumConnectionPoints> This, uint cConnections, ref IConnectionPoint* ppCP, Span<uint> pcFetched)
        {
            // SpanOverloader
            return thisApi.IEnumConnectionPointsNextStub(ref This.GetPinnableReference(), cConnections, ref ppCP, ref pcFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(This, ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Silk.NET.Core.Native.IUnknown* pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), pUnkOuter, ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Silk.NET.Core.Native.IUnknown* pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), pUnkReserved, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, char* bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, Span<char> bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, void** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7146, Column 41 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Silk.NET.Core.Native.IUnknown> pUnkOuter, Span<Silk.NET.Core.Native.IUnknown> pUnkReserved, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref void* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicProxy(ref This.GetPinnableReference(), ref pUnkOuter.GetPinnableReference(), ref pUnkReserved.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Guid* riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Guid* riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, char* bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, char* bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(This, ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, char* bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, char* bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), riid, ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), riid, bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Guid* riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), riid, bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, char* bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, char* bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, Span<char> bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, Span<char> bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), ref bstrKey.GetPinnableReference(), ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, Silk.NET.Core.Native.IUnknown** ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7160, Column 43 in ocidl.h")]
        public static unsafe int IClassFactory2CreateInstanceLicStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<Guid> riid, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.BStr)] string bstrKey, ref Silk.NET.Core.Native.IUnknown* ppvObj)
        {
            // SpanOverloader
            return thisApi.IClassFactory2CreateInstanceLicStub(ref This.GetPinnableReference(), ref riid.GetPinnableReference(), bstrKey, ref ppvObj);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7166, Column 41 in ocidl.h")]
        public static unsafe int IPersistMemoryLoadProxy<T0>(this Windows thisApi, IPersistMemory* This, Span<T0> pMem, uint cbSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IPersistMemoryLoadProxy(This, ref pMem.GetPinnableReference(), cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7166, Column 41 in ocidl.h")]
        public static unsafe int IPersistMemoryLoadProxy(this Windows thisApi, Span<IPersistMemory> This, void* pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryLoadProxy(ref This.GetPinnableReference(), pMem, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7166, Column 41 in ocidl.h")]
        public static unsafe int IPersistMemoryLoadProxy<T0>(this Windows thisApi, Span<IPersistMemory> This, Span<T0> pMem, uint cbSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IPersistMemoryLoadProxy(ref This.GetPinnableReference(), ref pMem.GetPinnableReference(), cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7172, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryLoadStub(this Windows thisApi, IPersistMemory* This, Span<byte> pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryLoadStub(This, ref pMem.GetPinnableReference(), cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7172, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryLoadStub(this Windows thisApi, Span<IPersistMemory> This, byte* pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryLoadStub(ref This.GetPinnableReference(), pMem, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7172, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryLoadStub(this Windows thisApi, Span<IPersistMemory> This, Span<byte> pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryLoadStub(ref This.GetPinnableReference(), ref pMem.GetPinnableReference(), cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7172, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemoryLoadStub(this Windows thisApi, Span<IPersistMemory> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pMem, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemoryLoadStub(ref This.GetPinnableReference(), pMem, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7177, Column 41 in ocidl.h")]
        public static unsafe int IPersistMemorySaveProxy<T0>(this Windows thisApi, IPersistMemory* This, Span<T0> pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IPersistMemorySaveProxy(This, ref pMem.GetPinnableReference(), fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7177, Column 41 in ocidl.h")]
        public static unsafe int IPersistMemorySaveProxy(this Windows thisApi, Span<IPersistMemory> This, void* pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemorySaveProxy(ref This.GetPinnableReference(), pMem, fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7177, Column 41 in ocidl.h")]
        public static unsafe int IPersistMemorySaveProxy<T0>(this Windows thisApi, Span<IPersistMemory> This, Span<T0> pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IPersistMemorySaveProxy(ref This.GetPinnableReference(), ref pMem.GetPinnableReference(), fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7184, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemorySaveStub(this Windows thisApi, IPersistMemory* This, Span<byte> pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemorySaveStub(This, ref pMem.GetPinnableReference(), fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7184, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemorySaveStub(this Windows thisApi, Span<IPersistMemory> This, byte* pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemorySaveStub(ref This.GetPinnableReference(), pMem, fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7184, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemorySaveStub(this Windows thisApi, Span<IPersistMemory> This, Span<byte> pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemorySaveStub(ref This.GetPinnableReference(), ref pMem.GetPinnableReference(), fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7184, Column 43 in ocidl.h")]
        public static unsafe int IPersistMemorySaveStub(this Windows thisApi, Span<IPersistMemory> This, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string pMem, Silk.NET.Core.Bool32 fClearDirty, uint cbSize)
        {
            // SpanOverloader
            return thisApi.IPersistMemorySaveStub(ref This.GetPinnableReference(), pMem, fClearDirty, cbSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7190, Column 41 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextProxy(this Windows thisApi, IEnumOleUndoUnits* This, uint cElt, IOleUndoUnit** rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextProxy(This, cElt, rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7190, Column 41 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextProxy(this Windows thisApi, IEnumOleUndoUnits* This, uint cElt, ref IOleUndoUnit* rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextProxy(This, cElt, ref rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7190, Column 41 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, IOleUndoUnit** rgElt, uint* pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextProxy(ref This.GetPinnableReference(), cElt, rgElt, pcEltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7190, Column 41 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, IOleUndoUnit** rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextProxy(ref This.GetPinnableReference(), cElt, rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7190, Column 41 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, ref IOleUndoUnit* rgElt, uint* pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextProxy(ref This.GetPinnableReference(), cElt, ref rgElt, pcEltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7190, Column 41 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextProxy(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, ref IOleUndoUnit* rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextProxy(ref This.GetPinnableReference(), cElt, ref rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7197, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextStub(this Windows thisApi, IEnumOleUndoUnits* This, uint cElt, IOleUndoUnit** rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextStub(This, cElt, rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7197, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextStub(this Windows thisApi, IEnumOleUndoUnits* This, uint cElt, ref IOleUndoUnit* rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextStub(This, cElt, ref rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7197, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextStub(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, IOleUndoUnit** rgElt, uint* pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextStub(ref This.GetPinnableReference(), cElt, rgElt, pcEltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7197, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextStub(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, IOleUndoUnit** rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextStub(ref This.GetPinnableReference(), cElt, rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7197, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextStub(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, ref IOleUndoUnit* rgElt, uint* pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextStub(ref This.GetPinnableReference(), cElt, ref rgElt, pcEltFetched);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7197, Column 43 in ocidl.h")]
        public static unsafe int IEnumOleUndoUnitsNextStub(this Windows thisApi, Span<IEnumOleUndoUnits> This, uint cElt, ref IOleUndoUnit* rgElt, Span<uint> pcEltFetched)
        {
            // SpanOverloader
            return thisApi.IEnumOleUndoUnitsNextStub(ref This.GetPinnableReference(), cElt, ref rgElt, ref pcEltFetched.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7203, Column 38 in ocidl.h")]
        public static unsafe void IAdviseSinkExOnViewStatusChangeProxy(this Windows thisApi, Span<IAdviseSinkEx> This, uint dwViewStatus)
        {
            // SpanOverloader
            thisApi.IAdviseSinkExOnViewStatusChangeProxy(ref This.GetPinnableReference(), dwViewStatus);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7208, Column 43 in ocidl.h")]
        public static unsafe int IAdviseSinkExOnViewStatusChangeStub(this Windows thisApi, Span<IAdviseSinkEx> This, uint dwViewStatus)
        {
            // SpanOverloader
            return thisApi.IAdviseSinkExOnViewStatusChangeStub(ref This.GetPinnableReference(), dwViewStatus);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7212, Column 41 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateProxy(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, void* pQaContainer, Span<QAControl> pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateProxy(This, pQaContainer, ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7212, Column 41 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateProxy<T0>(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<T0> pQaContainer, QAControl* pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateProxy(This, ref pQaContainer.GetPinnableReference(), pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7212, Column 41 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateProxy<T0>(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<T0> pQaContainer, Span<QAControl> pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateProxy(This, ref pQaContainer.GetPinnableReference(), ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7212, Column 41 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, void* pQaContainer, QAControl* pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateProxy(ref This.GetPinnableReference(), pQaContainer, pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7212, Column 41 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateProxy(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, void* pQaContainer, Span<QAControl> pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateProxy(ref This.GetPinnableReference(), pQaContainer, ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7212, Column 41 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateProxy<T0>(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<T0> pQaContainer, QAControl* pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateProxy(ref This.GetPinnableReference(), ref pQaContainer.GetPinnableReference(), pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7212, Column 41 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateProxy<T0>(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<T0> pQaContainer, Span<QAControl> pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateProxy(ref This.GetPinnableReference(), ref pQaContainer.GetPinnableReference(), ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7218, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateStub(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, void* pQaContainer, Span<QAControl> pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateStub(This, pQaContainer, ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7218, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateStub<T0>(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<T0> pQaContainer, QAControl* pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateStub(This, ref pQaContainer.GetPinnableReference(), pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7218, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateStub<T0>(this Windows thisApi, Silk.NET.Core.Native.IUnknown* This, Span<T0> pQaContainer, Span<QAControl> pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateStub(This, ref pQaContainer.GetPinnableReference(), ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7218, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, void* pQaContainer, QAControl* pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateStub(ref This.GetPinnableReference(), pQaContainer, pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7218, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateStub(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, void* pQaContainer, Span<QAControl> pQaControl)
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateStub(ref This.GetPinnableReference(), pQaContainer, ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7218, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateStub<T0>(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<T0> pQaContainer, QAControl* pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateStub(ref This.GetPinnableReference(), ref pQaContainer.GetPinnableReference(), pQaControl);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 7218, Column 43 in ocidl.h")]
        public static unsafe int IQuickActivateQuickActivateStub<T0>(this Windows thisApi, Span<Silk.NET.Core.Native.IUnknown> This, Span<T0> pQaContainer, Span<QAControl> pQaControl) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.IQuickActivateQuickActivateStub(ref This.GetPinnableReference(), ref pQaContainer.GetPinnableReference(), ref pQaControl.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in evntprov.h")]
        public static unsafe uint EventRegister(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ProviderId, PfnPenablecallback EnableCallback, void* CallbackContext, Span<ulong> RegHandle)
        {
            // SpanOverloader
            return thisApi.EventRegister(ProviderId, EnableCallback, CallbackContext, ref RegHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in evntprov.h")]
        public static unsafe uint EventRegister<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ProviderId, PfnPenablecallback EnableCallback, Span<T0> CallbackContext, ulong* RegHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EventRegister(ProviderId, EnableCallback, ref CallbackContext.GetPinnableReference(), RegHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in evntprov.h")]
        public static unsafe uint EventRegister<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ProviderId, PfnPenablecallback EnableCallback, Span<T0> CallbackContext, Span<ulong> RegHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EventRegister(ProviderId, EnableCallback, ref CallbackContext.GetPinnableReference(), ref RegHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in evntprov.h")]
        public static unsafe uint EventRegister(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, PfnPenablecallback EnableCallback, void* CallbackContext, ulong* RegHandle)
        {
            // SpanOverloader
            return thisApi.EventRegister(in ProviderId.GetPinnableReference(), EnableCallback, CallbackContext, RegHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in evntprov.h")]
        public static unsafe uint EventRegister(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, PfnPenablecallback EnableCallback, void* CallbackContext, Span<ulong> RegHandle)
        {
            // SpanOverloader
            return thisApi.EventRegister(in ProviderId.GetPinnableReference(), EnableCallback, CallbackContext, ref RegHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in evntprov.h")]
        public static unsafe uint EventRegister<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, PfnPenablecallback EnableCallback, Span<T0> CallbackContext, ulong* RegHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EventRegister(in ProviderId.GetPinnableReference(), EnableCallback, ref CallbackContext.GetPinnableReference(), RegHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 542, Column 1 in evntprov.h")]
        public static unsafe uint EventRegister<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, PfnPenablecallback EnableCallback, Span<T0> CallbackContext, Span<ulong> RegHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EventRegister(in ProviderId.GetPinnableReference(), EnableCallback, ref CallbackContext.GetPinnableReference(), ref RegHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 569, Column 1 in evntprov.h")]
        public static unsafe uint EventSetInformation<T0>(this Windows thisApi, ulong RegHandle, EventInfoClass InformationClass, Span<T0> EventInformation, uint InformationLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EventSetInformation(RegHandle, InformationClass, ref EventInformation.GetPinnableReference(), InformationLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 612, Column 1 in evntprov.h")]
        public static unsafe byte EventEnabled(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor)
        {
            // SpanOverloader
            return thisApi.EventEnabled(RegHandle, in EventDescriptor.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 678, Column 1 in evntprov.h")]
        public static unsafe uint EventWrite(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWrite(RegHandle, EventDescriptor, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 678, Column 1 in evntprov.h")]
        public static unsafe uint EventWrite(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWrite(RegHandle, in EventDescriptor.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 678, Column 1 in evntprov.h")]
        public static unsafe uint EventWrite(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWrite(RegHandle, in EventDescriptor.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, EventDescriptor, ActivityId, RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, EventDescriptor, ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, EventDescriptor, ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, EventDescriptor, in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, EventDescriptor, in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, EventDescriptor, in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, EventDescriptor, in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), ActivityId, RelatedActivityId, UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), ActivityId, RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 703, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteTransfer(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteTransfer(RegHandle, in EventDescriptor.GetPinnableReference(), in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, ActivityId, RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EventDescriptor* EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, EventDescriptor, Filter, Flags, in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, ActivityId, RelatedActivityId, UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, ActivityId, RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, ActivityId, in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, in ActivityId.GetPinnableReference(), RelatedActivityId, UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, EventDataDescriptor* UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, UserData);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 737, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteEx(this Windows thisApi, ulong RegHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EventDescriptor> EventDescriptor, ulong Filter, uint Flags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ActivityId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> RelatedActivityId, uint UserDataCount, Span<EventDataDescriptor> UserData)
        {
            // SpanOverloader
            return thisApi.EventWriteEx(RegHandle, in EventDescriptor.GetPinnableReference(), Filter, Flags, in ActivityId.GetPinnableReference(), in RelatedActivityId.GetPinnableReference(), UserDataCount, ref UserData.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 755, Column 1 in evntprov.h")]
        public static unsafe uint EventWriteString(this Windows thisApi, ulong RegHandle, byte Level, ulong Keyword, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> String)
        {
            // SpanOverloader
            return thisApi.EventWriteString(RegHandle, Level, Keyword, in String.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 782, Column 1 in evntprov.h")]
        public static unsafe uint EventActivityIdControl(this Windows thisApi, uint ControlCode, Span<Guid> ActivityId)
        {
            // SpanOverloader
            return thisApi.EventActivityIdControl(ControlCode, ref ActivityId.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(ref TraceId.GetPinnableReference(), InstanceName, Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(ref TraceId.GetPinnableReference(), InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(ref TraceId.GetPinnableReference(), in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(ref TraceId.GetPinnableReference(), in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(ref TraceId.GetPinnableReference(), InstanceName, Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1704, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceW(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceW(ref TraceId.GetPinnableReference(), InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, ulong* TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(ref TraceId.GetPinnableReference(), InstanceName, Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(ref TraceId.GetPinnableReference(), InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(ref TraceId.GetPinnableReference(), in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(ref TraceId.GetPinnableReference(), in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(ref TraceId.GetPinnableReference(), InstanceName, Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1719, Column 1 in evntrace.h")]
        public static unsafe uint StartTraceA(this Windows thisApi, Span<ulong> TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StartTraceA(ref TraceId.GetPinnableReference(), InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1738, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1738, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceW(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1738, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceW(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1738, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1753, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1753, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceA(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1753, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceA(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1753, Column 1 in evntrace.h")]
        public static unsafe uint StopTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.StopTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1772, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1772, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceW(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1772, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceW(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1772, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1787, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1787, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceA(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1787, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceA(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1787, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.QueryTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1800, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1800, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceW(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1800, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceW(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1800, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1809, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1809, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceA(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1809, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceA(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1809, Column 1 in evntrace.h")]
        public static unsafe uint UpdateTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.UpdateTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1830, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1830, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceW(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1830, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceW(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1830, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1847, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1847, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, EventTraceProperties* Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceA(TraceId, in InstanceName.GetPinnableReference(), Properties);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1847, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceA(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1847, Column 1 in evntrace.h")]
        public static unsafe uint FlushTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, Span<EventTraceProperties> Properties)
        {
            // SpanOverloader
            return thisApi.FlushTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1866, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* InstanceName, Span<EventTraceProperties> Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference(), ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1866, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, EventTraceProperties* Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceW(TraceId, in InstanceName.GetPinnableReference(), Properties, ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1866, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> InstanceName, Span<EventTraceProperties> Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceW(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference(), ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1866, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceW(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string InstanceName, Span<EventTraceProperties> Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceW(TraceId, InstanceName, ref Properties.GetPinnableReference(), ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1882, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* InstanceName, Span<EventTraceProperties> Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference(), ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1882, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, EventTraceProperties* Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceA(TraceId, in InstanceName.GetPinnableReference(), Properties, ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1882, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> InstanceName, Span<EventTraceProperties> Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceA(TraceId, in InstanceName.GetPinnableReference(), ref Properties.GetPinnableReference(), ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1882, Column 1 in evntrace.h")]
        public static unsafe uint ControlTraceA(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string InstanceName, Span<EventTraceProperties> Properties, uint ControlCode)
        {
            // SpanOverloader
            return thisApi.ControlTraceA(TraceId, InstanceName, ref Properties.GetPinnableReference(), ControlCode);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1892, Column 1 in evntrace.h")]
        public static unsafe uint QueryAllTracesW(this Windows thisApi, EventTraceProperties** PropertyArray, uint PropertyArrayCount, Span<uint> LoggerCount)
        {
            // SpanOverloader
            return thisApi.QueryAllTracesW(PropertyArray, PropertyArrayCount, ref LoggerCount.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1892, Column 1 in evntrace.h")]
        public static unsafe uint QueryAllTracesW(this Windows thisApi, ref EventTraceProperties* PropertyArray, uint PropertyArrayCount, Span<uint> LoggerCount)
        {
            // SpanOverloader
            return thisApi.QueryAllTracesW(ref PropertyArray, PropertyArrayCount, ref LoggerCount.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1901, Column 1 in evntrace.h")]
        public static unsafe uint QueryAllTracesA(this Windows thisApi, EventTraceProperties** PropertyArray, uint PropertyArrayCount, Span<uint> LoggerCount)
        {
            // SpanOverloader
            return thisApi.QueryAllTracesA(PropertyArray, PropertyArrayCount, ref LoggerCount.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1901, Column 1 in evntrace.h")]
        public static unsafe uint QueryAllTracesA(this Windows thisApi, ref EventTraceProperties* PropertyArray, uint PropertyArrayCount, Span<uint> LoggerCount)
        {
            // SpanOverloader
            return thisApi.QueryAllTracesA(ref PropertyArray, PropertyArrayCount, ref LoggerCount.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1920, Column 1 in evntrace.h")]
        public static unsafe uint EnableTrace(this Windows thisApi, uint Enable, uint EnableFlag, uint EnableLevel, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, ulong TraceId)
        {
            // SpanOverloader
            return thisApi.EnableTrace(Enable, EnableFlag, EnableLevel, in ControlGuid.GetPinnableReference(), TraceId);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1942, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ProviderId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* SourceId, ulong TraceId, uint IsEnabled, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint EnableProperty, Span<EventFilterDescriptor> EnableFilterDesc)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx(ProviderId, SourceId, TraceId, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, ref EnableFilterDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1942, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ProviderId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> SourceId, ulong TraceId, uint IsEnabled, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint EnableProperty, EventFilterDescriptor* EnableFilterDesc)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx(ProviderId, in SourceId.GetPinnableReference(), TraceId, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, EnableFilterDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1942, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ProviderId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> SourceId, ulong TraceId, uint IsEnabled, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint EnableProperty, Span<EventFilterDescriptor> EnableFilterDesc)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx(ProviderId, in SourceId.GetPinnableReference(), TraceId, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, ref EnableFilterDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1942, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* SourceId, ulong TraceId, uint IsEnabled, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint EnableProperty, EventFilterDescriptor* EnableFilterDesc)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx(in ProviderId.GetPinnableReference(), SourceId, TraceId, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, EnableFilterDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1942, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* SourceId, ulong TraceId, uint IsEnabled, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint EnableProperty, Span<EventFilterDescriptor> EnableFilterDesc)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx(in ProviderId.GetPinnableReference(), SourceId, TraceId, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, ref EnableFilterDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1942, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> SourceId, ulong TraceId, uint IsEnabled, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint EnableProperty, EventFilterDescriptor* EnableFilterDesc)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx(in ProviderId.GetPinnableReference(), in SourceId.GetPinnableReference(), TraceId, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, EnableFilterDesc);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1942, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> SourceId, ulong TraceId, uint IsEnabled, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint EnableProperty, Span<EventFilterDescriptor> EnableFilterDesc)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx(in ProviderId.GetPinnableReference(), in SourceId.GetPinnableReference(), TraceId, IsEnabled, Level, MatchAnyKeyword, MatchAllKeyword, EnableProperty, ref EnableFilterDesc.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1989, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx2(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ProviderId, uint ControlCode, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint Timeout, Span<EnableTraceParameters> EnableParameters)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx2(TraceId, ProviderId, ControlCode, Level, MatchAnyKeyword, MatchAllKeyword, Timeout, ref EnableParameters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1989, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx2(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, uint ControlCode, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint Timeout, EnableTraceParameters* EnableParameters)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx2(TraceId, in ProviderId.GetPinnableReference(), ControlCode, Level, MatchAnyKeyword, MatchAllKeyword, Timeout, EnableParameters);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 1989, Column 1 in evntrace.h")]
        public static unsafe uint EnableTraceEx2(this Windows thisApi, ulong TraceId, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ProviderId, uint ControlCode, byte Level, ulong MatchAnyKeyword, ulong MatchAllKeyword, uint Timeout, Span<EnableTraceParameters> EnableParameters)
        {
            // SpanOverloader
            return thisApi.EnableTraceEx2(TraceId, in ProviderId.GetPinnableReference(), ControlCode, Level, MatchAnyKeyword, MatchAllKeyword, Timeout, ref EnableParameters.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2382, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuidsEx(this Windows thisApi, TraceQueryInfoClass TraceQueryInfoClass, void* InBuffer, uint InBufferSize, void* OutBuffer, uint OutBufferSize, Span<uint> ReturnLength)
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuidsEx(TraceQueryInfoClass, InBuffer, InBufferSize, OutBuffer, OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2382, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuidsEx<T0>(this Windows thisApi, TraceQueryInfoClass TraceQueryInfoClass, void* InBuffer, uint InBufferSize, Span<T0> OutBuffer, uint OutBufferSize, uint* ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuidsEx(TraceQueryInfoClass, InBuffer, InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2382, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuidsEx<T0>(this Windows thisApi, TraceQueryInfoClass TraceQueryInfoClass, void* InBuffer, uint InBufferSize, Span<T0> OutBuffer, uint OutBufferSize, Span<uint> ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuidsEx(TraceQueryInfoClass, InBuffer, InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2382, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuidsEx<T0>(this Windows thisApi, TraceQueryInfoClass TraceQueryInfoClass, Span<T0> InBuffer, uint InBufferSize, void* OutBuffer, uint OutBufferSize, uint* ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuidsEx(TraceQueryInfoClass, ref InBuffer.GetPinnableReference(), InBufferSize, OutBuffer, OutBufferSize, ReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2382, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuidsEx<T0>(this Windows thisApi, TraceQueryInfoClass TraceQueryInfoClass, Span<T0> InBuffer, uint InBufferSize, void* OutBuffer, uint OutBufferSize, Span<uint> ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuidsEx(TraceQueryInfoClass, ref InBuffer.GetPinnableReference(), InBufferSize, OutBuffer, OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2382, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuidsEx<T0, T1>(this Windows thisApi, TraceQueryInfoClass TraceQueryInfoClass, Span<T0> InBuffer, uint InBufferSize, Span<T1> OutBuffer, uint OutBufferSize, uint* ReturnLength) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuidsEx(TraceQueryInfoClass, ref InBuffer.GetPinnableReference(), InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2382, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuidsEx<T0, T1>(this Windows thisApi, TraceQueryInfoClass TraceQueryInfoClass, Span<T0> InBuffer, uint InBufferSize, Span<T1> OutBuffer, uint OutBufferSize, Span<uint> ReturnLength) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuidsEx(TraceQueryInfoClass, ref InBuffer.GetPinnableReference(), InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2439, Column 1 in evntrace.h")]
        public static unsafe uint TraceSetInformation<T0>(this Windows thisApi, ulong TraceId, TraceQueryInfoClass InformationClass, Span<T0> TraceInformation, uint InformationLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.TraceSetInformation(TraceId, InformationClass, ref TraceInformation.GetPinnableReference(), InformationLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2451, Column 1 in evntrace.h")]
        public static unsafe uint TraceQueryInformation(this Windows thisApi, ulong TraceId, TraceQueryInfoClass InformationClass, void* TraceInformation, uint InformationLength, Span<uint> ReturnLength)
        {
            // SpanOverloader
            return thisApi.TraceQueryInformation(TraceId, InformationClass, TraceInformation, InformationLength, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2451, Column 1 in evntrace.h")]
        public static unsafe uint TraceQueryInformation<T0>(this Windows thisApi, ulong TraceId, TraceQueryInfoClass InformationClass, Span<T0> TraceInformation, uint InformationLength, uint* ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.TraceQueryInformation(TraceId, InformationClass, ref TraceInformation.GetPinnableReference(), InformationLength, ReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2451, Column 1 in evntrace.h")]
        public static unsafe uint TraceQueryInformation<T0>(this Windows thisApi, ulong TraceId, TraceQueryInfoClass InformationClass, Span<T0> TraceInformation, uint InformationLength, Span<uint> ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.TraceQueryInformation(TraceId, InformationClass, ref TraceInformation.GetPinnableReference(), InformationLength, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2473, Column 1 in evntrace.h")]
        public static unsafe uint CreateTraceInstanceId(this Windows thisApi, void* RegHandle, Span<EventInstanceInfo> InstInfo)
        {
            // SpanOverloader
            return thisApi.CreateTraceInstanceId(RegHandle, ref InstInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2473, Column 1 in evntrace.h")]
        public static unsafe uint CreateTraceInstanceId<T0>(this Windows thisApi, Span<T0> RegHandle, EventInstanceInfo* InstInfo) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateTraceInstanceId(ref RegHandle.GetPinnableReference(), InstInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2473, Column 1 in evntrace.h")]
        public static unsafe uint CreateTraceInstanceId<T0>(this Windows thisApi, Span<T0> RegHandle, Span<EventInstanceInfo> InstInfo) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.CreateTraceInstanceId(ref RegHandle.GetPinnableReference(), ref InstInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2503, Column 1 in evntrace.h")]
        public static unsafe uint TraceEvent(this Windows thisApi, ulong TraceHandle, Span<EventTraceHeader> EventTrace)
        {
            // SpanOverloader
            return thisApi.TraceEvent(TraceHandle, ref EventTrace.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2517, Column 1 in evntrace.h")]
        public static unsafe uint TraceEventInstance(this Windows thisApi, ulong TraceHandle, EventInstanceHeader* EventTrace, EventInstanceInfo* InstInfo, Span<EventInstanceInfo> ParentInstInfo)
        {
            // SpanOverloader
            return thisApi.TraceEventInstance(TraceHandle, EventTrace, InstInfo, ref ParentInstInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2517, Column 1 in evntrace.h")]
        public static unsafe uint TraceEventInstance(this Windows thisApi, ulong TraceHandle, EventInstanceHeader* EventTrace, Span<EventInstanceInfo> InstInfo, EventInstanceInfo* ParentInstInfo)
        {
            // SpanOverloader
            return thisApi.TraceEventInstance(TraceHandle, EventTrace, ref InstInfo.GetPinnableReference(), ParentInstInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2517, Column 1 in evntrace.h")]
        public static unsafe uint TraceEventInstance(this Windows thisApi, ulong TraceHandle, EventInstanceHeader* EventTrace, Span<EventInstanceInfo> InstInfo, Span<EventInstanceInfo> ParentInstInfo)
        {
            // SpanOverloader
            return thisApi.TraceEventInstance(TraceHandle, EventTrace, ref InstInfo.GetPinnableReference(), ref ParentInstInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2517, Column 1 in evntrace.h")]
        public static unsafe uint TraceEventInstance(this Windows thisApi, ulong TraceHandle, Span<EventInstanceHeader> EventTrace, EventInstanceInfo* InstInfo, EventInstanceInfo* ParentInstInfo)
        {
            // SpanOverloader
            return thisApi.TraceEventInstance(TraceHandle, ref EventTrace.GetPinnableReference(), InstInfo, ParentInstInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2517, Column 1 in evntrace.h")]
        public static unsafe uint TraceEventInstance(this Windows thisApi, ulong TraceHandle, Span<EventInstanceHeader> EventTrace, EventInstanceInfo* InstInfo, Span<EventInstanceInfo> ParentInstInfo)
        {
            // SpanOverloader
            return thisApi.TraceEventInstance(TraceHandle, ref EventTrace.GetPinnableReference(), InstInfo, ref ParentInstInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2517, Column 1 in evntrace.h")]
        public static unsafe uint TraceEventInstance(this Windows thisApi, ulong TraceHandle, Span<EventInstanceHeader> EventTrace, Span<EventInstanceInfo> InstInfo, EventInstanceInfo* ParentInstInfo)
        {
            // SpanOverloader
            return thisApi.TraceEventInstance(TraceHandle, ref EventTrace.GetPinnableReference(), ref InstInfo.GetPinnableReference(), ParentInstInfo);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2517, Column 1 in evntrace.h")]
        public static unsafe uint TraceEventInstance(this Windows thisApi, ulong TraceHandle, Span<EventInstanceHeader> EventTrace, Span<EventInstanceInfo> InstInfo, Span<EventInstanceInfo> ParentInstInfo)
        {
            // SpanOverloader
            return thisApi.TraceEventInstance(TraceHandle, ref EventTrace.GetPinnableReference(), ref InstInfo.GetPinnableReference(), ref ParentInstInfo.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2537, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsW<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPWStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsW(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA(this Windows thisApi, PfnWmidprequest RequestAddress, void* RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle)
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, RequestContext, in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), ControlGuid, GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, TraceGuidRegistration* TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, TraceGuidReg, MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), in MofImagePath.GetPinnableReference(), MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] byte* MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<byte> MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, in MofResourceName.GetPinnableReference(), ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, ulong* RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, RegistrationHandle);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2557, Column 1 in evntrace.h")]
        public static unsafe uint RegisterTraceGuidsA<T0>(this Windows thisApi, PfnWmidprequest RequestAddress, Span<T0> RequestContext, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> ControlGuid, uint GuidCount, Span<TraceGuidRegistration> TraceGuidReg, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofImagePath, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPStr)] string MofResourceName, Span<ulong> RegistrationHandle) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.RegisterTraceGuidsA(RequestAddress, ref RequestContext.GetPinnableReference(), in ControlGuid.GetPinnableReference(), GuidCount, ref TraceGuidReg.GetPinnableReference(), MofImagePath, MofResourceName, ref RegistrationHandle.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2572, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuids(this Windows thisApi, TraceGuidProperties** GuidPropertiesArray, uint PropertyArrayCount, Span<uint> GuidCount)
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuids(GuidPropertiesArray, PropertyArrayCount, ref GuidCount.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2572, Column 1 in evntrace.h")]
        public static unsafe uint EnumerateTraceGuids(this Windows thisApi, ref TraceGuidProperties* GuidPropertiesArray, uint PropertyArrayCount, Span<uint> GuidCount)
        {
            // SpanOverloader
            return thisApi.EnumerateTraceGuids(ref GuidPropertiesArray, PropertyArrayCount, ref GuidCount.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2595, Column 1 in evntrace.h")]
        public static unsafe ulong GetTraceLoggerHandle<T0>(this Windows thisApi, Span<T0> Buffer) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.GetTraceLoggerHandle(ref Buffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2627, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceW(this Windows thisApi, Span<EventTraceLogfilew> Logfile)
        {
            // SpanOverloader
            return thisApi.OpenTraceW(ref Logfile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2635, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTrace(this Windows thisApi, ulong* HandleArray, uint HandleCount, Filetime* StartTime, Span<Filetime> EndTime)
        {
            // SpanOverloader
            return thisApi.ProcessTrace(HandleArray, HandleCount, StartTime, ref EndTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2635, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTrace(this Windows thisApi, ulong* HandleArray, uint HandleCount, Span<Filetime> StartTime, Filetime* EndTime)
        {
            // SpanOverloader
            return thisApi.ProcessTrace(HandleArray, HandleCount, ref StartTime.GetPinnableReference(), EndTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2635, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTrace(this Windows thisApi, ulong* HandleArray, uint HandleCount, Span<Filetime> StartTime, Span<Filetime> EndTime)
        {
            // SpanOverloader
            return thisApi.ProcessTrace(HandleArray, HandleCount, ref StartTime.GetPinnableReference(), ref EndTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2635, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTrace(this Windows thisApi, Span<ulong> HandleArray, uint HandleCount, Filetime* StartTime, Filetime* EndTime)
        {
            // SpanOverloader
            return thisApi.ProcessTrace(ref HandleArray.GetPinnableReference(), HandleCount, StartTime, EndTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2635, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTrace(this Windows thisApi, Span<ulong> HandleArray, uint HandleCount, Filetime* StartTime, Span<Filetime> EndTime)
        {
            // SpanOverloader
            return thisApi.ProcessTrace(ref HandleArray.GetPinnableReference(), HandleCount, StartTime, ref EndTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2635, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTrace(this Windows thisApi, Span<ulong> HandleArray, uint HandleCount, Span<Filetime> StartTime, Filetime* EndTime)
        {
            // SpanOverloader
            return thisApi.ProcessTrace(ref HandleArray.GetPinnableReference(), HandleCount, ref StartTime.GetPinnableReference(), EndTime);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2635, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTrace(this Windows thisApi, Span<ulong> HandleArray, uint HandleCount, Span<Filetime> StartTime, Span<Filetime> EndTime)
        {
            // SpanOverloader
            return thisApi.ProcessTrace(ref HandleArray.GetPinnableReference(), HandleCount, ref StartTime.GetPinnableReference(), ref EndTime.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2655, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromBufferStream<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, PfnPetwBufferCompletionCallback BufferCompletionCallback, Span<T0> BufferCompletionContext) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromBufferStream(Options, BufferCompletionCallback, ref BufferCompletionContext.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2655, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromBufferStream(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, PfnPetwBufferCompletionCallback BufferCompletionCallback, void* BufferCompletionContext)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromBufferStream(in Options.GetPinnableReference(), BufferCompletionCallback, BufferCompletionContext);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2655, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromBufferStream<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, PfnPetwBufferCompletionCallback BufferCompletionCallback, Span<T0> BufferCompletionContext) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromBufferStream(in Options.GetPinnableReference(), BufferCompletionCallback, ref BufferCompletionContext.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(LoggerName, Options, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(LoggerName, in Options.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(LoggerName, in Options.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(in LoggerName.GetPinnableReference(), Options, LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(in LoggerName.GetPinnableReference(), Options, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(in LoggerName.GetPinnableReference(), in Options.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(in LoggerName.GetPinnableReference(), in Options.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(LoggerName, Options, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(LoggerName, in Options.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2666, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLogger(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLogger(LoggerName, in Options.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, void* MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, Options, AllocationSize, MemoryPartitionHandle, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, Options, AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, Options, AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, void* MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, MemoryPartitionHandle, LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, void* MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, MemoryPartitionHandle, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, void* MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), Options, AllocationSize, MemoryPartitionHandle, LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, void* MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), Options, AllocationSize, MemoryPartitionHandle, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), Options, AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), Options, AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, void* MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), in Options.GetPinnableReference(), AllocationSize, MemoryPartitionHandle, LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, void* MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), in Options.GetPinnableReference(), AllocationSize, MemoryPartitionHandle, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), in Options.GetPinnableReference(), AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(in LoggerName.GetPinnableReference(), in Options.GetPinnableReference(), AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, void* MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, Options, AllocationSize, MemoryPartitionHandle, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, Options, AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, Options, AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, void* MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, MemoryPartitionHandle, LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, void* MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, MemoryPartitionHandle, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, TraceLogfileHeader* LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2677, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromRealTimeLoggerWithAllocationOptions<T0>(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LoggerName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, nuint AllocationSize, Span<T0> MemoryPartitionHandle, Span<TraceLogfileHeader> LogFileHeader) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.OpenTraceFromRealTimeLoggerWithAllocationOptions(LoggerName, in Options.GetPinnableReference(), AllocationSize, ref MemoryPartitionHandle.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(LogFileName, Options, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(LogFileName, in Options.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] char* LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(LogFileName, in Options.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(in LogFileName.GetPinnableReference(), Options, LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(in LogFileName.GetPinnableReference(), Options, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(in LogFileName.GetPinnableReference(), in Options.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<char> LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(in LogFileName.GetPinnableReference(), in Options.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] EtwOpenTraceOptions* Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(LogFileName, Options, ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, TraceLogfileHeader* LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(LogFileName, in Options.GetPinnableReference(), LogFileHeader);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2690, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceFromFile(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In), UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string LogFileName, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwOpenTraceOptions> Options, Span<TraceLogfileHeader> LogFileHeader)
        {
            // SpanOverloader
            return thisApi.OpenTraceFromFile(LogFileName, in Options.GetPinnableReference(), ref LogFileHeader.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2701, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTraceBufferIncrementReference(this Windows thisApi, ulong TraceHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwBufferHeader> Buffer)
        {
            // SpanOverloader
            return thisApi.ProcessTraceBufferIncrementReference(TraceHandle, in Buffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2711, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTraceBufferDecrementReference(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwBufferHeader> Buffer)
        {
            // SpanOverloader
            return thisApi.ProcessTraceBufferDecrementReference(in Buffer.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2720, Column 1 in evntrace.h")]
        public static unsafe uint ProcessTraceAddBufferToBufferStream(this Windows thisApi, ulong TraceHandle, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<EtwBufferHeader> Buffer, uint BufferSize)
        {
            // SpanOverloader
            return thisApi.ProcessTraceAddBufferToBufferStream(TraceHandle, in Buffer.GetPinnableReference(), BufferSize);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2757, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceProcessingHandle(this Windows thisApi, ulong ProcessingHandle, EtwProcessHandleInfoType InformationClass, void* InBuffer, uint InBufferSize, void* OutBuffer, uint OutBufferSize, Span<uint> ReturnLength)
        {
            // SpanOverloader
            return thisApi.QueryTraceProcessingHandle(ProcessingHandle, InformationClass, InBuffer, InBufferSize, OutBuffer, OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2757, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceProcessingHandle<T0>(this Windows thisApi, ulong ProcessingHandle, EtwProcessHandleInfoType InformationClass, void* InBuffer, uint InBufferSize, Span<T0> OutBuffer, uint OutBufferSize, uint* ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.QueryTraceProcessingHandle(ProcessingHandle, InformationClass, InBuffer, InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2757, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceProcessingHandle<T0>(this Windows thisApi, ulong ProcessingHandle, EtwProcessHandleInfoType InformationClass, void* InBuffer, uint InBufferSize, Span<T0> OutBuffer, uint OutBufferSize, Span<uint> ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.QueryTraceProcessingHandle(ProcessingHandle, InformationClass, InBuffer, InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2757, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceProcessingHandle<T0>(this Windows thisApi, ulong ProcessingHandle, EtwProcessHandleInfoType InformationClass, Span<T0> InBuffer, uint InBufferSize, void* OutBuffer, uint OutBufferSize, uint* ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.QueryTraceProcessingHandle(ProcessingHandle, InformationClass, ref InBuffer.GetPinnableReference(), InBufferSize, OutBuffer, OutBufferSize, ReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2757, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceProcessingHandle<T0>(this Windows thisApi, ulong ProcessingHandle, EtwProcessHandleInfoType InformationClass, Span<T0> InBuffer, uint InBufferSize, void* OutBuffer, uint OutBufferSize, Span<uint> ReturnLength) where T0 : unmanaged
        {
            // SpanOverloader
            return thisApi.QueryTraceProcessingHandle(ProcessingHandle, InformationClass, ref InBuffer.GetPinnableReference(), InBufferSize, OutBuffer, OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2757, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceProcessingHandle<T0, T1>(this Windows thisApi, ulong ProcessingHandle, EtwProcessHandleInfoType InformationClass, Span<T0> InBuffer, uint InBufferSize, Span<T1> OutBuffer, uint OutBufferSize, uint* ReturnLength) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.QueryTraceProcessingHandle(ProcessingHandle, InformationClass, ref InBuffer.GetPinnableReference(), InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ReturnLength);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2757, Column 1 in evntrace.h")]
        public static unsafe uint QueryTraceProcessingHandle<T0, T1>(this Windows thisApi, ulong ProcessingHandle, EtwProcessHandleInfoType InformationClass, Span<T0> InBuffer, uint InBufferSize, Span<T1> OutBuffer, uint OutBufferSize, Span<uint> ReturnLength) where T0 : unmanaged where T1 : unmanaged
        {
            // SpanOverloader
            return thisApi.QueryTraceProcessingHandle(ProcessingHandle, InformationClass, ref InBuffer.GetPinnableReference(), InBufferSize, ref OutBuffer.GetPinnableReference(), OutBufferSize, ref ReturnLength.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2780, Column 1 in evntrace.h")]
        public static unsafe ulong OpenTraceA(this Windows thisApi, Span<EventTraceLogfilea> Logfile)
        {
            // SpanOverloader
            return thisApi.OpenTraceA(ref Logfile.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2787, Column 1 in evntrace.h")]
        public static unsafe uint SetTraceCallback(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> pGuid, PfnPeventCallback EventCallback)
        {
            // SpanOverloader
            return thisApi.SetTraceCallback(in pGuid.GetPinnableReference(), EventCallback);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2795, Column 1 in evntrace.h")]
        public static unsafe uint RemoveTraceCallback(this Windows thisApi, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> pGuid)
        {
            // SpanOverloader
            return thisApi.RemoveTraceCallback(in pGuid.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2812, Column 1 in evntrace.h")]
        public static unsafe uint TraceMessage(this Windows thisApi, ulong LoggerHandle, uint MessageFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> MessageGuid, ushort MessageNumber)
        {
            // SpanOverloader
            return thisApi.TraceMessage(LoggerHandle, MessageFlags, in MessageGuid.GetPinnableReference(), MessageNumber);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2828, Column 1 in evntrace.h")]
        public static unsafe uint TraceMessageVa(this Windows thisApi, ulong LoggerHandle, uint MessageFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] Guid* MessageGuid, ushort MessageNumber, Span<byte> MessageArgList)
        {
            // SpanOverloader
            return thisApi.TraceMessageVa(LoggerHandle, MessageFlags, MessageGuid, MessageNumber, ref MessageArgList.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2828, Column 1 in evntrace.h")]
        public static unsafe uint TraceMessageVa(this Windows thisApi, ulong LoggerHandle, uint MessageFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> MessageGuid, ushort MessageNumber, byte* MessageArgList)
        {
            // SpanOverloader
            return thisApi.TraceMessageVa(LoggerHandle, MessageFlags, in MessageGuid.GetPinnableReference(), MessageNumber, MessageArgList);
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2828, Column 1 in evntrace.h")]
        public static unsafe uint TraceMessageVa(this Windows thisApi, ulong LoggerHandle, uint MessageFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> MessageGuid, ushort MessageNumber, Span<byte> MessageArgList)
        {
            // SpanOverloader
            return thisApi.TraceMessageVa(LoggerHandle, MessageFlags, in MessageGuid.GetPinnableReference(), MessageNumber, ref MessageArgList.GetPinnableReference());
        }

        /// <summary>To be documented.</summary>
        [NativeName("Src", "Line 2828, Column 1 in evntrace.h")]
        public static unsafe uint TraceMessageVa(this Windows thisApi, ulong LoggerHandle, uint MessageFlags, [Flow(Silk.NET.Core.Native.FlowDirection.In)] ReadOnlySpan<Guid> MessageGuid, ushort MessageNumber, [UnmanagedType(Silk.NET.Core.Native.UnmanagedType.LPUTF8Str)] string MessageArgList)
        {
            // SpanOverloader
            return thisApi.TraceMessageVa(LoggerHandle, MessageFlags, in MessageGuid.GetPinnableReference(), MessageNumber, MessageArgList);
        }

    }
}

