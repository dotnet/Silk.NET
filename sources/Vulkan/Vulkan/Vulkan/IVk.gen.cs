// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// Ported from the Vulkan headers and corresponding dependencies.
// Original source is Copyright 2015-2023 The Khronos Group Inc. Licensed under the MIT license.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Silk.NET.Vulkan;

public unsafe partial interface IVk
{
    public partial interface Static
    {
        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_acquire_drm_display"],
            ImpliesSets = ["VK_EXT_direct_mode_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkAcquireDrmDisplayEXT")]
        static abstract Result AcquireDrmDisplayEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("int32_t")] int drmFd,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImage2KHR")]
        static abstract Result AcquireNextImage2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAcquireNextImageInfoKHR *")]
                AcquireNextImageInfoKHR* pAcquireInfo,
            [NativeTypeName("uint32_t *")] uint* pImageIndex
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImage2KHR")]
        static abstract Result AcquireNextImage2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAcquireNextImageInfoKHR *")]
                Ref<AcquireNextImageInfoKHR> pAcquireInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pImageIndex
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImageKHR")]
        static abstract Result AcquireNextImageKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("uint64_t")] ulong timeout,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("VkFence")] FenceHandle fence,
            [NativeTypeName("uint32_t *")] uint* pImageIndex
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImageKHR")]
        static abstract Result AcquireNextImageKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("uint64_t")] ulong timeout,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("VkFence")] FenceHandle fence,
            [NativeTypeName("uint32_t *")] Ref<uint> pImageIndex
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkAcquirePerformanceConfigurationINTEL")]
        static abstract Result AcquirePerformanceConfigurationIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPerformanceConfigurationAcquireInfoINTEL *")]
                PerformanceConfigurationAcquireInfoIntel* pAcquireInfo,
            [NativeTypeName("VkPerformanceConfigurationINTEL *")]
                PerformanceConfigurationIntelHandle* pConfiguration
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAcquirePerformanceConfigurationINTEL")]
        static abstract Result AcquirePerformanceConfigurationIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPerformanceConfigurationAcquireInfoINTEL *")]
                Ref<PerformanceConfigurationAcquireInfoIntel> pAcquireInfo,
            [NativeTypeName("VkPerformanceConfigurationINTEL *")]
                Ref<PerformanceConfigurationIntelHandle> pConfiguration
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_performance_query"],
            ImpliesSets = [
                "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
                "VK_KHR_performance_query+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkAcquireProfilingLockKHR")]
        static abstract Result AcquireProfilingLockKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAcquireProfilingLockInfoKHR *")]
                AcquireProfilingLockInfoKHR* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_performance_query"],
            ImpliesSets = [
                "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
                "VK_KHR_performance_query+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAcquireProfilingLockKHR")]
        static abstract Result AcquireProfilingLockKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAcquireProfilingLockInfoKHR *")]
                Ref<AcquireProfilingLockInfoKHR> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkAllocateCommandBuffers")]
        static abstract Result AllocateCommandBuffers(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCommandBufferAllocateInfo *")]
                CommandBufferAllocateInfo* pAllocateInfo,
            [NativeTypeName("VkCommandBuffer *")] CommandBufferHandle* pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAllocateCommandBuffers")]
        static abstract Result AllocateCommandBuffers(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCommandBufferAllocateInfo *")]
                Ref<CommandBufferAllocateInfo> pAllocateInfo,
            [NativeTypeName("VkCommandBuffer *")] Ref<CommandBufferHandle> pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkAllocateDescriptorSets")]
        static abstract Result AllocateDescriptorSets(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetAllocateInfo *")]
                DescriptorSetAllocateInfo* pAllocateInfo,
            [NativeTypeName("VkDescriptorSet *")] DescriptorSetHandle* pDescriptorSets
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAllocateDescriptorSets")]
        static abstract Result AllocateDescriptorSets(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetAllocateInfo *")]
                Ref<DescriptorSetAllocateInfo> pAllocateInfo,
            [NativeTypeName("VkDescriptorSet *")] Ref<DescriptorSetHandle> pDescriptorSets
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkAllocateMemory")]
        static abstract Result AllocateMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryAllocateInfo *")] MemoryAllocateInfo* pAllocateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDeviceMemory *")] DeviceMemoryHandle* pMemory
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAllocateMemory")]
        static abstract Result AllocateMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryAllocateInfo *")] Ref<MemoryAllocateInfo> pAllocateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDeviceMemory *")] Ref<DeviceMemoryHandle> pMemory
        );

        [SupportedApiProfile("vulkan", ["VK_AMD_anti_lag"])]
        [NativeFunction("vulkan", EntryPoint = "vkAntiLagUpdateAMD")]
        static abstract void AntiLagUpdateAMD(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAntiLagDataAMD *")] AntiLagDataAMD* pData
        );

        [SupportedApiProfile("vulkan", ["VK_AMD_anti_lag"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkAntiLagUpdateAMD")]
        static abstract void AntiLagUpdateAMD(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAntiLagDataAMD *")] Ref<AntiLagDataAMD> pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBeginCommandBuffer")]
        static abstract Result BeginCommandBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCommandBufferBeginInfo *")] CommandBufferBeginInfo* pBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBeginCommandBuffer")]
        static abstract Result BeginCommandBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCommandBufferBeginInfo *")]
                Ref<CommandBufferBeginInfo> pBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBindAccelerationStructureMemoryNV")]
        static abstract Result BindAccelerationStructureMemoryNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindAccelerationStructureMemoryInfoNV *")]
                BindAccelerationStructureMemoryInfoNV* pBindInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBindAccelerationStructureMemoryNV")]
        static abstract Result BindAccelerationStructureMemoryNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindAccelerationStructureMemoryInfoNV *")]
                Ref<BindAccelerationStructureMemoryInfoNV> pBindInfos
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory")]
        static abstract Result BindBufferMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("VkDeviceSize")] ulong memoryOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2")]
        static abstract Result BindBufferMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindBufferMemoryInfo *")] BindBufferMemoryInfo* pBindInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2")]
        static abstract Result BindBufferMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindBufferMemoryInfo *")] Ref<BindBufferMemoryInfo> pBindInfos
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
        [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2KHR")]
        static abstract Result BindBufferMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindBufferMemoryInfo *")] BindBufferMemoryInfo* pBindInfos
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2KHR")]
        static abstract Result BindBufferMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindBufferMemoryInfo *")] Ref<BindBufferMemoryInfo> pBindInfos
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory")]
        static abstract Result BindImageMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("VkDeviceSize")] ulong memoryOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2")]
        static abstract Result BindImageMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindImageMemoryInfo *")] BindImageMemoryInfo* pBindInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2")]
        static abstract Result BindImageMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindImageMemoryInfo *")] Ref<BindImageMemoryInfo> pBindInfos
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
        [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2KHR")]
        static abstract Result BindImageMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindImageMemoryInfo *")] BindImageMemoryInfo* pBindInfos
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2KHR")]
        static abstract Result BindImageMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindImageMemoryInfo *")] Ref<BindImageMemoryInfo> pBindInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBindOpticalFlowSessionImageNV")]
        static abstract Result BindOpticalFlowSessionImageNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
            OpticalFlowSessionBindingPointNV bindingPoint,
            [NativeTypeName("VkImageView")] ImageViewHandle view,
            ImageLayout layout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBindVideoSessionMemoryKHR")]
        static abstract Result BindVideoSessionMemoryKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
            [NativeTypeName("uint32_t")] uint bindSessionMemoryInfoCount,
            [NativeTypeName("const VkBindVideoSessionMemoryInfoKHR *")]
                BindVideoSessionMemoryInfoKHR* pBindSessionMemoryInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBindVideoSessionMemoryKHR")]
        static abstract Result BindVideoSessionMemoryKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
            [NativeTypeName("uint32_t")] uint bindSessionMemoryInfoCount,
            [NativeTypeName("const VkBindVideoSessionMemoryInfoKHR *")]
                Ref<BindVideoSessionMemoryInfoKHR> pBindSessionMemoryInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBuildAccelerationStructuresKHR")]
        static abstract Result BuildAccelerationStructuresKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                AccelerationStructureBuildGeometryInfoKHR* pInfos,
            [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
                AccelerationStructureBuildRangeInfoKHR** ppBuildRangeInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBuildAccelerationStructuresKHR")]
        static abstract Result BuildAccelerationStructuresKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                Ref<AccelerationStructureBuildGeometryInfoKHR> pInfos,
            [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
                Ref2D<AccelerationStructureBuildRangeInfoKHR> ppBuildRangeInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkBuildMicromapsEXT")]
        static abstract Result BuildMicromapsEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT* pInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkBuildMicromapsEXT")]
        static abstract Result BuildMicromapsEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkMicromapBuildInfoEXT *")] Ref<MicromapBuildInfoEXT> pInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_conditional_rendering"],
            ImpliesSets = [
                "VK_EXT_conditional_rendering+VK_KHR_get_physical_device_properties2",
                "VK_EXT_conditional_rendering+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginConditionalRenderingEXT")]
        static abstract void CmdBeginConditionalRenderingEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkConditionalRenderingBeginInfoEXT *")]
                ConditionalRenderingBeginInfoEXT* pConditionalRenderingBegin
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_conditional_rendering"],
            ImpliesSets = [
                "VK_EXT_conditional_rendering+VK_KHR_get_physical_device_properties2",
                "VK_EXT_conditional_rendering+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginConditionalRenderingEXT")]
        static abstract void CmdBeginConditionalRenderingEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkConditionalRenderingBeginInfoEXT *")]
                Ref<ConditionalRenderingBeginInfoEXT> pConditionalRenderingBegin
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginDebugUtilsLabelEXT")]
        static abstract void CmdBeginDebugUtilsLabelEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginDebugUtilsLabelEXT")]
        static abstract void CmdBeginDebugUtilsLabelEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_shading"],
            ImpliesSets = [
                "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginPerTileExecutionQCOM")]
        static abstract void CmdBeginPerTileExecutionQCOM(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerTileBeginInfoQCOM *")]
                PerTileBeginInfoQCOM* pPerTileBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_shading"],
            ImpliesSets = [
                "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginPerTileExecutionQCOM")]
        static abstract void CmdBeginPerTileExecutionQCOM(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerTileBeginInfoQCOM *")]
                Ref<PerTileBeginInfoQCOM> pPerTileBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginQuery")]
        static abstract void CmdBeginQuery(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint query,
            [NativeTypeName("VkQueryControlFlags")] uint flags
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginQueryIndexedEXT")]
        static abstract void CmdBeginQueryIndexedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint query,
            [NativeTypeName("VkQueryControlFlags")] uint flags,
            [NativeTypeName("uint32_t")] uint index
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRendering")]
        static abstract void CmdBeginRendering(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInfo *")] RenderingInfo* pRenderingInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRendering")]
        static abstract void CmdBeginRendering(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInfo *")] Ref<RenderingInfo> pRenderingInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_dynamic_rendering"],
            ImpliesSets = [
                "VK_KHR_depth_stencil_resolve+VK_KHR_get_physical_device_properties2",
                "VK_KHR_depth_stencil_resolve+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderingKHR")]
        static abstract void CmdBeginRenderingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInfo *")] RenderingInfo* pRenderingInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_dynamic_rendering"],
            ImpliesSets = [
                "VK_KHR_depth_stencil_resolve+VK_KHR_get_physical_device_properties2",
                "VK_KHR_depth_stencil_resolve+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderingKHR")]
        static abstract void CmdBeginRenderingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInfo *")] Ref<RenderingInfo> pRenderingInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass")]
        static abstract void CmdBeginRenderPass(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderPassBeginInfo *")] RenderPassBeginInfo* pRenderPassBegin,
            SubpassContents contents
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass")]
        static abstract void CmdBeginRenderPass(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderPassBeginInfo *")]
                Ref<RenderPassBeginInfo> pRenderPassBegin,
            SubpassContents contents
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2")]
        static abstract void CmdBeginRenderPass2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderPassBeginInfo *")] RenderPassBeginInfo* pRenderPassBegin,
            [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2")]
        static abstract void CmdBeginRenderPass2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderPassBeginInfo *")]
                Ref<RenderPassBeginInfo> pRenderPassBegin,
            [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2KHR")]
        static abstract void CmdBeginRenderPass2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderPassBeginInfo *")] RenderPassBeginInfo* pRenderPassBegin,
            [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2KHR")]
        static abstract void CmdBeginRenderPass2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderPassBeginInfo *")]
                Ref<RenderPassBeginInfo> pRenderPassBegin,
            [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginTransformFeedbackEXT")]
        static abstract void CmdBeginTransformFeedbackEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstCounterBuffer,
            [NativeTypeName("uint32_t")] uint counterBufferCount,
            [NativeTypeName("const VkBuffer *")] BufferHandle* pCounterBuffers,
            [NativeTypeName("const VkDeviceSize *")] ulong* pCounterBufferOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginTransformFeedbackEXT")]
        static abstract void CmdBeginTransformFeedbackEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstCounterBuffer,
            [NativeTypeName("uint32_t")] uint counterBufferCount,
            [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pCounterBuffers,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pCounterBufferOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginVideoCodingKHR")]
        static abstract void CmdBeginVideoCodingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoBeginCodingInfoKHR *")]
                VideoBeginCodingInfoKHR* pBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBeginVideoCodingKHR")]
        static abstract void CmdBeginVideoCodingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoBeginCodingInfoKHR *")]
                Ref<VideoBeginCodingInfoKHR> pBeginInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT")]
        static abstract void CmdBindDescriptorBufferEmbeddedSamplers2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBindDescriptorBufferEmbeddedSamplersInfoEXT *")]
                BindDescriptorBufferEmbeddedSamplersInfoEXT* pBindDescriptorBufferEmbeddedSamplersInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT")]
        static abstract void CmdBindDescriptorBufferEmbeddedSamplers2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBindDescriptorBufferEmbeddedSamplersInfoEXT *")]
                Ref<BindDescriptorBufferEmbeddedSamplersInfoEXT> pBindDescriptorBufferEmbeddedSamplersInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBufferEmbeddedSamplersEXT")]
        static abstract void CmdBindDescriptorBufferEmbeddedSamplersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBuffersEXT")]
        static abstract void CmdBindDescriptorBuffersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint bufferCount,
            [NativeTypeName("const VkDescriptorBufferBindingInfoEXT *")]
                DescriptorBufferBindingInfoEXT* pBindingInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBuffersEXT")]
        static abstract void CmdBindDescriptorBuffersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint bufferCount,
            [NativeTypeName("const VkDescriptorBufferBindingInfoEXT *")]
                Ref<DescriptorBufferBindingInfoEXT> pBindingInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBuffersEXT")]
        static abstract void CmdBindDescriptorBuffersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDescriptorBufferBindingInfoEXT *")]
                DescriptorBufferBindingInfoEXT pBindingInfos
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets")]
        static abstract void CmdBindDescriptorSets(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint firstSet,
            [NativeTypeName("uint32_t")] uint descriptorSetCount,
            [NativeTypeName("const VkDescriptorSet *")] DescriptorSetHandle* pDescriptorSets,
            [NativeTypeName("uint32_t")] uint dynamicOffsetCount,
            [NativeTypeName("const uint32_t *")] uint* pDynamicOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets")]
        static abstract void CmdBindDescriptorSets(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint firstSet,
            [NativeTypeName("uint32_t")] uint descriptorSetCount,
            [NativeTypeName("const VkDescriptorSet *")] Ref<DescriptorSetHandle> pDescriptorSets,
            [NativeTypeName("uint32_t")] uint dynamicOffsetCount,
            [NativeTypeName("const uint32_t *")] Ref<uint> pDynamicOffsets
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2")]
        static abstract void CmdBindDescriptorSets2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBindDescriptorSetsInfo *")]
                BindDescriptorSetsInfo* pBindDescriptorSetsInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2")]
        static abstract void CmdBindDescriptorSets2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBindDescriptorSetsInfo *")]
                Ref<BindDescriptorSetsInfo> pBindDescriptorSetsInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2KHR")]
        static abstract void CmdBindDescriptorSets2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBindDescriptorSetsInfo *")]
                BindDescriptorSetsInfo* pBindDescriptorSetsInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2KHR")]
        static abstract void CmdBindDescriptorSets2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBindDescriptorSetsInfo *")]
                Ref<BindDescriptorSetsInfo> pBindDescriptorSetsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindIndexBuffer")]
        static abstract void CmdBindIndexBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            IndexType indexType
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindIndexBuffer2")]
        static abstract void CmdBindIndexBuffer2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkDeviceSize")] ulong size,
            IndexType indexType
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance5"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindIndexBuffer2KHR")]
        static abstract void CmdBindIndexBuffer2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkDeviceSize")] ulong size,
            IndexType indexType
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_HUAWEI_invocation_mask"],
            ImpliesSets = [
                "VK_KHR_ray_tracing_pipeline+VK_KHR_synchronization2",
                "VK_KHR_ray_tracing_pipeline+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindInvocationMaskHUAWEI")]
        static abstract void CmdBindInvocationMaskHuawei(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImageView")] ImageViewHandle imageView,
            ImageLayout imageLayout
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindPipeline")]
        static abstract void CmdBindPipeline(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindPipelineShaderGroupNV")]
        static abstract void CmdBindPipelineShaderGroupNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint groupIndex
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindShadersEXT")]
        static abstract void CmdBindShadersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint stageCount,
            [NativeTypeName("const VkShaderStageFlagBits *")] ShaderStageFlags* pStages,
            [NativeTypeName("const VkShaderEXT *")] ShaderEXTHandle* pShaders
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindShadersEXT")]
        static abstract void CmdBindShadersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint stageCount,
            [NativeTypeName("const VkShaderStageFlagBits *")] Ref<ShaderStageFlags> pStages,
            [NativeTypeName("const VkShaderEXT *")] Ref<ShaderEXTHandle> pShaders
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
                "VK_NV_shading_rate_image+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindShadingRateImageNV")]
        static abstract void CmdBindShadingRateImageNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImageView")] ImageViewHandle imageView,
            ImageLayout imageLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_memory_heap"],
            ImpliesSets = [
                "VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindTileMemoryQCOM")]
        static abstract void CmdBindTileMemoryQCOM(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkTileMemoryBindInfoQCOM *")]
                TileMemoryBindInfoQCOM* pTileMemoryBindInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_memory_heap"],
            ImpliesSets = [
                "VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindTileMemoryQCOM")]
        static abstract void CmdBindTileMemoryQCOM(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkTileMemoryBindInfoQCOM *")]
                Ref<TileMemoryBindInfoQCOM> pTileMemoryBindInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindTransformFeedbackBuffersEXT")]
        static abstract void CmdBindTransformFeedbackBuffersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
            [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets,
            [NativeTypeName("const VkDeviceSize *")] ulong* pSizes
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindTransformFeedbackBuffersEXT")]
        static abstract void CmdBindTransformFeedbackBuffersEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pSizes
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers")]
        static abstract void CmdBindVertexBuffers(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
            [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers")]
        static abstract void CmdBindVertexBuffers(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2")]
        static abstract void CmdBindVertexBuffers2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
            [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets,
            [NativeTypeName("const VkDeviceSize *")] ulong* pSizes,
            [NativeTypeName("const VkDeviceSize *")] ulong* pStrides
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2")]
        static abstract void CmdBindVertexBuffers2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pSizes,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pStrides
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2EXT")]
        static abstract void CmdBindVertexBuffers2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
            [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets,
            [NativeTypeName("const VkDeviceSize *")] ulong* pSizes,
            [NativeTypeName("const VkDeviceSize *")] ulong* pStrides
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2EXT")]
        static abstract void CmdBindVertexBuffers2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstBinding,
            [NativeTypeName("uint32_t")] uint bindingCount,
            [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pSizes,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pStrides
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage")]
        static abstract void CmdBlitImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkImageBlit *")] ImageBlit* pRegions,
            Filter filter
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage")]
        static abstract void CmdBlitImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkImageBlit *")] Ref<ImageBlit> pRegions,
            Filter filter
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage")]
        static abstract void CmdBlitImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("const VkImageBlit *")] ImageBlit pRegions,
            Filter filter
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2")]
        static abstract void CmdBlitImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBlitImageInfo2 *")] BlitImageInfo2* pBlitImageInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2")]
        static abstract void CmdBlitImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBlitImageInfo2 *")] Ref<BlitImageInfo2> pBlitImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2KHR")]
        static abstract void CmdBlitImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBlitImageInfo2 *")] BlitImageInfo2* pBlitImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2KHR")]
        static abstract void CmdBlitImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBlitImageInfo2 *")] Ref<BlitImageInfo2> pBlitImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructureNV")]
        static abstract void CmdBuildAccelerationStructureNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkAccelerationStructureInfoNV *")]
                AccelerationStructureInfoNV* pInfo,
            [NativeTypeName("VkBuffer")] BufferHandle instanceData,
            [NativeTypeName("VkDeviceSize")] ulong instanceOffset,
            [NativeTypeName("VkBool32")] uint update,
            [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle dst,
            [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle src,
            [NativeTypeName("VkBuffer")] BufferHandle scratch,
            [NativeTypeName("VkDeviceSize")] ulong scratchOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructureNV")]
        static abstract void CmdBuildAccelerationStructureNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkAccelerationStructureInfoNV *")]
                Ref<AccelerationStructureInfoNV> pInfo,
            [NativeTypeName("VkBuffer")] BufferHandle instanceData,
            [NativeTypeName("VkDeviceSize")] ulong instanceOffset,
            [NativeTypeName("VkBool32")] uint update,
            [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle dst,
            [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle src,
            [NativeTypeName("VkBuffer")] BufferHandle scratch,
            [NativeTypeName("VkDeviceSize")] ulong scratchOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresIndirectKHR")]
        static abstract void CmdBuildAccelerationStructuresIndirectKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                AccelerationStructureBuildGeometryInfoKHR* pInfos,
            [NativeTypeName("const VkDeviceAddress *")] ulong* pIndirectDeviceAddresses,
            [NativeTypeName("const uint32_t *")] uint* pIndirectStrides,
            [NativeTypeName("const uint32_t *const *")] uint** ppMaxPrimitiveCounts
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresIndirectKHR")]
        static abstract void CmdBuildAccelerationStructuresIndirectKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                Ref<AccelerationStructureBuildGeometryInfoKHR> pInfos,
            [NativeTypeName("const VkDeviceAddress *")] Ref<ulong> pIndirectDeviceAddresses,
            [NativeTypeName("const uint32_t *")] Ref<uint> pIndirectStrides,
            [NativeTypeName("const uint32_t *const *")] Ref2D<uint> ppMaxPrimitiveCounts
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresKHR")]
        static abstract void CmdBuildAccelerationStructuresKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                AccelerationStructureBuildGeometryInfoKHR* pInfos,
            [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
                AccelerationStructureBuildRangeInfoKHR** ppBuildRangeInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresKHR")]
        static abstract void CmdBuildAccelerationStructuresKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                Ref<AccelerationStructureBuildGeometryInfoKHR> pInfos,
            [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
                Ref2D<AccelerationStructureBuildRangeInfoKHR> ppBuildRangeInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cluster_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildClusterAccelerationStructureIndirectNV")]
        static abstract void CmdBuildClusterAccelerationStructureIndirectNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkClusterAccelerationStructureCommandsInfoNV *")]
                ClusterAccelerationStructureCommandsInfoNV* pCommandInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cluster_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildClusterAccelerationStructureIndirectNV")]
        static abstract void CmdBuildClusterAccelerationStructureIndirectNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkClusterAccelerationStructureCommandsInfoNV *")]
                Ref<ClusterAccelerationStructureCommandsInfoNV> pCommandInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildMicromapsEXT")]
        static abstract void CmdBuildMicromapsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT* pInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildMicromapsEXT")]
        static abstract void CmdBuildMicromapsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkMicromapBuildInfoEXT *")] Ref<MicromapBuildInfoEXT> pInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildMicromapsEXT")]
        static abstract void CmdBuildMicromapsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT pInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_partitioned_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildPartitionedAccelerationStructuresNV")]
        static abstract void CmdBuildPartitionedAccelerationStructuresNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBuildPartitionedAccelerationStructureInfoNV *")]
                BuildPartitionedAccelerationStructureInfoNV* pBuildInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_partitioned_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdBuildPartitionedAccelerationStructuresNV")]
        static abstract void CmdBuildPartitionedAccelerationStructuresNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBuildPartitionedAccelerationStructureInfoNV *")]
                Ref<BuildPartitionedAccelerationStructureInfoNV> pBuildInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearAttachments")]
        static abstract void CmdClearAttachments(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkClearAttachment *")] ClearAttachment* pAttachments,
            [NativeTypeName("uint32_t")] uint rectCount,
            [NativeTypeName("const VkClearRect *")] ClearRect* pRects
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearAttachments")]
        static abstract void CmdClearAttachments(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkClearAttachment *")] Ref<ClearAttachment> pAttachments,
            [NativeTypeName("uint32_t")] uint rectCount,
            [NativeTypeName("const VkClearRect *")] Ref<ClearRect> pRects
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearColorImage")]
        static abstract void CmdClearColorImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle image,
            ImageLayout imageLayout,
            [NativeTypeName("const VkClearColorValue *")] ClearColorValue* pColor,
            [NativeTypeName("uint32_t")] uint rangeCount,
            [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange* pRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearColorImage")]
        static abstract void CmdClearColorImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle image,
            ImageLayout imageLayout,
            [NativeTypeName("const VkClearColorValue *")] Ref<ClearColorValue> pColor,
            [NativeTypeName("uint32_t")] uint rangeCount,
            [NativeTypeName("const VkImageSubresourceRange *")] Ref<ImageSubresourceRange> pRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearColorImage")]
        static abstract void CmdClearColorImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle image,
            ImageLayout imageLayout,
            [NativeTypeName("const VkClearColorValue *")] Ref<ClearColorValue> pColor,
            [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange pRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearDepthStencilImage")]
        static abstract void CmdClearDepthStencilImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle image,
            ImageLayout imageLayout,
            [NativeTypeName("const VkClearDepthStencilValue *")]
                ClearDepthStencilValue* pDepthStencil,
            [NativeTypeName("uint32_t")] uint rangeCount,
            [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange* pRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearDepthStencilImage")]
        static abstract void CmdClearDepthStencilImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle image,
            ImageLayout imageLayout,
            [NativeTypeName("const VkClearDepthStencilValue *")]
                Ref<ClearDepthStencilValue> pDepthStencil,
            [NativeTypeName("uint32_t")] uint rangeCount,
            [NativeTypeName("const VkImageSubresourceRange *")] Ref<ImageSubresourceRange> pRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdClearDepthStencilImage")]
        static abstract void CmdClearDepthStencilImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle image,
            ImageLayout imageLayout,
            [NativeTypeName("const VkClearDepthStencilValue *")]
                Ref<ClearDepthStencilValue> pDepthStencil,
            [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange pRanges
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdControlVideoCodingKHR")]
        static abstract void CmdControlVideoCodingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoCodingControlInfoKHR *")]
                VideoCodingControlInfoKHR* pCodingControlInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdControlVideoCodingKHR")]
        static abstract void CmdControlVideoCodingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoCodingControlInfoKHR *")]
                Ref<VideoCodingControlInfoKHR> pCodingControlInfo
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdConvertCooperativeVectorMatrixNV")]
        static abstract void CmdConvertCooperativeVectorMatrixNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
                ConvertCooperativeVectorMatrixInfoNV* pInfos
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdConvertCooperativeVectorMatrixNV")]
        static abstract void CmdConvertCooperativeVectorMatrixNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint infoCount,
            [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
                Ref<ConvertCooperativeVectorMatrixInfoNV> pInfos
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdConvertCooperativeVectorMatrixNV")]
        static abstract void CmdConvertCooperativeVectorMatrixNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
                ConvertCooperativeVectorMatrixInfoNV pInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureKHR")]
        static abstract void CmdCopyAccelerationStructureKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
                CopyAccelerationStructureInfoKHR* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureKHR")]
        static abstract void CmdCopyAccelerationStructureKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
                Ref<CopyAccelerationStructureInfoKHR> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureNV")]
        static abstract void CmdCopyAccelerationStructureNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle dst,
            [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle src,
            CopyAccelerationStructureModeKHR mode
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureToMemoryKHR")]
        static abstract void CmdCopyAccelerationStructureToMemoryKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
                CopyAccelerationStructureToMemoryInfoKHR* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureToMemoryKHR")]
        static abstract void CmdCopyAccelerationStructureToMemoryKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
                Ref<CopyAccelerationStructureToMemoryInfoKHR> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer")]
        static abstract void CmdCopyBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkBufferCopy *")] BufferCopy* pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer")]
        static abstract void CmdCopyBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkBufferCopy *")] Ref<BufferCopy> pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer")]
        static abstract void CmdCopyBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("const VkBufferCopy *")] BufferCopy pRegions
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2")]
        static abstract void CmdCopyBuffer2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferInfo2 *")] CopyBufferInfo2* pCopyBufferInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2")]
        static abstract void CmdCopyBuffer2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferInfo2 *")] Ref<CopyBufferInfo2> pCopyBufferInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2KHR")]
        static abstract void CmdCopyBuffer2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferInfo2 *")] CopyBufferInfo2* pCopyBufferInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2KHR")]
        static abstract void CmdCopyBuffer2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferInfo2 *")] Ref<CopyBufferInfo2> pCopyBufferInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage")]
        static abstract void CmdCopyBufferToImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy* pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage")]
        static abstract void CmdCopyBufferToImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkBufferImageCopy *")] Ref<BufferImageCopy> pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage")]
        static abstract void CmdCopyBufferToImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy pRegions
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2")]
        static abstract void CmdCopyBufferToImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
                CopyBufferToImageInfo2* pCopyBufferToImageInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2")]
        static abstract void CmdCopyBufferToImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
                Ref<CopyBufferToImageInfo2> pCopyBufferToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2KHR")]
        static abstract void CmdCopyBufferToImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
                CopyBufferToImageInfo2* pCopyBufferToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2KHR")]
        static abstract void CmdCopyBufferToImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
                Ref<CopyBufferToImageInfo2> pCopyBufferToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage")]
        static abstract void CmdCopyImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkImageCopy *")] ImageCopy* pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage")]
        static abstract void CmdCopyImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkImageCopy *")] Ref<ImageCopy> pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage")]
        static abstract void CmdCopyImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("const VkImageCopy *")] ImageCopy pRegions
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2")]
        static abstract void CmdCopyImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageInfo2 *")] CopyImageInfo2* pCopyImageInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2")]
        static abstract void CmdCopyImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageInfo2 *")] Ref<CopyImageInfo2> pCopyImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2KHR")]
        static abstract void CmdCopyImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageInfo2 *")] CopyImageInfo2* pCopyImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2KHR")]
        static abstract void CmdCopyImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageInfo2 *")] Ref<CopyImageInfo2> pCopyImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer")]
        static abstract void CmdCopyImageToBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy* pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer")]
        static abstract void CmdCopyImageToBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkBufferImageCopy *")] Ref<BufferImageCopy> pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer")]
        static abstract void CmdCopyImageToBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy pRegions
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2")]
        static abstract void CmdCopyImageToBuffer2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
                CopyImageToBufferInfo2* pCopyImageToBufferInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2")]
        static abstract void CmdCopyImageToBuffer2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
                Ref<CopyImageToBufferInfo2> pCopyImageToBufferInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2KHR")]
        static abstract void CmdCopyImageToBuffer2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
                CopyImageToBufferInfo2* pCopyImageToBufferInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2KHR")]
        static abstract void CmdCopyImageToBuffer2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
                Ref<CopyImageToBufferInfo2> pCopyImageToBufferInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_copy_memory_indirect"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryIndirectNV")]
        static abstract void CmdCopyMemoryIndirectNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
            [NativeTypeName("uint32_t")] uint copyCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToAccelerationStructureKHR")]
        static abstract void CmdCopyMemoryToAccelerationStructureKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
                CopyMemoryToAccelerationStructureInfoKHR* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToAccelerationStructureKHR")]
        static abstract void CmdCopyMemoryToAccelerationStructureKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
                Ref<CopyMemoryToAccelerationStructureInfoKHR> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_copy_memory_indirect"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToImageIndirectNV")]
        static abstract void CmdCopyMemoryToImageIndirectNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
            [NativeTypeName("uint32_t")] uint copyCount,
            [NativeTypeName("uint32_t")] uint stride,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("const VkImageSubresourceLayers *")]
                ImageSubresourceLayers* pImageSubresources
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_copy_memory_indirect"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToImageIndirectNV")]
        static abstract void CmdCopyMemoryToImageIndirectNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
            [NativeTypeName("uint32_t")] uint copyCount,
            [NativeTypeName("uint32_t")] uint stride,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("const VkImageSubresourceLayers *")]
                Ref<ImageSubresourceLayers> pImageSubresources
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_copy_memory_indirect"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToImageIndirectNV")]
        static abstract void CmdCopyMemoryToImageIndirectNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
            [NativeTypeName("uint32_t")] uint stride,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("const VkImageSubresourceLayers *")]
                ImageSubresourceLayers pImageSubresources
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToMicromapEXT")]
        static abstract void CmdCopyMemoryToMicromapEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")]
                CopyMemoryToMicromapInfoEXT* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToMicromapEXT")]
        static abstract void CmdCopyMemoryToMicromapEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")]
                Ref<CopyMemoryToMicromapInfoEXT> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapEXT")]
        static abstract void CmdCopyMicromapEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMicromapInfoEXT *")] CopyMicromapInfoEXT* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapEXT")]
        static abstract void CmdCopyMicromapEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMicromapInfoEXT *")] Ref<CopyMicromapInfoEXT> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapToMemoryEXT")]
        static abstract void CmdCopyMicromapToMemoryEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")]
                CopyMicromapToMemoryInfoEXT* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapToMemoryEXT")]
        static abstract void CmdCopyMicromapToMemoryEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")]
                Ref<CopyMicromapToMemoryInfoEXT> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCopyQueryPoolResults")]
        static abstract void CmdCopyQueryPoolResults(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery,
            [NativeTypeName("uint32_t")] uint queryCount,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("VkDeviceSize")] ulong dstOffset,
            [NativeTypeName("VkDeviceSize")] ulong stride,
            [NativeTypeName("VkQueryResultFlags")] uint flags
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCudaLaunchKernelNV")]
        static abstract void CmdCudaLaunchKernelNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCudaLaunchInfoNV *")] CudaLaunchInfoNV* pLaunchInfo
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCudaLaunchKernelNV")]
        static abstract void CmdCudaLaunchKernelNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCudaLaunchInfoNV *")] Ref<CudaLaunchInfoNV> pLaunchInfo
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCuLaunchKernelNVX")]
        static abstract void CmdCuLaunchKernelNVX(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCuLaunchInfoNVX *")] CuLaunchInfoNVX* pLaunchInfo
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdCuLaunchKernelNVX")]
        static abstract void CmdCuLaunchKernelNVX(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCuLaunchInfoNVX *")] Ref<CuLaunchInfoNVX> pLaunchInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerBeginEXT")]
        static abstract void CmdDebugMarkerBeginEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")]
                DebugMarkerMarkerInfoEXT* pMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerBeginEXT")]
        static abstract void CmdDebugMarkerBeginEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")]
                Ref<DebugMarkerMarkerInfoEXT> pMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerEndEXT")]
        static abstract void CmdDebugMarkerEndEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerInsertEXT")]
        static abstract void CmdDebugMarkerInsertEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")]
                DebugMarkerMarkerInfoEXT* pMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerInsertEXT")]
        static abstract void CmdDebugMarkerInsertEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")]
                Ref<DebugMarkerMarkerInfoEXT> pMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_decode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDecodeVideoKHR")]
        static abstract void CmdDecodeVideoKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoDecodeInfoKHR *")] VideoDecodeInfoKHR* pDecodeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_decode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDecodeVideoKHR")]
        static abstract void CmdDecodeVideoKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoDecodeInfoKHR *")] Ref<VideoDecodeInfoKHR> pDecodeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_memory_decompression"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryIndirectCountNV")]
        static abstract void CmdDecompressMemoryIndirectCountNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDeviceAddress")] ulong indirectCommandsAddress,
            [NativeTypeName("VkDeviceAddress")] ulong indirectCommandsCountAddress,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_memory_decompression"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryNV")]
        static abstract void CmdDecompressMemoryNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint decompressRegionCount,
            [NativeTypeName("const VkDecompressMemoryRegionNV *")]
                DecompressMemoryRegionNV* pDecompressMemoryRegions
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_memory_decompression"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryNV")]
        static abstract void CmdDecompressMemoryNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint decompressRegionCount,
            [NativeTypeName("const VkDecompressMemoryRegionNV *")]
                Ref<DecompressMemoryRegionNV> pDecompressMemoryRegions
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_memory_decompression"],
            ImpliesSets = [
                "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_KHR_buffer_device_address+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryNV")]
        static abstract void CmdDecompressMemoryNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDecompressMemoryRegionNV *")]
                DecompressMemoryRegionNV pDecompressMemoryRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDispatch")]
        static abstract void CmdDispatch(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint groupCountX,
            [NativeTypeName("uint32_t")] uint groupCountY,
            [NativeTypeName("uint32_t")] uint groupCountZ
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchBase")]
        static abstract void CmdDispatchBase(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint baseGroupX,
            [NativeTypeName("uint32_t")] uint baseGroupY,
            [NativeTypeName("uint32_t")] uint baseGroupZ,
            [NativeTypeName("uint32_t")] uint groupCountX,
            [NativeTypeName("uint32_t")] uint groupCountY,
            [NativeTypeName("uint32_t")] uint groupCountZ
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_device_group"],
            ImpliesSets = ["VK_KHR_device_group_creation"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchBaseKHR")]
        static abstract void CmdDispatchBaseKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint baseGroupX,
            [NativeTypeName("uint32_t")] uint baseGroupY,
            [NativeTypeName("uint32_t")] uint baseGroupZ,
            [NativeTypeName("uint32_t")] uint groupCountX,
            [NativeTypeName("uint32_t")] uint groupCountY,
            [NativeTypeName("uint32_t")] uint groupCountZ
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchIndirect")]
        static abstract void CmdDispatchIndirect(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_shading"],
            ImpliesSets = [
                "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchTileQCOM")]
        static abstract void CmdDispatchTileQCOM(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDraw")]
        static abstract void CmdDraw(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint vertexCount,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstVertex,
            [NativeTypeName("uint32_t")] uint firstInstance
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_HUAWEI_cluster_culling_shader"],
            ImpliesSets = [
                "VK_HUAWEI_cluster_culling_shader+VK_KHR_get_physical_device_properties2",
                "VK_HUAWEI_cluster_culling_shader+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawClusterHUAWEI")]
        static abstract void CmdDrawClusterHuawei(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint groupCountX,
            [NativeTypeName("uint32_t")] uint groupCountY,
            [NativeTypeName("uint32_t")] uint groupCountZ
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_HUAWEI_cluster_culling_shader"],
            ImpliesSets = [
                "VK_HUAWEI_cluster_culling_shader+VK_KHR_get_physical_device_properties2",
                "VK_HUAWEI_cluster_culling_shader+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawClusterIndirectHUAWEI")]
        static abstract void CmdDrawClusterIndirectHuawei(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexed")]
        static abstract void CmdDrawIndexed(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint indexCount,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstIndex,
            [NativeTypeName("int32_t")] int vertexOffset,
            [NativeTypeName("uint32_t")] uint firstInstance
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirect")]
        static abstract void CmdDrawIndexedIndirect(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirectCount")]
        static abstract void CmdDrawIndexedIndirectCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile("vulkan", ["VK_AMD_draw_indirect_count"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirectCountAMD")]
        static abstract void CmdDrawIndexedIndirectCountAMD(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_draw_indirect_count"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirectCountKHR")]
        static abstract void CmdDrawIndexedIndirectCountKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirect")]
        static abstract void CmdDrawIndirect(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectByteCountEXT")]
        static abstract void CmdDrawIndirectByteCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstInstance,
            [NativeTypeName("VkBuffer")] BufferHandle counterBuffer,
            [NativeTypeName("VkDeviceSize")] ulong counterBufferOffset,
            [NativeTypeName("uint32_t")] uint counterOffset,
            [NativeTypeName("uint32_t")] uint vertexStride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectCount")]
        static abstract void CmdDrawIndirectCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile("vulkan", ["VK_AMD_draw_indirect_count"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectCountAMD")]
        static abstract void CmdDrawIndirectCountAMD(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_draw_indirect_count"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectCountKHR")]
        static abstract void CmdDrawIndirectCountKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_mesh_shader"],
            ImpliesSets = [
                "VK_EXT_mesh_shader+VK_KHR_spirv_1_4",
                "VK_EXT_mesh_shader+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksEXT")]
        static abstract void CmdDrawMeshTasksEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint groupCountX,
            [NativeTypeName("uint32_t")] uint groupCountY,
            [NativeTypeName("uint32_t")] uint groupCountZ
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_mesh_shader+VK_KHR_draw_indirect_count", "VK_EXT_mesh_shader+VK_VERSION_1_2"],
            ImpliesSets = [
                "VK_EXT_mesh_shader+VK_KHR_spirv_1_4",
                "VK_EXT_mesh_shader+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectCountEXT")]
        static abstract void CmdDrawMeshTasksIndirectCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_mesh_shader+VK_KHR_draw_indirect_count", "VK_NV_mesh_shader+VK_VERSION_1_2"],
            ImpliesSets = [
                "VK_NV_mesh_shader+VK_KHR_get_physical_device_properties2",
                "VK_NV_mesh_shader+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectCountNV")]
        static abstract void CmdDrawMeshTasksIndirectCountNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
            [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
            [NativeTypeName("uint32_t")] uint maxDrawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_mesh_shader"],
            ImpliesSets = [
                "VK_EXT_mesh_shader+VK_KHR_spirv_1_4",
                "VK_EXT_mesh_shader+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectEXT")]
        static abstract void CmdDrawMeshTasksIndirectEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_mesh_shader"],
            ImpliesSets = [
                "VK_NV_mesh_shader+VK_KHR_get_physical_device_properties2",
                "VK_NV_mesh_shader+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectNV")]
        static abstract void CmdDrawMeshTasksIndirectNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_mesh_shader"],
            ImpliesSets = [
                "VK_NV_mesh_shader+VK_KHR_get_physical_device_properties2",
                "VK_NV_mesh_shader+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksNV")]
        static abstract void CmdDrawMeshTasksNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint taskCount,
            [NativeTypeName("uint32_t")] uint firstTask
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_multi_draw"],
            ImpliesSets = [
                "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
                "VK_EXT_multi_draw+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiEXT")]
        static abstract void CmdDrawMultiEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("const VkMultiDrawInfoEXT *")] MultiDrawInfoEXT* pVertexInfo,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstInstance,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_multi_draw"],
            ImpliesSets = [
                "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
                "VK_EXT_multi_draw+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiEXT")]
        static abstract void CmdDrawMultiEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("const VkMultiDrawInfoEXT *")] Ref<MultiDrawInfoEXT> pVertexInfo,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstInstance,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_multi_draw"],
            ImpliesSets = [
                "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
                "VK_EXT_multi_draw+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiEXT")]
        static abstract void CmdDrawMultiEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkMultiDrawInfoEXT *")] MultiDrawInfoEXT pVertexInfo,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstInstance,
            [NativeTypeName("uint32_t")] uint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_multi_draw"],
            ImpliesSets = [
                "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
                "VK_EXT_multi_draw+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiIndexedEXT")]
        static abstract void CmdDrawMultiIndexedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("const VkMultiDrawIndexedInfoEXT *")]
                MultiDrawIndexedInfoEXT* pIndexInfo,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstInstance,
            [NativeTypeName("uint32_t")] uint stride,
            [NativeTypeName("const int32_t *")] int* pVertexOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_multi_draw"],
            ImpliesSets = [
                "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
                "VK_EXT_multi_draw+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiIndexedEXT")]
        static abstract void CmdDrawMultiIndexedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint drawCount,
            [NativeTypeName("const VkMultiDrawIndexedInfoEXT *")]
                Ref<MultiDrawIndexedInfoEXT> pIndexInfo,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstInstance,
            [NativeTypeName("uint32_t")] uint stride,
            [NativeTypeName("const int32_t *")] Ref<int> pVertexOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_multi_draw"],
            ImpliesSets = [
                "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
                "VK_EXT_multi_draw+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiIndexedEXT")]
        static abstract void CmdDrawMultiIndexedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkMultiDrawIndexedInfoEXT *")]
                MultiDrawIndexedInfoEXT pIndexInfo,
            [NativeTypeName("uint32_t")] uint instanceCount,
            [NativeTypeName("uint32_t")] uint firstInstance,
            [NativeTypeName("uint32_t")] uint stride,
            [NativeTypeName("const int32_t *")] Ref<int> pVertexOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_encode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEncodeVideoKHR")]
        static abstract void CmdEncodeVideoKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoEncodeInfoKHR *")] VideoEncodeInfoKHR* pEncodeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_encode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEncodeVideoKHR")]
        static abstract void CmdEncodeVideoKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoEncodeInfoKHR *")] Ref<VideoEncodeInfoKHR> pEncodeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_conditional_rendering"],
            ImpliesSets = [
                "VK_EXT_conditional_rendering+VK_KHR_get_physical_device_properties2",
                "VK_EXT_conditional_rendering+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndConditionalRenderingEXT")]
        static abstract void CmdEndConditionalRenderingEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndDebugUtilsLabelEXT")]
        static abstract void CmdEndDebugUtilsLabelEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_shading"],
            ImpliesSets = [
                "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndPerTileExecutionQCOM")]
        static abstract void CmdEndPerTileExecutionQCOM(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerTileEndInfoQCOM *")] PerTileEndInfoQCOM* pPerTileEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_shading"],
            ImpliesSets = [
                "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndPerTileExecutionQCOM")]
        static abstract void CmdEndPerTileExecutionQCOM(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerTileEndInfoQCOM *")] Ref<PerTileEndInfoQCOM> pPerTileEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndQuery")]
        static abstract void CmdEndQuery(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint query
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndQueryIndexedEXT")]
        static abstract void CmdEndQueryIndexedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint query,
            [NativeTypeName("uint32_t")] uint index
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRendering")]
        static abstract void CmdEndRendering(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_fragment_density_map_offset"],
            ImpliesSets = [
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_VERSION_1_3",
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_VERSION_1_3",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_VERSION_1_3",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRendering2EXT")]
        static abstract void CmdEndRendering2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingEndInfoEXT *")] RenderingEndInfoEXT* pRenderingEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_fragment_density_map_offset"],
            ImpliesSets = [
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_VERSION_1_3",
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_VERSION_1_3",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_VERSION_1_3",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
                "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRendering2EXT")]
        static abstract void CmdEndRendering2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingEndInfoEXT *")]
                Ref<RenderingEndInfoEXT> pRenderingEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_dynamic_rendering"],
            ImpliesSets = [
                "VK_KHR_depth_stencil_resolve+VK_KHR_get_physical_device_properties2",
                "VK_KHR_depth_stencil_resolve+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderingKHR")]
        static abstract void CmdEndRenderingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass")]
        static abstract void CmdEndRenderPass(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2")]
        static abstract void CmdEndRenderPass2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2")]
        static abstract void CmdEndRenderPass2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2KHR")]
        static abstract void CmdEndRenderPass2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2KHR")]
        static abstract void CmdEndRenderPass2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndTransformFeedbackEXT")]
        static abstract void CmdEndTransformFeedbackEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstCounterBuffer,
            [NativeTypeName("uint32_t")] uint counterBufferCount,
            [NativeTypeName("const VkBuffer *")] BufferHandle* pCounterBuffers,
            [NativeTypeName("const VkDeviceSize *")] ulong* pCounterBufferOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
                "VK_EXT_transform_feedback+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndTransformFeedbackEXT")]
        static abstract void CmdEndTransformFeedbackEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstCounterBuffer,
            [NativeTypeName("uint32_t")] uint counterBufferCount,
            [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pCounterBuffers,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pCounterBufferOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndVideoCodingKHR")]
        static abstract void CmdEndVideoCodingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoEndCodingInfoKHR *")]
                VideoEndCodingInfoKHR* pEndCodingInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdEndVideoCodingKHR")]
        static abstract void CmdEndVideoCodingKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkVideoEndCodingInfoKHR *")]
                Ref<VideoEndCodingInfoKHR> pEndCodingInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteCommands")]
        static abstract void CmdExecuteCommand(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteCommands")]
        static abstract void CmdExecuteCommands(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint commandBufferCount,
            [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle* pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteCommands")]
        static abstract void CmdExecuteCommands(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint commandBufferCount,
            [NativeTypeName("const VkCommandBuffer *")] Ref<CommandBufferHandle> pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsEXT")]
        static abstract void CmdExecuteGeneratedCommandsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint isPreprocessed,
            [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
                GeneratedCommandsInfoEXT* pGeneratedCommandsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsEXT")]
        static abstract void CmdExecuteGeneratedCommandsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint isPreprocessed,
            [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
                Ref<GeneratedCommandsInfoEXT> pGeneratedCommandsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsNV")]
        static abstract void CmdExecuteGeneratedCommandsNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint isPreprocessed,
            [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
                GeneratedCommandsInfoNV* pGeneratedCommandsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsNV")]
        static abstract void CmdExecuteGeneratedCommandsNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint isPreprocessed,
            [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
                Ref<GeneratedCommandsInfoNV> pGeneratedCommandsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdFillBuffer")]
        static abstract void CmdFillBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("VkDeviceSize")] ulong dstOffset,
            [NativeTypeName("VkDeviceSize")] ulong size,
            [NativeTypeName("uint32_t")] uint data
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdInsertDebugUtilsLabelEXT")]
        static abstract void CmdInsertDebugUtilsLabelEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdInsertDebugUtilsLabelEXT")]
        static abstract void CmdInsertDebugUtilsLabelEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass")]
        static abstract void CmdNextSubpass(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            SubpassContents contents
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2")]
        static abstract void CmdNextSubpass2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo,
            [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2")]
        static abstract void CmdNextSubpass2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo,
            [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2KHR")]
        static abstract void CmdNextSubpass2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo,
            [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2KHR")]
        static abstract void CmdNextSubpass2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo,
            [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdOpticalFlowExecuteNV")]
        static abstract void CmdOpticalFlowExecuteNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
            [NativeTypeName("const VkOpticalFlowExecuteInfoNV *")]
                OpticalFlowExecuteInfoNV* pExecuteInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdOpticalFlowExecuteNV")]
        static abstract void CmdOpticalFlowExecuteNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
            [NativeTypeName("const VkOpticalFlowExecuteInfoNV *")]
                Ref<OpticalFlowExecuteInfoNV> pExecuteInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier")]
        static abstract void CmdPipelineBarrier(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
            [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
            [NativeTypeName("VkDependencyFlags")] uint dependencyFlags,
            [NativeTypeName("uint32_t")] uint memoryBarrierCount,
            [NativeTypeName("const VkMemoryBarrier *")] MemoryBarrier* pMemoryBarriers,
            [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
            [NativeTypeName("const VkBufferMemoryBarrier *")]
                BufferMemoryBarrier* pBufferMemoryBarriers,
            [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
            [NativeTypeName("const VkImageMemoryBarrier *")]
                ImageMemoryBarrier* pImageMemoryBarriers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier")]
        static abstract void CmdPipelineBarrier(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
            [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
            [NativeTypeName("VkDependencyFlags")] uint dependencyFlags,
            [NativeTypeName("uint32_t")] uint memoryBarrierCount,
            [NativeTypeName("const VkMemoryBarrier *")] Ref<MemoryBarrier> pMemoryBarriers,
            [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
            [NativeTypeName("const VkBufferMemoryBarrier *")]
                Ref<BufferMemoryBarrier> pBufferMemoryBarriers,
            [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
            [NativeTypeName("const VkImageMemoryBarrier *")]
                Ref<ImageMemoryBarrier> pImageMemoryBarriers
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2")]
        static abstract void CmdPipelineBarrier2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2")]
        static abstract void CmdPipelineBarrier2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2KHR")]
        static abstract void CmdPipelineBarrier2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2KHR")]
        static abstract void CmdPipelineBarrier2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsEXT")]
        static abstract void CmdPreprocessGeneratedCommandsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
                GeneratedCommandsInfoEXT* pGeneratedCommandsInfo,
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle stateCommandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsEXT")]
        static abstract void CmdPreprocessGeneratedCommandsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
                Ref<GeneratedCommandsInfoEXT> pGeneratedCommandsInfo,
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle stateCommandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsNV")]
        static abstract void CmdPreprocessGeneratedCommandsNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
                GeneratedCommandsInfoNV* pGeneratedCommandsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsNV")]
        static abstract void CmdPreprocessGeneratedCommandsNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
                Ref<GeneratedCommandsInfoNV> pGeneratedCommandsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants")]
        static abstract void CmdPushConstants(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("VkShaderStageFlags")] uint stageFlags,
            [NativeTypeName("uint32_t")] uint offset,
            [NativeTypeName("uint32_t")] uint size,
            [NativeTypeName("const void *")] void* pValues
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants")]
        static abstract void CmdPushConstants(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("VkShaderStageFlags")] uint stageFlags,
            [NativeTypeName("uint32_t")] uint offset,
            [NativeTypeName("uint32_t")] uint size,
            [NativeTypeName("const void *")] Ref pValues
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2")]
        static abstract void CmdPushConstants2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushConstantsInfo *")] PushConstantsInfo* pPushConstantsInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2")]
        static abstract void CmdPushConstants2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushConstantsInfo *")]
                Ref<PushConstantsInfo> pPushConstantsInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2KHR")]
        static abstract void CmdPushConstants2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushConstantsInfo *")] PushConstantsInfo* pPushConstantsInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2KHR")]
        static abstract void CmdPushConstants2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushConstantsInfo *")]
                Ref<PushConstantsInfo> pPushConstantsInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet")]
        static abstract void CmdPushDescriptorSet(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("uint32_t")] uint descriptorWriteCount,
            [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet* pDescriptorWrites
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet")]
        static abstract void CmdPushDescriptorSet(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("uint32_t")] uint descriptorWriteCount,
            [NativeTypeName("const VkWriteDescriptorSet *")]
                Ref<WriteDescriptorSet> pDescriptorWrites
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet")]
        static abstract void CmdPushDescriptorSet(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet pDescriptorWrites
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2")]
        static abstract void CmdPushDescriptorSet2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetInfo *")]
                PushDescriptorSetInfo* pPushDescriptorSetInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2")]
        static abstract void CmdPushDescriptorSet2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetInfo *")]
                Ref<PushDescriptorSetInfo> pPushDescriptorSetInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2KHR")]
        static abstract void CmdPushDescriptorSet2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetInfo *")]
                PushDescriptorSetInfo* pPushDescriptorSetInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2KHR")]
        static abstract void CmdPushDescriptorSet2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetInfo *")]
                Ref<PushDescriptorSetInfo> pPushDescriptorSetInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_push_descriptor"],
            ImpliesSets = [
                "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
                "VK_KHR_push_descriptor+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetKHR")]
        static abstract void CmdPushDescriptorSetKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("uint32_t")] uint descriptorWriteCount,
            [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet* pDescriptorWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_push_descriptor"],
            ImpliesSets = [
                "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
                "VK_KHR_push_descriptor+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetKHR")]
        static abstract void CmdPushDescriptorSetKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("uint32_t")] uint descriptorWriteCount,
            [NativeTypeName("const VkWriteDescriptorSet *")]
                Ref<WriteDescriptorSet> pDescriptorWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_push_descriptor"],
            ImpliesSets = [
                "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
                "VK_KHR_push_descriptor+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetKHR")]
        static abstract void CmdPushDescriptorSetKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet pDescriptorWrites
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate")]
        static abstract void CmdPushDescriptorSetWithTemplate(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("const void *")] void* pData
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate")]
        static abstract void CmdPushDescriptorSetWithTemplate(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("const void *")] Ref pData
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2")]
        static abstract void CmdPushDescriptorSetWithTemplate2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
                PushDescriptorSetWithTemplateInfo* pPushDescriptorSetWithTemplateInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2")]
        static abstract void CmdPushDescriptorSetWithTemplate2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
                Ref<PushDescriptorSetWithTemplateInfo> pPushDescriptorSetWithTemplateInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2KHR")]
        static abstract void CmdPushDescriptorSetWithTemplate2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
                PushDescriptorSetWithTemplateInfo* pPushDescriptorSetWithTemplateInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2KHR")]
        static abstract void CmdPushDescriptorSetWithTemplate2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
                Ref<PushDescriptorSetWithTemplateInfo> pPushDescriptorSetWithTemplateInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_KHR_push_descriptor+VK_KHR_descriptor_update_template",
                "VK_KHR_push_descriptor+VK_VERSION_1_1",
            ],
            ImpliesSets = [
                "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
                "VK_KHR_push_descriptor+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplateKHR")]
        static abstract void CmdPushDescriptorSetWithTemplateKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("const void *")] void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_KHR_push_descriptor+VK_KHR_descriptor_update_template",
                "VK_KHR_push_descriptor+VK_VERSION_1_1",
            ],
            ImpliesSets = [
                "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
                "VK_KHR_push_descriptor+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplateKHR")]
        static abstract void CmdPushDescriptorSetWithTemplateKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint set,
            [NativeTypeName("const void *")] Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResetEvent")]
        static abstract void CmdResetEvent(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("VkPipelineStageFlags")] uint stageMask
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResetEvent2")]
        static abstract void CmdResetEvent2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("VkPipelineStageFlags2")] ulong stageMask
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResetEvent2KHR")]
        static abstract void CmdResetEvent2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("VkPipelineStageFlags2")] ulong stageMask
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResetQueryPool")]
        static abstract void CmdResetQueryPool(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery,
            [NativeTypeName("uint32_t")] uint queryCount
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage")]
        static abstract void CmdResolveImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkImageResolve *")] ImageResolve* pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage")]
        static abstract void CmdResolveImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("uint32_t")] uint regionCount,
            [NativeTypeName("const VkImageResolve *")] Ref<ImageResolve> pRegions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage")]
        static abstract void CmdResolveImage(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImage")] ImageHandle srcImage,
            ImageLayout srcImageLayout,
            [NativeTypeName("VkImage")] ImageHandle dstImage,
            ImageLayout dstImageLayout,
            [NativeTypeName("const VkImageResolve *")] ImageResolve pRegions
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2")]
        static abstract void CmdResolveImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkResolveImageInfo2 *")] ResolveImageInfo2* pResolveImageInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2")]
        static abstract void CmdResolveImage2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkResolveImageInfo2 *")] Ref<ResolveImageInfo2> pResolveImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2KHR")]
        static abstract void CmdResolveImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkResolveImageInfo2 *")] ResolveImageInfo2* pResolveImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_copy_commands2"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2KHR")]
        static abstract void CmdResolveImage2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkResolveImageInfo2 *")] Ref<ResolveImageInfo2> pResolveImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetAlphaToCoverageEnableEXT")]
        static abstract void CmdSetAlphaToCoverageEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint alphaToCoverageEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetAlphaToOneEnableEXT")]
        static abstract void CmdSetAlphaToOneEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint alphaToOneEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_attachment_feedback_loop_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_attachment_feedback_loop_layout+VK_KHR_get_physical_device_properties2",
                "VK_EXT_attachment_feedback_loop_layout+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetAttachmentFeedbackLoopEnableEXT")]
        static abstract void CmdSetAttachmentFeedbackLoopEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkImageAspectFlags")] uint aspectMask
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetBlendConstants")]
        static abstract void CmdSetBlendConstants(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const float[4]")] float* blendConstants
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetBlendConstants")]
        static abstract void CmdSetBlendConstants(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const float[4]")] Ref<float> blendConstants
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_diagnostic_checkpoints"],
            ImpliesSets = [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCheckpointNV")]
        static abstract void CmdSetCheckpointNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const void *")] void* pCheckpointMarker
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_diagnostic_checkpoints"],
            ImpliesSets = [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCheckpointNV")]
        static abstract void CmdSetCheckpointNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const void *")] Ref pCheckpointMarker
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
                "VK_NV_shading_rate_image+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoarseSampleOrderNV")]
        static abstract void CmdSetCoarseSampleOrderNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            CoarseSampleOrderTypeNV sampleOrderType,
            [NativeTypeName("uint32_t")] uint customSampleOrderCount,
            [NativeTypeName("const VkCoarseSampleOrderCustomNV *")]
                CoarseSampleOrderCustomNV* pCustomSampleOrders
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
                "VK_NV_shading_rate_image+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoarseSampleOrderNV")]
        static abstract void CmdSetCoarseSampleOrderNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            CoarseSampleOrderTypeNV sampleOrderType,
            [NativeTypeName("uint32_t")] uint customSampleOrderCount,
            [NativeTypeName("const VkCoarseSampleOrderCustomNV *")]
                Ref<CoarseSampleOrderCustomNV> pCustomSampleOrders
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
                "VK_NV_shading_rate_image+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoarseSampleOrderNV")]
        static abstract void CmdSetCoarseSampleOrderNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            CoarseSampleOrderTypeNV sampleOrderType,
            [NativeTypeName("const VkCoarseSampleOrderCustomNV *")]
                CoarseSampleOrderCustomNV pCustomSampleOrders
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_blend_operation_advanced", "VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendAdvancedEXT")]
        static abstract void CmdSetColorBlendAdvancedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkColorBlendAdvancedEXT *")]
                ColorBlendAdvancedEXT* pColorBlendAdvanced
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_blend_operation_advanced", "VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendAdvancedEXT")]
        static abstract void CmdSetColorBlendAdvancedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkColorBlendAdvancedEXT *")]
                Ref<ColorBlendAdvancedEXT> pColorBlendAdvanced
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_blend_operation_advanced", "VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendAdvancedEXT")]
        static abstract void CmdSetColorBlendAdvancedEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("const VkColorBlendAdvancedEXT *")]
                ColorBlendAdvancedEXT pColorBlendAdvanced
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEnableEXT")]
        static abstract void CmdSetColorBlendEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkBool32 *")] uint* pColorBlendEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEnableEXT")]
        static abstract void CmdSetColorBlendEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkBool32 *")] Ref<uint> pColorBlendEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEnableEXT")]
        static abstract void CmdSetColorBlendEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("const VkBool32 *")] uint pColorBlendEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEquationEXT")]
        static abstract void CmdSetColorBlendEquationEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkColorBlendEquationEXT *")]
                ColorBlendEquationEXT* pColorBlendEquations
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEquationEXT")]
        static abstract void CmdSetColorBlendEquationEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkColorBlendEquationEXT *")]
                Ref<ColorBlendEquationEXT> pColorBlendEquations
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEquationEXT")]
        static abstract void CmdSetColorBlendEquationEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("const VkColorBlendEquationEXT *")]
                ColorBlendEquationEXT pColorBlendEquations
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_color_write_enable"],
            ImpliesSets = [
                "VK_EXT_color_write_enable+VK_KHR_get_physical_device_properties2",
                "VK_EXT_color_write_enable+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteEnableEXT")]
        static abstract void CmdSetColorWriteEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkBool32 *")] uint* pColorWriteEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_color_write_enable"],
            ImpliesSets = [
                "VK_EXT_color_write_enable+VK_KHR_get_physical_device_properties2",
                "VK_EXT_color_write_enable+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteEnableEXT")]
        static abstract void CmdSetColorWriteEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkBool32 *")] Ref<uint> pColorWriteEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_color_write_enable"],
            ImpliesSets = [
                "VK_EXT_color_write_enable+VK_KHR_get_physical_device_properties2",
                "VK_EXT_color_write_enable+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteEnableEXT")]
        static abstract void CmdSetColorWriteEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkBool32 *")] uint pColorWriteEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteMaskEXT")]
        static abstract void CmdSetColorWriteMaskEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkColorComponentFlags *")] uint* pColorWriteMasks
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteMaskEXT")]
        static abstract void CmdSetColorWriteMaskEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("uint32_t")] uint attachmentCount,
            [NativeTypeName("const VkColorComponentFlags *")] Ref<uint> pColorWriteMasks
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteMaskEXT")]
        static abstract void CmdSetColorWriteMaskEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstAttachment,
            [NativeTypeName("const VkColorComponentFlags *")] uint pColorWriteMasks
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_conservative_rasterization", "VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetConservativeRasterizationModeEXT")]
        static abstract void CmdSetConservativeRasterizationModeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            ConservativeRasterizationModeEXT conservativeRasterizationMode
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationModeNV")]
        static abstract void CmdSetCoverageModulationModeNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            CoverageModulationModeNV coverageModulationMode
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableEnableNV")]
        static abstract void CmdSetCoverageModulationTableEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint coverageModulationTableEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableNV")]
        static abstract void CmdSetCoverageModulationTableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint coverageModulationTableCount,
            [NativeTypeName("const float *")] float* pCoverageModulationTable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableNV")]
        static abstract void CmdSetCoverageModulationTableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint coverageModulationTableCount,
            [NativeTypeName("const float *")] Ref<float> pCoverageModulationTable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableNV")]
        static abstract void CmdSetCoverageModulationTableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const float *")] float pCoverageModulationTable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_coverage_reduction_mode"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageReductionModeNV")]
        static abstract void CmdSetCoverageReductionModeNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            CoverageReductionModeNV coverageReductionMode
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_fragment_coverage_to_color"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageToColorEnableNV")]
        static abstract void CmdSetCoverageToColorEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint coverageToColorEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_fragment_coverage_to_color"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageToColorLocationNV")]
        static abstract void CmdSetCoverageToColorLocationNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint coverageToColorLocation
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCullMode")]
        static abstract void CmdSetCullMode(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkCullModeFlags")] uint cullMode
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetCullModeEXT")]
        static abstract void CmdSetCullModeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkCullModeFlags")] uint cullMode
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBias")]
        static abstract void CmdSetDepthBias(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            float depthBiasConstantFactor,
            float depthBiasClamp,
            float depthBiasSlopeFactor
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_depth_bias_control"],
            ImpliesSets = [
                "VK_EXT_depth_bias_control+VK_KHR_get_physical_device_properties2",
                "VK_EXT_depth_bias_control+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBias2EXT")]
        static abstract void CmdSetDepthBias2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDepthBiasInfoEXT *")] DepthBiasInfoEXT* pDepthBiasInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_depth_bias_control"],
            ImpliesSets = [
                "VK_EXT_depth_bias_control+VK_KHR_get_physical_device_properties2",
                "VK_EXT_depth_bias_control+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBias2EXT")]
        static abstract void CmdSetDepthBias2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkDepthBiasInfoEXT *")] Ref<DepthBiasInfoEXT> pDepthBiasInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBiasEnable")]
        static abstract void CmdSetDepthBiasEnable(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthBiasEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state2"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBiasEnableEXT")]
        static abstract void CmdSetDepthBiasEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthBiasEnable
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBounds")]
        static abstract void CmdSetDepthBounds(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            float minDepthBounds,
            float maxDepthBounds
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBoundsTestEnable")]
        static abstract void CmdSetDepthBoundsTestEnable(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthBoundsTestEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBoundsTestEnableEXT")]
        static abstract void CmdSetDepthBoundsTestEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthBoundsTestEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClampEnableEXT")]
        static abstract void CmdSetDepthClampEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthClampEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_depth_clamp_control", "VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClampRangeEXT")]
        static abstract void CmdSetDepthClampRangeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            DepthClampModeEXT depthClampMode,
            [NativeTypeName("const VkDepthClampRangeEXT *")] DepthClampRangeEXT* pDepthClampRange
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_depth_clamp_control", "VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClampRangeEXT")]
        static abstract void CmdSetDepthClampRangeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            DepthClampModeEXT depthClampMode,
            [NativeTypeName("const VkDepthClampRangeEXT *")]
                Ref<DepthClampRangeEXT> pDepthClampRange
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_depth_clip_enable", "VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClipEnableEXT")]
        static abstract void CmdSetDepthClipEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthClipEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_depth_clip_control", "VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClipNegativeOneToOneEXT")]
        static abstract void CmdSetDepthClipNegativeOneToOneEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint negativeOneToOne
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthCompareOp")]
        static abstract void CmdSetDepthCompareOp(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            CompareOp depthCompareOp
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthCompareOpEXT")]
        static abstract void CmdSetDepthCompareOpEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            CompareOp depthCompareOp
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthTestEnable")]
        static abstract void CmdSetDepthTestEnable(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthTestEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthTestEnableEXT")]
        static abstract void CmdSetDepthTestEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthTestEnable
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthWriteEnable")]
        static abstract void CmdSetDepthWriteEnable(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthWriteEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthWriteEnableEXT")]
        static abstract void CmdSetDepthWriteEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint depthWriteEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsets2EXT")]
        static abstract void CmdSetDescriptorBufferOffsets2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSetDescriptorBufferOffsetsInfoEXT *")]
                SetDescriptorBufferOffsetsInfoEXT* pSetDescriptorBufferOffsetsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
            ImpliesSets = ["VK_VERSION_1_1"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsets2EXT")]
        static abstract void CmdSetDescriptorBufferOffsets2EXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSetDescriptorBufferOffsetsInfoEXT *")]
                Ref<SetDescriptorBufferOffsetsInfoEXT> pSetDescriptorBufferOffsetsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsetsEXT")]
        static abstract void CmdSetDescriptorBufferOffsetsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint firstSet,
            [NativeTypeName("uint32_t")] uint setCount,
            [NativeTypeName("const uint32_t *")] uint* pBufferIndices,
            [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsetsEXT")]
        static abstract void CmdSetDescriptorBufferOffsetsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint firstSet,
            [NativeTypeName("uint32_t")] uint setCount,
            [NativeTypeName("const uint32_t *")] Ref<uint> pBufferIndices,
            [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDeviceMask")]
        static abstract void CmdSetDeviceMask(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint deviceMask
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_device_group"],
            ImpliesSets = ["VK_KHR_device_group_creation"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDeviceMaskKHR")]
        static abstract void CmdSetDeviceMaskKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint deviceMask
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_discard_rectangles"],
            ImpliesSets = [
                "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
                "VK_EXT_discard_rectangles+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEnableEXT")]
        static abstract void CmdSetDiscardRectangleEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint discardRectangleEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_discard_rectangles"],
            ImpliesSets = [
                "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
                "VK_EXT_discard_rectangles+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEXT")]
        static abstract void CmdSetDiscardRectangleEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstDiscardRectangle,
            [NativeTypeName("uint32_t")] uint discardRectangleCount,
            [NativeTypeName("const VkRect2D *")] Rect2D* pDiscardRectangles
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_discard_rectangles"],
            ImpliesSets = [
                "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
                "VK_EXT_discard_rectangles+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEXT")]
        static abstract void CmdSetDiscardRectangleEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstDiscardRectangle,
            [NativeTypeName("uint32_t")] uint discardRectangleCount,
            [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pDiscardRectangles
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_discard_rectangles"],
            ImpliesSets = [
                "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
                "VK_EXT_discard_rectangles+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEXT")]
        static abstract void CmdSetDiscardRectangleEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstDiscardRectangle,
            [NativeTypeName("const VkRect2D *")] Rect2D pDiscardRectangles
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_discard_rectangles"],
            ImpliesSets = [
                "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
                "VK_EXT_discard_rectangles+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleModeEXT")]
        static abstract void CmdSetDiscardRectangleModeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            DiscardRectangleModeEXT discardRectangleMode
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent")]
        static abstract void CmdSetEvent(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("VkPipelineStageFlags")] uint stageMask
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2")]
        static abstract void CmdSetEvent2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2")]
        static abstract void CmdSetEvent2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2KHR")]
        static abstract void CmdSetEvent2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2KHR")]
        static abstract void CmdSetEvent2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_scissor_exclusive"],
            ImpliesSets = [
                "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
                "VK_NV_scissor_exclusive+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorEnableNV")]
        static abstract void CmdSetExclusiveScissorEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
            [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
            [NativeTypeName("const VkBool32 *")] uint* pExclusiveScissorEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_scissor_exclusive"],
            ImpliesSets = [
                "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
                "VK_NV_scissor_exclusive+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorEnableNV")]
        static abstract void CmdSetExclusiveScissorEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
            [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
            [NativeTypeName("const VkBool32 *")] Ref<uint> pExclusiveScissorEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_scissor_exclusive"],
            ImpliesSets = [
                "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
                "VK_NV_scissor_exclusive+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorEnableNV")]
        static abstract void CmdSetExclusiveScissorEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
            [NativeTypeName("const VkBool32 *")] uint pExclusiveScissorEnables
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_scissor_exclusive"],
            ImpliesSets = [
                "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
                "VK_NV_scissor_exclusive+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorNV")]
        static abstract void CmdSetExclusiveScissorNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
            [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
            [NativeTypeName("const VkRect2D *")] Rect2D* pExclusiveScissors
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_scissor_exclusive"],
            ImpliesSets = [
                "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
                "VK_NV_scissor_exclusive+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorNV")]
        static abstract void CmdSetExclusiveScissorNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
            [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
            [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pExclusiveScissors
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_scissor_exclusive"],
            ImpliesSets = [
                "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
                "VK_NV_scissor_exclusive+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorNV")]
        static abstract void CmdSetExclusiveScissorNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
            [NativeTypeName("const VkRect2D *")] Rect2D pExclusiveScissors
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_conservative_rasterization", "VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetExtraPrimitiveOverestimationSizeEXT")]
        static abstract void CmdSetExtraPrimitiveOverestimationSizeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            float extraPrimitiveOverestimationSize
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_fragment_shading_rate_enums"],
            ImpliesSets = ["VK_KHR_fragment_shading_rate"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateEnumNV")]
        static abstract void CmdSetFragmentShadingRateEnumNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            FragmentShadingRateNV shadingRate,
            [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
                FragmentShadingRateCombinerOpKHR* combinerOps
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_fragment_shading_rate_enums"],
            ImpliesSets = ["VK_KHR_fragment_shading_rate"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateEnumNV")]
        static abstract void CmdSetFragmentShadingRateEnumNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            FragmentShadingRateNV shadingRate,
            [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
                Ref<FragmentShadingRateCombinerOpKHR> combinerOps
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_fragment_shading_rate"],
            ImpliesSets = [
                "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_create_renderpass2+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateKHR")]
        static abstract void CmdSetFragmentShadingRateKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkExtent2D *")] Extent2D* pFragmentSize,
            [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
                FragmentShadingRateCombinerOpKHR* combinerOps
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_fragment_shading_rate"],
            ImpliesSets = [
                "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_create_renderpass2+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateKHR")]
        static abstract void CmdSetFragmentShadingRateKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkExtent2D *")] Ref<Extent2D> pFragmentSize,
            [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
                Ref<FragmentShadingRateCombinerOpKHR> combinerOps
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetFrontFace")]
        static abstract void CmdSetFrontFace(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            FrontFace frontFace
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetFrontFaceEXT")]
        static abstract void CmdSetFrontFaceEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            FrontFace frontFace
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_EXT_line_rasterization"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineRasterizationModeEXT")]
        static abstract void CmdSetLineRasterizationModeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkLineRasterizationModeEXT")]
                LineRasterizationMode lineRasterizationMode
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStipple")]
        static abstract void CmdSetLineStipple(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint lineStippleFactor,
            [NativeTypeName("uint16_t")] ushort lineStipplePattern
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_EXT_line_rasterization"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStippleEnableEXT")]
        static abstract void CmdSetLineStippleEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint stippledLineEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_line_rasterization"],
            ImpliesSets = [
                "VK_EXT_line_rasterization+VK_KHR_get_physical_device_properties2",
                "VK_EXT_line_rasterization+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStippleEXT")]
        static abstract void CmdSetLineStippleEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint lineStippleFactor,
            [NativeTypeName("uint16_t")] ushort lineStipplePattern
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_line_rasterization"],
            ImpliesSets = [
                "VK_KHR_line_rasterization+VK_KHR_get_physical_device_properties2",
                "VK_KHR_line_rasterization+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStippleKHR")]
        static abstract void CmdSetLineStippleKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint lineStippleFactor,
            [NativeTypeName("uint16_t")] ushort lineStipplePattern
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineWidth")]
        static abstract void CmdSetLineWidth(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            float lineWidth
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLogicOpEnableEXT")]
        static abstract void CmdSetLogicOpEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint logicOpEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state2"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetLogicOpEXT")]
        static abstract void CmdSetLogicOpEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            LogicOp logicOp
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state2"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPatchControlPointsEXT")]
        static abstract void CmdSetPatchControlPointsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint patchControlPoints
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceMarkerINTEL")]
        static abstract Result CmdSetPerformanceMarkerIntel(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerformanceMarkerInfoINTEL *")]
                PerformanceMarkerInfoIntel* pMarkerInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceMarkerINTEL")]
        static abstract Result CmdSetPerformanceMarkerIntel(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerformanceMarkerInfoINTEL *")]
                Ref<PerformanceMarkerInfoIntel> pMarkerInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceOverrideINTEL")]
        static abstract Result CmdSetPerformanceOverrideIntel(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerformanceOverrideInfoINTEL *")]
                PerformanceOverrideInfoIntel* pOverrideInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceOverrideINTEL")]
        static abstract Result CmdSetPerformanceOverrideIntel(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerformanceOverrideInfoINTEL *")]
                Ref<PerformanceOverrideInfoIntel> pOverrideInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceStreamMarkerINTEL")]
        static abstract Result CmdSetPerformanceStreamMarkerIntel(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerformanceStreamMarkerInfoINTEL *")]
                PerformanceStreamMarkerInfoIntel* pMarkerInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceStreamMarkerINTEL")]
        static abstract Result CmdSetPerformanceStreamMarkerIntel(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkPerformanceStreamMarkerInfoINTEL *")]
                Ref<PerformanceStreamMarkerInfoIntel> pMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPolygonModeEXT")]
        static abstract void CmdSetPolygonModeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PolygonMode polygonMode
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveRestartEnable")]
        static abstract void CmdSetPrimitiveRestartEnable(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint primitiveRestartEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state2"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveRestartEnableEXT")]
        static abstract void CmdSetPrimitiveRestartEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint primitiveRestartEnable
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveTopology")]
        static abstract void CmdSetPrimitiveTopology(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PrimitiveTopology primitiveTopology
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveTopologyEXT")]
        static abstract void CmdSetPrimitiveTopologyEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PrimitiveTopology primitiveTopology
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_EXT_provoking_vertex"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetProvokingVertexModeEXT")]
        static abstract void CmdSetProvokingVertexModeEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            ProvokingVertexModeEXT provokingVertexMode
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizationSamplesEXT")]
        static abstract void CmdSetRasterizationSamplesEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags rasterizationSamples
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_EXT_transform_feedback"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizationStreamEXT")]
        static abstract void CmdSetRasterizationStreamEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint rasterizationStream
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizerDiscardEnable")]
        static abstract void CmdSetRasterizerDiscardEnable(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint rasterizerDiscardEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state2"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizerDiscardEnableEXT")]
        static abstract void CmdSetRasterizerDiscardEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint rasterizerDiscardEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRayTracingPipelineStackSizeKHR")]
        static abstract void CmdSetRayTracingPipelineStackSizeKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint pipelineStackSize
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocations")]
        static abstract void CmdSetRenderingAttachmentLocations(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
                RenderingAttachmentLocationInfo* pLocationInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocations")]
        static abstract void CmdSetRenderingAttachmentLocations(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
                Ref<RenderingAttachmentLocationInfo> pLocationInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_dynamic_rendering_local_read"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
                "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocationsKHR")]
        static abstract void CmdSetRenderingAttachmentLocationsKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
                RenderingAttachmentLocationInfo* pLocationInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_dynamic_rendering_local_read"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
                "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocationsKHR")]
        static abstract void CmdSetRenderingAttachmentLocationsKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
                Ref<RenderingAttachmentLocationInfo> pLocationInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndices")]
        static abstract void CmdSetRenderingInputAttachmentIndices(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
                RenderingInputAttachmentIndexInfo* pInputAttachmentIndexInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndices")]
        static abstract void CmdSetRenderingInputAttachmentIndices(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
                Ref<RenderingInputAttachmentIndexInfo> pInputAttachmentIndexInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_dynamic_rendering_local_read"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
                "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndicesKHR")]
        static abstract void CmdSetRenderingInputAttachmentIndicesKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
                RenderingInputAttachmentIndexInfo* pInputAttachmentIndexInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_dynamic_rendering_local_read"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
                "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndicesKHR")]
        static abstract void CmdSetRenderingInputAttachmentIndicesKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
                Ref<RenderingInputAttachmentIndexInfo> pInputAttachmentIndexInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_representative_fragment_test"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetRepresentativeFragmentTestEnableNV")]
        static abstract void CmdSetRepresentativeFragmentTestEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint representativeFragmentTestEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_EXT_sample_locations"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleLocationsEnableEXT")]
        static abstract void CmdSetSampleLocationsEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint sampleLocationsEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_sample_locations"],
            ImpliesSets = [
                "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
                "VK_EXT_sample_locations+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleLocationsEXT")]
        static abstract void CmdSetSampleLocationsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSampleLocationsInfoEXT *")]
                SampleLocationsInfoEXT* pSampleLocationsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_sample_locations"],
            ImpliesSets = [
                "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
                "VK_EXT_sample_locations+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleLocationsEXT")]
        static abstract void CmdSetSampleLocationsEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkSampleLocationsInfoEXT *")]
                Ref<SampleLocationsInfoEXT> pSampleLocationsInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleMaskEXT")]
        static abstract void CmdSetSampleMaskEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
            [NativeTypeName("const VkSampleMask *")] uint* pSampleMask
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleMaskEXT")]
        static abstract void CmdSetSampleMaskEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
            [NativeTypeName("const VkSampleMask *")] Ref<uint> pSampleMask
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissor")]
        static abstract void CmdSetScissor(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstScissor,
            [NativeTypeName("uint32_t")] uint scissorCount,
            [NativeTypeName("const VkRect2D *")] Rect2D* pScissors
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissor")]
        static abstract void CmdSetScissor(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstScissor,
            [NativeTypeName("uint32_t")] uint scissorCount,
            [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pScissors
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissor")]
        static abstract void CmdSetScissor(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstScissor,
            [NativeTypeName("const VkRect2D *")] Rect2D pScissors
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCount")]
        static abstract void CmdSetScissorWithCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint scissorCount,
            [NativeTypeName("const VkRect2D *")] Rect2D* pScissors
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCount")]
        static abstract void CmdSetScissorWithCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint scissorCount,
            [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pScissors
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCount")]
        static abstract void CmdSetScissorWithCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRect2D *")] Rect2D pScissors
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCountEXT")]
        static abstract void CmdSetScissorWithCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint scissorCount,
            [NativeTypeName("const VkRect2D *")] Rect2D* pScissors
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCountEXT")]
        static abstract void CmdSetScissorWithCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint scissorCount,
            [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pScissors
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCountEXT")]
        static abstract void CmdSetScissorWithCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkRect2D *")] Rect2D pScissors
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetShadingRateImageEnableNV")]
        static abstract void CmdSetShadingRateImageEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint shadingRateImageEnable
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilCompareMask")]
        static abstract void CmdSetStencilCompareMask(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
            [NativeTypeName("uint32_t")] uint compareMask
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilOp")]
        static abstract void CmdSetStencilOp(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
            StencilOp failOp,
            StencilOp passOp,
            StencilOp depthFailOp,
            CompareOp compareOp
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilOpEXT")]
        static abstract void CmdSetStencilOpEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
            StencilOp failOp,
            StencilOp passOp,
            StencilOp depthFailOp,
            CompareOp compareOp
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilReference")]
        static abstract void CmdSetStencilReference(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
            [NativeTypeName("uint32_t")] uint reference
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilTestEnable")]
        static abstract void CmdSetStencilTestEnable(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint stencilTestEnable
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilTestEnableEXT")]
        static abstract void CmdSetStencilTestEnableEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint stencilTestEnable
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilWriteMask")]
        static abstract void CmdSetStencilWriteMask(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
            [NativeTypeName("uint32_t")] uint writeMask
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_EXT_extended_dynamic_state3+VK_KHR_maintenance2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetTessellationDomainOriginEXT")]
        static abstract void CmdSetTessellationDomainOriginEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            TessellationDomainOrigin domainOrigin
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_vertex_input_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_vertex_input_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_vertex_input_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetVertexInputEXT")]
        static abstract void CmdSetVertexInputEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint vertexBindingDescriptionCount,
            [NativeTypeName("const VkVertexInputBindingDescription2EXT *")]
                VertexInputBindingDescription2EXT* pVertexBindingDescriptions,
            [NativeTypeName("uint32_t")] uint vertexAttributeDescriptionCount,
            [NativeTypeName("const VkVertexInputAttributeDescription2EXT *")]
                VertexInputAttributeDescription2EXT* pVertexAttributeDescriptions
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_vertex_input_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_vertex_input_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_vertex_input_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetVertexInputEXT")]
        static abstract void CmdSetVertexInputEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint vertexBindingDescriptionCount,
            [NativeTypeName("const VkVertexInputBindingDescription2EXT *")]
                Ref<VertexInputBindingDescription2EXT> pVertexBindingDescriptions,
            [NativeTypeName("uint32_t")] uint vertexAttributeDescriptionCount,
            [NativeTypeName("const VkVertexInputAttributeDescription2EXT *")]
                Ref<VertexInputAttributeDescription2EXT> pVertexAttributeDescriptions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewport")]
        static abstract void CmdSetViewport(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewport *")] Viewport* pViewports
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewport")]
        static abstract void CmdSetViewport(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewport *")] Ref<Viewport> pViewports
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewport")]
        static abstract void CmdSetViewport(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("const VkViewport *")] Viewport pViewports
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
                "VK_NV_shading_rate_image+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportShadingRatePaletteNV")]
        static abstract void CmdSetViewportShadingRatePaletteNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkShadingRatePaletteNV *")]
                ShadingRatePaletteNV* pShadingRatePalettes
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
                "VK_NV_shading_rate_image+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportShadingRatePaletteNV")]
        static abstract void CmdSetViewportShadingRatePaletteNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkShadingRatePaletteNV *")]
                Ref<ShadingRatePaletteNV> pShadingRatePalettes
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_shading_rate_image"],
            ImpliesSets = [
                "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
                "VK_NV_shading_rate_image+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportShadingRatePaletteNV")]
        static abstract void CmdSetViewportShadingRatePaletteNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("const VkShadingRatePaletteNV *")]
                ShadingRatePaletteNV pShadingRatePalettes
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_viewport_swizzle"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportSwizzleNV")]
        static abstract void CmdSetViewportSwizzleNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewportSwizzleNV *")] ViewportSwizzleNV* pViewportSwizzles
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_viewport_swizzle"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportSwizzleNV")]
        static abstract void CmdSetViewportSwizzleNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewportSwizzleNV *")] Ref<ViewportSwizzleNV> pViewportSwizzles
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_viewport_swizzle"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportSwizzleNV")]
        static abstract void CmdSetViewportSwizzleNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("const VkViewportSwizzleNV *")] ViewportSwizzleNV pViewportSwizzles
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCount")]
        static abstract void CmdSetViewportWithCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewport *")] Viewport* pViewports
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCount")]
        static abstract void CmdSetViewportWithCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewport *")] Ref<Viewport> pViewports
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCount")]
        static abstract void CmdSetViewportWithCount(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkViewport *")] Viewport pViewports
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCountEXT")]
        static abstract void CmdSetViewportWithCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewport *")] Viewport* pViewports
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCountEXT")]
        static abstract void CmdSetViewportWithCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewport *")] Ref<Viewport> pViewports
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCountEXT")]
        static abstract void CmdSetViewportWithCountEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkViewport *")] Viewport pViewports
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_extended_dynamic_state3", "VK_NV_clip_space_w_scaling"],
            ImpliesSets = [
                "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
                "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
            ],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingEnableNV")]
        static abstract void CmdSetViewportWScalingEnableNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBool32")] uint viewportWScalingEnable
        );

        [SupportedApiProfile("vulkan", ["VK_NV_clip_space_w_scaling"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingNV")]
        static abstract void CmdSetViewportWScalingNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewportWScalingNV *")] ViewportWScalingNV* pViewportWScalings
        );

        [SupportedApiProfile("vulkan", ["VK_NV_clip_space_w_scaling"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingNV")]
        static abstract void CmdSetViewportWScalingNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("uint32_t")] uint viewportCount,
            [NativeTypeName("const VkViewportWScalingNV *")]
                Ref<ViewportWScalingNV> pViewportWScalings
        );

        [SupportedApiProfile("vulkan", ["VK_NV_clip_space_w_scaling"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingNV")]
        static abstract void CmdSetViewportWScalingNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint firstViewport,
            [NativeTypeName("const VkViewportWScalingNV *")] ViewportWScalingNV pViewportWScalings
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_HUAWEI_subpass_shading"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_create_renderpass2",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdSubpassShadingHUAWEI")]
        static abstract void CmdSubpassShadingHuawei(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_maintenance1", "VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = ["VK_KHR_acceleration_structure"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysIndirect2KHR")]
        static abstract void CmdTraceRaysIndirect2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkDeviceAddress")] ulong indirectDeviceAddress
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysIndirectKHR")]
        static abstract void CmdTraceRaysIndirectKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pRaygenShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pMissShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pHitShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pCallableShaderBindingTable,
            [NativeTypeName("VkDeviceAddress")] ulong indirectDeviceAddress
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysIndirectKHR")]
        static abstract void CmdTraceRaysIndirectKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pRaygenShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pMissShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pHitShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pCallableShaderBindingTable,
            [NativeTypeName("VkDeviceAddress")] ulong indirectDeviceAddress
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysKHR")]
        static abstract void CmdTraceRaysKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pRaygenShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pMissShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pHitShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                StridedDeviceAddressRegionKHR* pCallableShaderBindingTable,
            [NativeTypeName("uint32_t")] uint width,
            [NativeTypeName("uint32_t")] uint height,
            [NativeTypeName("uint32_t")] uint depth
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysKHR")]
        static abstract void CmdTraceRaysKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pRaygenShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pMissShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pHitShaderBindingTable,
            [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
                Ref<StridedDeviceAddressRegionKHR> pCallableShaderBindingTable,
            [NativeTypeName("uint32_t")] uint width,
            [NativeTypeName("uint32_t")] uint height,
            [NativeTypeName("uint32_t")] uint depth
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysNV")]
        static abstract void CmdTraceRaysNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle raygenShaderBindingTableBuffer,
            [NativeTypeName("VkDeviceSize")] ulong raygenShaderBindingOffset,
            [NativeTypeName("VkBuffer")] BufferHandle missShaderBindingTableBuffer,
            [NativeTypeName("VkDeviceSize")] ulong missShaderBindingOffset,
            [NativeTypeName("VkDeviceSize")] ulong missShaderBindingStride,
            [NativeTypeName("VkBuffer")] BufferHandle hitShaderBindingTableBuffer,
            [NativeTypeName("VkDeviceSize")] ulong hitShaderBindingOffset,
            [NativeTypeName("VkDeviceSize")] ulong hitShaderBindingStride,
            [NativeTypeName("VkBuffer")] BufferHandle callableShaderBindingTableBuffer,
            [NativeTypeName("VkDeviceSize")] ulong callableShaderBindingOffset,
            [NativeTypeName("VkDeviceSize")] ulong callableShaderBindingStride,
            [NativeTypeName("uint32_t")] uint width,
            [NativeTypeName("uint32_t")] uint height,
            [NativeTypeName("uint32_t")] uint depth
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdUpdateBuffer")]
        static abstract void CmdUpdateBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("VkDeviceSize")] ulong dstOffset,
            [NativeTypeName("VkDeviceSize")] ulong dataSize,
            [NativeTypeName("const void *")] void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdUpdateBuffer")]
        static abstract void CmdUpdateBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("VkDeviceSize")] ulong dstOffset,
            [NativeTypeName("VkDeviceSize")] ulong dataSize,
            [NativeTypeName("const void *")] Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands_compute"],
            ImpliesSets = ["VK_NV_device_generated_commands"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdUpdatePipelineIndirectBufferNV")]
        static abstract void CmdUpdatePipelineIndirectBufferNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            PipelineBindPoint pipelineBindPoint,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents")]
        static abstract void CmdWaitEvents(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint eventCount,
            [NativeTypeName("const VkEvent *")] EventHandle* pEvents,
            [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
            [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
            [NativeTypeName("uint32_t")] uint memoryBarrierCount,
            [NativeTypeName("const VkMemoryBarrier *")] MemoryBarrier* pMemoryBarriers,
            [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
            [NativeTypeName("const VkBufferMemoryBarrier *")]
                BufferMemoryBarrier* pBufferMemoryBarriers,
            [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
            [NativeTypeName("const VkImageMemoryBarrier *")]
                ImageMemoryBarrier* pImageMemoryBarriers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents")]
        static abstract void CmdWaitEvents(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint eventCount,
            [NativeTypeName("const VkEvent *")] Ref<EventHandle> pEvents,
            [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
            [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
            [NativeTypeName("uint32_t")] uint memoryBarrierCount,
            [NativeTypeName("const VkMemoryBarrier *")] Ref<MemoryBarrier> pMemoryBarriers,
            [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
            [NativeTypeName("const VkBufferMemoryBarrier *")]
                Ref<BufferMemoryBarrier> pBufferMemoryBarriers,
            [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
            [NativeTypeName("const VkImageMemoryBarrier *")]
                Ref<ImageMemoryBarrier> pImageMemoryBarriers
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2")]
        static abstract void CmdWaitEvents2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint eventCount,
            [NativeTypeName("const VkEvent *")] EventHandle* pEvents,
            [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfos
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2")]
        static abstract void CmdWaitEvents2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint eventCount,
            [NativeTypeName("const VkEvent *")] Ref<EventHandle> pEvents,
            [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2KHR")]
        static abstract void CmdWaitEvents2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint eventCount,
            [NativeTypeName("const VkEvent *")] EventHandle* pEvents,
            [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2KHR")]
        static abstract void CmdWaitEvents2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint eventCount,
            [NativeTypeName("const VkEvent *")] Ref<EventHandle> pEvents,
            [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfos
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesKHR")]
        static abstract void CmdWriteAccelerationStructuresPropertiesKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint accelerationStructureCount,
            [NativeTypeName("const VkAccelerationStructureKHR *")]
                AccelerationStructureKHRHandle* pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesKHR")]
        static abstract void CmdWriteAccelerationStructuresPropertiesKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint accelerationStructureCount,
            [NativeTypeName("const VkAccelerationStructureKHR *")]
                Ref<AccelerationStructureKHRHandle> pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesKHR")]
        static abstract void CmdWriteAccelerationStructuresPropertiesKHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkAccelerationStructureKHR *")]
                AccelerationStructureKHRHandle pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesNV")]
        static abstract void CmdWriteAccelerationStructuresPropertiesNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint accelerationStructureCount,
            [NativeTypeName("const VkAccelerationStructureNV *")]
                AccelerationStructureNVHandle* pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesNV")]
        static abstract void CmdWriteAccelerationStructuresPropertiesNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint accelerationStructureCount,
            [NativeTypeName("const VkAccelerationStructureNV *")]
                Ref<AccelerationStructureNVHandle> pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesNV")]
        static abstract void CmdWriteAccelerationStructuresPropertiesNV(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkAccelerationStructureNV *")]
                AccelerationStructureNVHandle pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_AMD_buffer_marker+VK_KHR_synchronization2", "VK_AMD_buffer_marker+VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteBufferMarker2AMD")]
        static abstract void CmdWriteBufferMarker2AMD(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineStageFlags2")] ulong stage,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("VkDeviceSize")] ulong dstOffset,
            [NativeTypeName("uint32_t")] uint marker
        );

        [SupportedApiProfile("vulkan", ["VK_AMD_buffer_marker"])]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteBufferMarkerAMD")]
        static abstract void CmdWriteBufferMarkerAMD(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineStageFlagBits")] PipelineStageFlags pipelineStage,
            [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
            [NativeTypeName("VkDeviceSize")] ulong dstOffset,
            [NativeTypeName("uint32_t")] uint marker
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteMicromapsPropertiesEXT")]
        static abstract void CmdWriteMicromapsPropertiesEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint micromapCount,
            [NativeTypeName("const VkMicromapEXT *")] MicromapEXTHandle* pMicromaps,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteMicromapsPropertiesEXT")]
        static abstract void CmdWriteMicromapsPropertiesEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("uint32_t")] uint micromapCount,
            [NativeTypeName("const VkMicromapEXT *")] Ref<MicromapEXTHandle> pMicromaps,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteMicromapsPropertiesEXT")]
        static abstract void CmdWriteMicromapsPropertiesEXT(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("const VkMicromapEXT *")] MicromapEXTHandle pMicromaps,
            QueryType queryType,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteTimestamp")]
        static abstract void CmdWriteTimestamp(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineStageFlagBits")] PipelineStageFlags pipelineStage,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint query
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteTimestamp2")]
        static abstract void CmdWriteTimestamp2(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineStageFlags2")] ulong stage,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint query
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCmdWriteTimestamp2KHR")]
        static abstract void CmdWriteTimestamp2KHR(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkPipelineStageFlags2")] ulong stage,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint query
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCompileDeferredNV")]
        static abstract Result CompileDeferredNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint shader
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
        [NativeFunction("vulkan", EntryPoint = "vkConvertCooperativeVectorMatrixNV")]
        static abstract Result ConvertCooperativeVectorMatrixNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
                ConvertCooperativeVectorMatrixInfoNV* pInfo
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkConvertCooperativeVectorMatrixNV")]
        static abstract Result ConvertCooperativeVectorMatrixNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
                Ref<ConvertCooperativeVectorMatrixInfoNV> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureKHR")]
        static abstract Result CopyAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
                CopyAccelerationStructureInfoKHR* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureKHR")]
        static abstract Result CopyAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
                Ref<CopyAccelerationStructureInfoKHR> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureToMemoryKHR")]
        static abstract Result CopyAccelerationStructureToMemoryKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
                CopyAccelerationStructureToMemoryInfoKHR* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureToMemoryKHR")]
        static abstract Result CopyAccelerationStructureToMemoryKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
                Ref<CopyAccelerationStructureToMemoryInfoKHR> pInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImage")]
        static abstract Result CopyImageToImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToImageInfo *")]
                CopyImageToImageInfo* pCopyImageToImageInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImage")]
        static abstract Result CopyImageToImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToImageInfo *")]
                Ref<CopyImageToImageInfo> pCopyImageToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImageEXT")]
        static abstract Result CopyImageToImageEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToImageInfo *")]
                CopyImageToImageInfo* pCopyImageToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImageEXT")]
        static abstract Result CopyImageToImageEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToImageInfo *")]
                Ref<CopyImageToImageInfo> pCopyImageToImageInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemory")]
        static abstract Result CopyImageToMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToMemoryInfo *")]
                CopyImageToMemoryInfo* pCopyImageToMemoryInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemory")]
        static abstract Result CopyImageToMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToMemoryInfo *")]
                Ref<CopyImageToMemoryInfo> pCopyImageToMemoryInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemoryEXT")]
        static abstract Result CopyImageToMemoryEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToMemoryInfo *")]
                CopyImageToMemoryInfo* pCopyImageToMemoryInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemoryEXT")]
        static abstract Result CopyImageToMemoryEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyImageToMemoryInfo *")]
                Ref<CopyImageToMemoryInfo> pCopyImageToMemoryInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToAccelerationStructureKHR")]
        static abstract Result CopyMemoryToAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
                CopyMemoryToAccelerationStructureInfoKHR* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToAccelerationStructureKHR")]
        static abstract Result CopyMemoryToAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
                Ref<CopyMemoryToAccelerationStructureInfoKHR> pInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImage")]
        static abstract Result CopyMemoryToImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyMemoryToImageInfo *")]
                CopyMemoryToImageInfo* pCopyMemoryToImageInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImage")]
        static abstract Result CopyMemoryToImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyMemoryToImageInfo *")]
                Ref<CopyMemoryToImageInfo> pCopyMemoryToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImageEXT")]
        static abstract Result CopyMemoryToImageEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyMemoryToImageInfo *")]
                CopyMemoryToImageInfo* pCopyMemoryToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImageEXT")]
        static abstract Result CopyMemoryToImageEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCopyMemoryToImageInfo *")]
                Ref<CopyMemoryToImageInfo> pCopyMemoryToImageInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToMicromapEXT")]
        static abstract Result CopyMemoryToMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")]
                CopyMemoryToMicromapInfoEXT* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToMicromapEXT")]
        static abstract Result CopyMemoryToMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")]
                Ref<CopyMemoryToMicromapInfoEXT> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapEXT")]
        static abstract Result CopyMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMicromapInfoEXT *")] CopyMicromapInfoEXT* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapEXT")]
        static abstract Result CopyMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMicromapInfoEXT *")] Ref<CopyMicromapInfoEXT> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapToMemoryEXT")]
        static abstract Result CopyMicromapToMemoryEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")]
                CopyMicromapToMemoryInfoEXT* pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapToMemoryEXT")]
        static abstract Result CopyMicromapToMemoryEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")]
                Ref<CopyMicromapToMemoryInfoEXT> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureKHR")]
        static abstract Result CreateAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureCreateInfoKHR *")]
                AccelerationStructureCreateInfoKHR* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkAccelerationStructureKHR *")]
                AccelerationStructureKHRHandle* pAccelerationStructure
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureKHR")]
        static abstract Result CreateAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureCreateInfoKHR *")]
                Ref<AccelerationStructureCreateInfoKHR> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkAccelerationStructureKHR *")]
                Ref<AccelerationStructureKHRHandle> pAccelerationStructure
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureNV")]
        static abstract Result CreateAccelerationStructureNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureCreateInfoNV *")]
                AccelerationStructureCreateInfoNV* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkAccelerationStructureNV *")]
                AccelerationStructureNVHandle* pAccelerationStructure
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureNV")]
        static abstract Result CreateAccelerationStructureNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureCreateInfoNV *")]
                Ref<AccelerationStructureCreateInfoNV> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkAccelerationStructureNV *")]
                Ref<AccelerationStructureNVHandle> pAccelerationStructure
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateBuffer")]
        static abstract Result CreateBuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferCreateInfo *")] BufferCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkBuffer *")] BufferHandle* pBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateBuffer")]
        static abstract Result CreateBuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferCreateInfo *")] Ref<BufferCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkBuffer *")] Ref<BufferHandle> pBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateBufferView")]
        static abstract Result CreateBufferView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferViewCreateInfo *")] BufferViewCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkBufferView *")] BufferViewHandle* pView
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateBufferView")]
        static abstract Result CreateBufferView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferViewCreateInfo *")]
                Ref<BufferViewCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkBufferView *")] Ref<BufferViewHandle> pView
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCommandPool")]
        static abstract Result CreateCommandPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCommandPoolCreateInfo *")] CommandPoolCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkCommandPool *")] CommandPoolHandle* pCommandPool
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCommandPool")]
        static abstract Result CreateCommandPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCommandPoolCreateInfo *")]
                Ref<CommandPoolCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkCommandPool *")] Ref<CommandPoolHandle> pCommandPool
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateComputePipelines")]
        static abstract Result CreateComputePipelines(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkComputePipelineCreateInfo *")]
                ComputePipelineCreateInfo* pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateComputePipelines")]
        static abstract Result CreateComputePipelines(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkComputePipelineCreateInfo *")]
                Ref<ComputePipelineCreateInfo> pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCudaFunctionNV")]
        static abstract Result CreateCudaFunctionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCudaFunctionCreateInfoNV *")]
                CudaFunctionCreateInfoNV* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkCudaFunctionNV *")] CudaFunctionNVHandle* pFunction
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCudaFunctionNV")]
        static abstract Result CreateCudaFunctionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCudaFunctionCreateInfoNV *")]
                Ref<CudaFunctionCreateInfoNV> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkCudaFunctionNV *")] Ref<CudaFunctionNVHandle> pFunction
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCudaModuleNV")]
        static abstract Result CreateCudaModuleNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCudaModuleCreateInfoNV *")]
                CudaModuleCreateInfoNV* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkCudaModuleNV *")] CudaModuleNVHandle* pModule
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCudaModuleNV")]
        static abstract Result CreateCudaModuleNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCudaModuleCreateInfoNV *")]
                Ref<CudaModuleCreateInfoNV> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkCudaModuleNV *")] Ref<CudaModuleNVHandle> pModule
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCuFunctionNVX")]
        static abstract Result CreateCuFunctionNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCuFunctionCreateInfoNVX *")]
                CuFunctionCreateInfoNVX* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkCuFunctionNVX *")] CuFunctionNVXHandle* pFunction
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCuFunctionNVX")]
        static abstract Result CreateCuFunctionNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCuFunctionCreateInfoNVX *")]
                Ref<CuFunctionCreateInfoNVX> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkCuFunctionNVX *")] Ref<CuFunctionNVXHandle> pFunction
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCuModuleNVX")]
        static abstract Result CreateCuModuleNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCuModuleCreateInfoNVX *")] CuModuleCreateInfoNVX* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkCuModuleNVX *")] CuModuleNVXHandle* pModule
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateCuModuleNVX")]
        static abstract Result CreateCuModuleNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkCuModuleCreateInfoNVX *")]
                Ref<CuModuleCreateInfoNVX> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkCuModuleNVX *")] Ref<CuModuleNVXHandle> pModule
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDebugReportCallbackEXT")]
        static abstract Result CreateDebugReportCallbackEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkDebugReportCallbackCreateInfoEXT *")]
                DebugReportCallbackCreateInfoEXT* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDebugReportCallbackEXT *")] DebugReportCallbackEXTHandle* pCallback
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDebugReportCallbackEXT")]
        static abstract Result CreateDebugReportCallbackEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkDebugReportCallbackCreateInfoEXT *")]
                Ref<DebugReportCallbackCreateInfoEXT> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDebugReportCallbackEXT *")]
                Ref<DebugReportCallbackEXTHandle> pCallback
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDebugUtilsMessengerEXT")]
        static abstract Result CreateDebugUtilsMessengerEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkDebugUtilsMessengerCreateInfoEXT *")]
                DebugUtilsMessengerCreateInfoEXT* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDebugUtilsMessengerEXT *")] DebugUtilsMessengerEXTHandle* pMessenger
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDebugUtilsMessengerEXT")]
        static abstract Result CreateDebugUtilsMessengerEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkDebugUtilsMessengerCreateInfoEXT *")]
                Ref<DebugUtilsMessengerCreateInfoEXT> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDebugUtilsMessengerEXT *")]
                Ref<DebugUtilsMessengerEXTHandle> pMessenger
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDeferredOperationKHR")]
        static abstract Result CreateDeferredOperationKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDeferredOperationKHR *")]
                DeferredOperationKHRHandle* pDeferredOperation
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDeferredOperationKHR")]
        static abstract Result CreateDeferredOperationKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDeferredOperationKHR *")]
                Ref<DeferredOperationKHRHandle> pDeferredOperation
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorPool")]
        static abstract Result CreateDescriptorPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorPoolCreateInfo *")]
                DescriptorPoolCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDescriptorPool *")] DescriptorPoolHandle* pDescriptorPool
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorPool")]
        static abstract Result CreateDescriptorPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorPoolCreateInfo *")]
                Ref<DescriptorPoolCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDescriptorPool *")] Ref<DescriptorPoolHandle> pDescriptorPool
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorSetLayout")]
        static abstract Result CreateDescriptorSetLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
                DescriptorSetLayoutCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDescriptorSetLayout *")] DescriptorSetLayoutHandle* pSetLayout
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorSetLayout")]
        static abstract Result CreateDescriptorSetLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
                Ref<DescriptorSetLayoutCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDescriptorSetLayout *")] Ref<DescriptorSetLayoutHandle> pSetLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplate")]
        static abstract Result CreateDescriptorUpdateTemplate(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
                DescriptorUpdateTemplateCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDescriptorUpdateTemplate *")]
                DescriptorUpdateTemplateHandle* pDescriptorUpdateTemplate
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplate")]
        static abstract Result CreateDescriptorUpdateTemplate(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
                Ref<DescriptorUpdateTemplateCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDescriptorUpdateTemplate *")]
                Ref<DescriptorUpdateTemplateHandle> pDescriptorUpdateTemplate
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplateKHR")]
        static abstract Result CreateDescriptorUpdateTemplateKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
                DescriptorUpdateTemplateCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDescriptorUpdateTemplate *")]
                DescriptorUpdateTemplateHandle* pDescriptorUpdateTemplate
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplateKHR")]
        static abstract Result CreateDescriptorUpdateTemplateKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
                Ref<DescriptorUpdateTemplateCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDescriptorUpdateTemplate *")]
                Ref<DescriptorUpdateTemplateHandle> pDescriptorUpdateTemplate
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDevice")]
        static abstract Result CreateDevice(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkDeviceCreateInfo *")] DeviceCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDevice *")] DeviceHandle* pDevice
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDevice")]
        static abstract Result CreateDevice(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkDeviceCreateInfo *")] Ref<DeviceCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDevice *")] Ref<DeviceHandle> pDevice
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayModeKHR")]
        static abstract Result CreateDisplayModeKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("const VkDisplayModeCreateInfoKHR *")]
                DisplayModeCreateInfoKHR* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkDisplayModeKHR *")] DisplayModeKHRHandle* pMode
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayModeKHR")]
        static abstract Result CreateDisplayModeKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("const VkDisplayModeCreateInfoKHR *")]
                Ref<DisplayModeCreateInfoKHR> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkDisplayModeKHR *")] Ref<DisplayModeKHRHandle> pMode
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayPlaneSurfaceKHR")]
        static abstract Result CreateDisplayPlaneSurfaceKHR(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkDisplaySurfaceCreateInfoKHR *")]
                DisplaySurfaceCreateInfoKHR* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSurfaceKHR *")] SurfaceKHRHandle* pSurface
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayPlaneSurfaceKHR")]
        static abstract Result CreateDisplayPlaneSurfaceKHR(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkDisplaySurfaceCreateInfoKHR *")]
                Ref<DisplaySurfaceCreateInfoKHR> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSurfaceKHR *")] Ref<SurfaceKHRHandle> pSurface
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateEvent")]
        static abstract Result CreateEvent(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkEventCreateInfo *")] EventCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkEvent *")] EventHandle* pEvent
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateEvent")]
        static abstract Result CreateEvent(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkEventCreateInfo *")] Ref<EventCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkEvent *")] Ref<EventHandle> pEvent
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateExternalComputeQueueNV")]
        static abstract Result CreateExternalComputeQueueNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkExternalComputeQueueCreateInfoNV *")]
                ExternalComputeQueueCreateInfoNV* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkExternalComputeQueueNV *")]
                ExternalComputeQueueNVHandle* pExternalQueue
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateExternalComputeQueueNV")]
        static abstract Result CreateExternalComputeQueueNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkExternalComputeQueueCreateInfoNV *")]
                Ref<ExternalComputeQueueCreateInfoNV> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkExternalComputeQueueNV *")]
                Ref<ExternalComputeQueueNVHandle> pExternalQueue
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateFence")]
        static abstract Result CreateFence(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkFenceCreateInfo *")] FenceCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkFence *")] FenceHandle* pFence
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateFence")]
        static abstract Result CreateFence(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkFenceCreateInfo *")] Ref<FenceCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkFence *")] Ref<FenceHandle> pFence
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateFramebuffer")]
        static abstract Result CreateFramebuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkFramebufferCreateInfo *")] FramebufferCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkFramebuffer *")] FramebufferHandle* pFramebuffer
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateFramebuffer")]
        static abstract Result CreateFramebuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkFramebufferCreateInfo *")]
                Ref<FramebufferCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkFramebuffer *")] Ref<FramebufferHandle> pFramebuffer
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateGraphicsPipelines")]
        static abstract Result CreateGraphicsPipelines(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkGraphicsPipelineCreateInfo *")]
                GraphicsPipelineCreateInfo* pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateGraphicsPipelines")]
        static abstract Result CreateGraphicsPipelines(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkGraphicsPipelineCreateInfo *")]
                Ref<GraphicsPipelineCreateInfo> pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_headless_surface"],
            ImpliesSets = ["VK_KHR_surface"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateHeadlessSurfaceEXT")]
        static abstract Result CreateHeadlessSurfaceEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkHeadlessSurfaceCreateInfoEXT *")]
                HeadlessSurfaceCreateInfoEXT* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSurfaceKHR *")] SurfaceKHRHandle* pSurface
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_headless_surface"],
            ImpliesSets = ["VK_KHR_surface"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateHeadlessSurfaceEXT")]
        static abstract Result CreateHeadlessSurfaceEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkHeadlessSurfaceCreateInfoEXT *")]
                Ref<HeadlessSurfaceCreateInfoEXT> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSurfaceKHR *")] Ref<SurfaceKHRHandle> pSurface
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateImage")]
        static abstract Result CreateImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageCreateInfo *")] ImageCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkImage *")] ImageHandle* pImage
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateImage")]
        static abstract Result CreateImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageCreateInfo *")] Ref<ImageCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkImage *")] Ref<ImageHandle> pImage
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateImageView")]
        static abstract Result CreateImageView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewCreateInfo *")] ImageViewCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkImageView *")] ImageViewHandle* pView
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateImageView")]
        static abstract Result CreateImageView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewCreateInfo *")] Ref<ImageViewCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkImageView *")] Ref<ImageViewHandle> pView
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutEXT")]
        static abstract Result CreateIndirectCommandsLayoutEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoEXT *")]
                IndirectCommandsLayoutCreateInfoEXT* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkIndirectCommandsLayoutEXT *")]
                IndirectCommandsLayoutEXTHandle* pIndirectCommandsLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutEXT")]
        static abstract Result CreateIndirectCommandsLayoutEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoEXT *")]
                Ref<IndirectCommandsLayoutCreateInfoEXT> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkIndirectCommandsLayoutEXT *")]
                Ref<IndirectCommandsLayoutEXTHandle> pIndirectCommandsLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutNV")]
        static abstract Result CreateIndirectCommandsLayoutNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoNV *")]
                IndirectCommandsLayoutCreateInfoNV* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkIndirectCommandsLayoutNV *")]
                IndirectCommandsLayoutNVHandle* pIndirectCommandsLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutNV")]
        static abstract Result CreateIndirectCommandsLayoutNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoNV *")]
                Ref<IndirectCommandsLayoutCreateInfoNV> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkIndirectCommandsLayoutNV *")]
                Ref<IndirectCommandsLayoutNVHandle> pIndirectCommandsLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectExecutionSetEXT")]
        static abstract Result CreateIndirectExecutionSetEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkIndirectExecutionSetCreateInfoEXT *")]
                IndirectExecutionSetCreateInfoEXT* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkIndirectExecutionSetEXT *")]
                IndirectExecutionSetEXTHandle* pIndirectExecutionSet
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectExecutionSetEXT")]
        static abstract Result CreateIndirectExecutionSetEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkIndirectExecutionSetCreateInfoEXT *")]
                Ref<IndirectExecutionSetCreateInfoEXT> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkIndirectExecutionSetEXT *")]
                Ref<IndirectExecutionSetEXTHandle> pIndirectExecutionSet
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateInstance")]
        static abstract Result CreateInstance(
            [NativeTypeName("const VkInstanceCreateInfo *")] InstanceCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkInstance *")] InstanceHandle* pInstance
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateInstance")]
        static abstract Result CreateInstance(
            [NativeTypeName("const VkInstanceCreateInfo *")] Ref<InstanceCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkInstance *")] Ref<InstanceHandle> pInstance
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateMicromapEXT")]
        static abstract Result CreateMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMicromapCreateInfoEXT *")] MicromapCreateInfoEXT* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkMicromapEXT *")] MicromapEXTHandle* pMicromap
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateMicromapEXT")]
        static abstract Result CreateMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMicromapCreateInfoEXT *")]
                Ref<MicromapCreateInfoEXT> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkMicromapEXT *")] Ref<MicromapEXTHandle> pMicromap
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateOpticalFlowSessionNV")]
        static abstract Result CreateOpticalFlowSessionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkOpticalFlowSessionCreateInfoNV *")]
                OpticalFlowSessionCreateInfoNV* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkOpticalFlowSessionNV *")] OpticalFlowSessionNVHandle* pSession
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateOpticalFlowSessionNV")]
        static abstract Result CreateOpticalFlowSessionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkOpticalFlowSessionCreateInfoNV *")]
                Ref<OpticalFlowSessionCreateInfoNV> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkOpticalFlowSessionNV *")] Ref<OpticalFlowSessionNVHandle> pSession
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineBinariesKHR")]
        static abstract Result CreatePipelineBinariesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineBinaryCreateInfoKHR *")]
                PipelineBinaryCreateInfoKHR* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            PipelineBinaryHandlesInfoKHR* pBinaries
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineBinariesKHR")]
        static abstract Result CreatePipelineBinariesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineBinaryCreateInfoKHR *")]
                Ref<PipelineBinaryCreateInfoKHR> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            Ref<PipelineBinaryHandlesInfoKHR> pBinaries
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineCache")]
        static abstract Result CreatePipelineCache(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineCacheCreateInfo *")]
                PipelineCacheCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPipelineCache *")] PipelineCacheHandle* pPipelineCache
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineCache")]
        static abstract Result CreatePipelineCache(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineCacheCreateInfo *")]
                Ref<PipelineCacheCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPipelineCache *")] Ref<PipelineCacheHandle> pPipelineCache
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineLayout")]
        static abstract Result CreatePipelineLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineLayoutCreateInfo *")]
                PipelineLayoutCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPipelineLayout *")] PipelineLayoutHandle* pPipelineLayout
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineLayout")]
        static abstract Result CreatePipelineLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineLayoutCreateInfo *")]
                Ref<PipelineLayoutCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPipelineLayout *")] Ref<PipelineLayoutHandle> pPipelineLayout
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlot")]
        static abstract Result CreatePrivateDataSlot(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
                PrivateDataSlotCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPrivateDataSlot *")] PrivateDataSlotHandle* pPrivateDataSlot
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlot")]
        static abstract Result CreatePrivateDataSlot(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
                Ref<PrivateDataSlotCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPrivateDataSlot *")] Ref<PrivateDataSlotHandle> pPrivateDataSlot
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_private_data"],
            ImpliesSets = [
                "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
                "VK_EXT_private_data+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlotEXT")]
        static abstract Result CreatePrivateDataSlotEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
                PrivateDataSlotCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPrivateDataSlot *")] PrivateDataSlotHandle* pPrivateDataSlot
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_private_data"],
            ImpliesSets = [
                "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
                "VK_EXT_private_data+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlotEXT")]
        static abstract Result CreatePrivateDataSlotEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
                Ref<PrivateDataSlotCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPrivateDataSlot *")] Ref<PrivateDataSlotHandle> pPrivateDataSlot
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateQueryPool")]
        static abstract Result CreateQueryPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkQueryPoolCreateInfo *")] QueryPoolCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkQueryPool *")] QueryPoolHandle* pQueryPool
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateQueryPool")]
        static abstract Result CreateQueryPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkQueryPoolCreateInfo *")] Ref<QueryPoolCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkQueryPool *")] Ref<QueryPoolHandle> pQueryPool
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesKHR")]
        static abstract Result CreateRayTracingPipelinesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkRayTracingPipelineCreateInfoKHR *")]
                RayTracingPipelineCreateInfoKHR* pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesKHR")]
        static abstract Result CreateRayTracingPipelinesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkRayTracingPipelineCreateInfoKHR *")]
                Ref<RayTracingPipelineCreateInfoKHR> pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesNV")]
        static abstract Result CreateRayTracingPipelinesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkRayTracingPipelineCreateInfoNV *")]
                RayTracingPipelineCreateInfoNV* pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesNV")]
        static abstract Result CreateRayTracingPipelinesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkRayTracingPipelineCreateInfoNV *")]
                Ref<RayTracingPipelineCreateInfoNV> pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass")]
        static abstract Result CreateRenderPass(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderPassCreateInfo *")] RenderPassCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkRenderPass *")] RenderPassHandle* pRenderPass
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass")]
        static abstract Result CreateRenderPass(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderPassCreateInfo *")]
                Ref<RenderPassCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkRenderPass *")] Ref<RenderPassHandle> pRenderPass
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2")]
        static abstract Result CreateRenderPass2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderPassCreateInfo2 *")] RenderPassCreateInfo2* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkRenderPass *")] RenderPassHandle* pRenderPass
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2")]
        static abstract Result CreateRenderPass2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderPassCreateInfo2 *")]
                Ref<RenderPassCreateInfo2> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkRenderPass *")] Ref<RenderPassHandle> pRenderPass
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2KHR")]
        static abstract Result CreateRenderPass2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderPassCreateInfo2 *")] RenderPassCreateInfo2* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkRenderPass *")] RenderPassHandle* pRenderPass
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_create_renderpass2"],
            ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2KHR")]
        static abstract Result CreateRenderPass2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderPassCreateInfo2 *")]
                Ref<RenderPassCreateInfo2> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkRenderPass *")] Ref<RenderPassHandle> pRenderPass
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSampler")]
        static abstract Result CreateSampler(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerCreateInfo *")] SamplerCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSampler *")] SamplerHandle* pSampler
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSampler")]
        static abstract Result CreateSampler(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerCreateInfo *")] Ref<SamplerCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSampler *")] Ref<SamplerHandle> pSampler
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversion")]
        static abstract Result CreateSamplerYcbcrConversion(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
                SamplerYcbcrConversionCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSamplerYcbcrConversion *")]
                SamplerYcbcrConversionHandle* pYcbcrConversion
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversion")]
        static abstract Result CreateSamplerYcbcrConversion(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
                Ref<SamplerYcbcrConversionCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSamplerYcbcrConversion *")]
                Ref<SamplerYcbcrConversionHandle> pYcbcrConversion
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_sampler_ycbcr_conversion"],
            ImpliesSets = [
                "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversionKHR")]
        static abstract Result CreateSamplerYcbcrConversionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
                SamplerYcbcrConversionCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSamplerYcbcrConversion *")]
                SamplerYcbcrConversionHandle* pYcbcrConversion
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_sampler_ycbcr_conversion"],
            ImpliesSets = [
                "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversionKHR")]
        static abstract Result CreateSamplerYcbcrConversionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
                Ref<SamplerYcbcrConversionCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSamplerYcbcrConversion *")]
                Ref<SamplerYcbcrConversionHandle> pYcbcrConversion
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSemaphore")]
        static abstract Result CreateSemaphore(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreCreateInfo *")] SemaphoreCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSemaphore *")] SemaphoreHandle* pSemaphore
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSemaphore")]
        static abstract Result CreateSemaphore(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreCreateInfo *")] Ref<SemaphoreCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSemaphore *")] Ref<SemaphoreHandle> pSemaphore
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateShaderModule")]
        static abstract Result CreateShaderModule(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkShaderModuleCreateInfo *")]
                ShaderModuleCreateInfo* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkShaderModule *")] ShaderModuleHandle* pShaderModule
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateShaderModule")]
        static abstract Result CreateShaderModule(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkShaderModuleCreateInfo *")]
                Ref<ShaderModuleCreateInfo> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkShaderModule *")] Ref<ShaderModuleHandle> pShaderModule
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateShadersEXT")]
        static abstract Result CreateShadersEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkShaderCreateInfoEXT *")] ShaderCreateInfoEXT* pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkShaderEXT *")] ShaderEXTHandle* pShaders
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateShadersEXT")]
        static abstract Result CreateShadersEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint createInfoCount,
            [NativeTypeName("const VkShaderCreateInfoEXT *")] Ref<ShaderCreateInfoEXT> pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkShaderEXT *")] Ref<ShaderEXTHandle> pShaders
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_display_swapchain"],
            ImpliesSets = ["VK_KHR_display", "VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSharedSwapchainsKHR")]
        static abstract Result CreateSharedSwapchainsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint swapchainCount,
            [NativeTypeName("const VkSwapchainCreateInfoKHR *")]
                SwapchainCreateInfoKHR* pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSwapchainKHR *")] SwapchainKHRHandle* pSwapchains
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_display_swapchain"],
            ImpliesSets = ["VK_KHR_display", "VK_KHR_swapchain"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSharedSwapchainsKHR")]
        static abstract Result CreateSharedSwapchainsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint swapchainCount,
            [NativeTypeName("const VkSwapchainCreateInfoKHR *")]
                Ref<SwapchainCreateInfoKHR> pCreateInfos,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSwapchainKHR *")] Ref<SwapchainKHRHandle> pSwapchains
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSwapchainKHR")]
        static abstract Result CreateSwapchainKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSwapchainCreateInfoKHR *")]
                SwapchainCreateInfoKHR* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkSwapchainKHR *")] SwapchainKHRHandle* pSwapchain
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateSwapchainKHR")]
        static abstract Result CreateSwapchainKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSwapchainCreateInfoKHR *")]
                Ref<SwapchainCreateInfoKHR> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkSwapchainKHR *")] Ref<SwapchainKHRHandle> pSwapchain
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [NativeFunction("vulkan", EntryPoint = "vkCreateValidationCacheEXT")]
        static abstract Result CreateValidationCacheEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkValidationCacheCreateInfoEXT *")]
                ValidationCacheCreateInfoEXT* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkValidationCacheEXT *")] ValidationCacheEXTHandle* pValidationCache
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateValidationCacheEXT")]
        static abstract Result CreateValidationCacheEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkValidationCacheCreateInfoEXT *")]
                Ref<ValidationCacheCreateInfoEXT> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkValidationCacheEXT *")]
                Ref<ValidationCacheEXTHandle> pValidationCache
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionKHR")]
        static abstract Result CreateVideoSessionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkVideoSessionCreateInfoKHR *")]
                VideoSessionCreateInfoKHR* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkVideoSessionKHR *")] VideoSessionKHRHandle* pVideoSession
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionKHR")]
        static abstract Result CreateVideoSessionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkVideoSessionCreateInfoKHR *")]
                Ref<VideoSessionCreateInfoKHR> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkVideoSessionKHR *")] Ref<VideoSessionKHRHandle> pVideoSession
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionParametersKHR")]
        static abstract Result CreateVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkVideoSessionParametersCreateInfoKHR *")]
                VideoSessionParametersCreateInfoKHR* pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkVideoSessionParametersKHR *")]
                VideoSessionParametersKHRHandle* pVideoSessionParameters
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionParametersKHR")]
        static abstract Result CreateVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkVideoSessionParametersCreateInfoKHR *")]
                Ref<VideoSessionParametersCreateInfoKHR> pCreateInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkVideoSessionParametersKHR *")]
                Ref<VideoSessionParametersKHRHandle> pVideoSessionParameters
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectNameEXT")]
        static abstract Result DebugMarkerSetObjectNameEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugMarkerObjectNameInfoEXT *")]
                DebugMarkerObjectNameInfoEXT* pNameInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectNameEXT")]
        static abstract Result DebugMarkerSetObjectNameEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugMarkerObjectNameInfoEXT *")]
                Ref<DebugMarkerObjectNameInfoEXT> pNameInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectTagEXT")]
        static abstract Result DebugMarkerSetObjectTagEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugMarkerObjectTagInfoEXT *")]
                DebugMarkerObjectTagInfoEXT* pTagInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_debug_marker"],
            ImpliesSets = ["VK_EXT_debug_report"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectTagEXT")]
        static abstract Result DebugMarkerSetObjectTagEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugMarkerObjectTagInfoEXT *")]
                Ref<DebugMarkerObjectTagInfoEXT> pTagInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
        [NativeFunction("vulkan", EntryPoint = "vkDebugReportMessageEXT")]
        static abstract void DebugReportMessageEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugReportFlagsEXT")] uint flags,
            DebugReportObjectTypeEXT objectType,
            [NativeTypeName("uint64_t")] ulong @object,
            [NativeTypeName("size_t")] nuint location,
            [NativeTypeName("int32_t")] int messageCode,
            [NativeTypeName("const char *")] sbyte* pLayerPrefix,
            [NativeTypeName("const char *")] sbyte* pMessage
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDebugReportMessageEXT")]
        static abstract void DebugReportMessageEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugReportFlagsEXT")] uint flags,
            DebugReportObjectTypeEXT objectType,
            [NativeTypeName("uint64_t")] ulong @object,
            [NativeTypeName("size_t")] nuint location,
            [NativeTypeName("int32_t")] int messageCode,
            [NativeTypeName("const char *")] Ref<sbyte> pLayerPrefix,
            [NativeTypeName("const char *")] Ref<sbyte> pMessage
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
        [NativeFunction("vulkan", EntryPoint = "vkDeferredOperationJoinKHR")]
        static abstract Result DeferredOperationJoinKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureKHR")]
        static abstract void DestroyAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkAccelerationStructureKHR")]
                AccelerationStructureKHRHandle accelerationStructure,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureKHR")]
        static abstract void DestroyAccelerationStructureKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkAccelerationStructureKHR")]
                AccelerationStructureKHRHandle accelerationStructure,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureNV")]
        static abstract void DestroyAccelerationStructureNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkAccelerationStructureNV")]
                AccelerationStructureNVHandle accelerationStructure,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureNV")]
        static abstract void DestroyAccelerationStructureNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkAccelerationStructureNV")]
                AccelerationStructureNVHandle accelerationStructure,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyBuffer")]
        static abstract void DestroyBuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyBuffer")]
        static abstract void DestroyBuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyBufferView")]
        static abstract void DestroyBufferView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkBufferView")] BufferViewHandle bufferView,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyBufferView")]
        static abstract void DestroyBufferView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkBufferView")] BufferViewHandle bufferView,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCommandPool")]
        static abstract void DestroyCommandPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCommandPool")]
        static abstract void DestroyCommandPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaFunctionNV")]
        static abstract void DestroyCudaFunctionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCudaFunctionNV")] CudaFunctionNVHandle function,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaFunctionNV")]
        static abstract void DestroyCudaFunctionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCudaFunctionNV")] CudaFunctionNVHandle function,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaModuleNV")]
        static abstract void DestroyCudaModuleNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaModuleNV")]
        static abstract void DestroyCudaModuleNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCuFunctionNVX")]
        static abstract void DestroyCuFunctionNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCuFunctionNVX")] CuFunctionNVXHandle function,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCuFunctionNVX")]
        static abstract void DestroyCuFunctionNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCuFunctionNVX")] CuFunctionNVXHandle function,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCuModuleNVX")]
        static abstract void DestroyCuModuleNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCuModuleNVX")] CuModuleNVXHandle module,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyCuModuleNVX")]
        static abstract void DestroyCuModuleNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCuModuleNVX")] CuModuleNVXHandle module,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugReportCallbackEXT")]
        static abstract void DestroyDebugReportCallbackEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugReportCallbackEXT")] DebugReportCallbackEXTHandle callback,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugReportCallbackEXT")]
        static abstract void DestroyDebugReportCallbackEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugReportCallbackEXT")] DebugReportCallbackEXTHandle callback,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugUtilsMessengerEXT")]
        static abstract void DestroyDebugUtilsMessengerEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugUtilsMessengerEXT")] DebugUtilsMessengerEXTHandle messenger,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugUtilsMessengerEXT")]
        static abstract void DestroyDebugUtilsMessengerEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugUtilsMessengerEXT")] DebugUtilsMessengerEXTHandle messenger,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDeferredOperationKHR")]
        static abstract void DestroyDeferredOperationKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDeferredOperationKHR")]
        static abstract void DestroyDeferredOperationKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorPool")]
        static abstract void DestroyDescriptorPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorPool")]
        static abstract void DestroyDescriptorPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorSetLayout")]
        static abstract void DestroyDescriptorSetLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle descriptorSetLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorSetLayout")]
        static abstract void DestroyDescriptorSetLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle descriptorSetLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplate")]
        static abstract void DestroyDescriptorUpdateTemplate(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplate")]
        static abstract void DestroyDescriptorUpdateTemplate(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplateKHR")]
        static abstract void DestroyDescriptorUpdateTemplateKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplateKHR")]
        static abstract void DestroyDescriptorUpdateTemplateKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDevice")]
        static abstract void DestroyDevice(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyDevice")]
        static abstract void DestroyDevice(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyEvent")]
        static abstract void DestroyEvent(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyEvent")]
        static abstract void DestroyEvent(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkEvent")] EventHandle @event,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyExternalComputeQueueNV")]
        static abstract void DestroyExternalComputeQueueNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyExternalComputeQueueNV")]
        static abstract void DestroyExternalComputeQueueNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyFence")]
        static abstract void DestroyFence(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkFence")] FenceHandle fence,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyFence")]
        static abstract void DestroyFence(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkFence")] FenceHandle fence,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyFramebuffer")]
        static abstract void DestroyFramebuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyFramebuffer")]
        static abstract void DestroyFramebuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyImage")]
        static abstract void DestroyImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyImage")]
        static abstract void DestroyImage(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyImageView")]
        static abstract void DestroyImageView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImageView")] ImageViewHandle imageView,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyImageView")]
        static abstract void DestroyImageView(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImageView")] ImageViewHandle imageView,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutEXT")]
        static abstract void DestroyIndirectCommandsLayoutEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectCommandsLayoutEXT")]
                IndirectCommandsLayoutEXTHandle indirectCommandsLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutEXT")]
        static abstract void DestroyIndirectCommandsLayoutEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectCommandsLayoutEXT")]
                IndirectCommandsLayoutEXTHandle indirectCommandsLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutNV")]
        static abstract void DestroyIndirectCommandsLayoutNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectCommandsLayoutNV")]
                IndirectCommandsLayoutNVHandle indirectCommandsLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutNV")]
        static abstract void DestroyIndirectCommandsLayoutNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectCommandsLayoutNV")]
                IndirectCommandsLayoutNVHandle indirectCommandsLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectExecutionSetEXT")]
        static abstract void DestroyIndirectExecutionSetEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectExecutionSetEXT")]
        static abstract void DestroyIndirectExecutionSetEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyInstance")]
        static abstract void DestroyInstance(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyInstance")]
        static abstract void DestroyInstance(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyMicromapEXT")]
        static abstract void DestroyMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkMicromapEXT")] MicromapEXTHandle micromap,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyMicromapEXT")]
        static abstract void DestroyMicromapEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkMicromapEXT")] MicromapEXTHandle micromap,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyOpticalFlowSessionNV")]
        static abstract void DestroyOpticalFlowSessionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyOpticalFlowSessionNV")]
        static abstract void DestroyOpticalFlowSessionNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipeline")]
        static abstract void DestroyPipeline(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipeline")]
        static abstract void DestroyPipeline(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineBinaryKHR")]
        static abstract void DestroyPipelineBinaryKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineBinaryKHR")] PipelineBinaryKHRHandle pipelineBinary,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineBinaryKHR")]
        static abstract void DestroyPipelineBinaryKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineBinaryKHR")] PipelineBinaryKHRHandle pipelineBinary,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineCache")]
        static abstract void DestroyPipelineCache(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineCache")]
        static abstract void DestroyPipelineCache(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineLayout")]
        static abstract void DestroyPipelineLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle pipelineLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineLayout")]
        static abstract void DestroyPipelineLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle pipelineLayout,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlot")]
        static abstract void DestroyPrivateDataSlot(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlot")]
        static abstract void DestroyPrivateDataSlot(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_private_data"],
            ImpliesSets = [
                "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
                "VK_EXT_private_data+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlotEXT")]
        static abstract void DestroyPrivateDataSlotEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_private_data"],
            ImpliesSets = [
                "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
                "VK_EXT_private_data+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlotEXT")]
        static abstract void DestroyPrivateDataSlotEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyQueryPool")]
        static abstract void DestroyQueryPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyQueryPool")]
        static abstract void DestroyQueryPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyRenderPass")]
        static abstract void DestroyRenderPass(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyRenderPass")]
        static abstract void DestroyRenderPass(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySampler")]
        static abstract void DestroySampler(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSampler")] SamplerHandle sampler,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySampler")]
        static abstract void DestroySampler(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSampler")] SamplerHandle sampler,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversion")]
        static abstract void DestroySamplerYcbcrConversion(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSamplerYcbcrConversion")]
                SamplerYcbcrConversionHandle ycbcrConversion,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversion")]
        static abstract void DestroySamplerYcbcrConversion(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSamplerYcbcrConversion")]
                SamplerYcbcrConversionHandle ycbcrConversion,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_sampler_ycbcr_conversion"],
            ImpliesSets = [
                "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversionKHR")]
        static abstract void DestroySamplerYcbcrConversionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSamplerYcbcrConversion")]
                SamplerYcbcrConversionHandle ycbcrConversion,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_sampler_ycbcr_conversion"],
            ImpliesSets = [
                "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversionKHR")]
        static abstract void DestroySamplerYcbcrConversionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSamplerYcbcrConversion")]
                SamplerYcbcrConversionHandle ycbcrConversion,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySemaphore")]
        static abstract void DestroySemaphore(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySemaphore")]
        static abstract void DestroySemaphore(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderEXT")]
        static abstract void DestroyShaderEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderEXT")]
        static abstract void DestroyShaderEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderModule")]
        static abstract void DestroyShaderModule(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderModule")]
        static abstract void DestroyShaderModule(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySurfaceKHR")]
        static abstract void DestroySurfaceKHR(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySurfaceKHR")]
        static abstract void DestroySurfaceKHR(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySwapchainKHR")]
        static abstract void DestroySwapchainKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroySwapchainKHR")]
        static abstract void DestroySwapchainKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyValidationCacheEXT")]
        static abstract void DestroyValidationCacheEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyValidationCacheEXT")]
        static abstract void DestroyValidationCacheEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionKHR")]
        static abstract void DestroyVideoSessionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionKHR")]
        static abstract void DestroyVideoSessionKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionParametersKHR")]
        static abstract void DestroyVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionParametersKHR")]
                VideoSessionParametersKHRHandle videoSessionParameters,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionParametersKHR")]
        static abstract void DestroyVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionParametersKHR")]
                VideoSessionParametersKHRHandle videoSessionParameters,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDeviceWaitIdle")]
        static abstract Result DeviceWaitIdle([NativeTypeName("VkDevice")] DeviceHandle device);

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkDisplayPowerControlEXT")]
        static abstract Result DisplayPowerControlEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("const VkDisplayPowerInfoEXT *")] DisplayPowerInfoEXT* pDisplayPowerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkDisplayPowerControlEXT")]
        static abstract Result DisplayPowerControlEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("const VkDisplayPowerInfoEXT *")]
                Ref<DisplayPowerInfoEXT> pDisplayPowerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEndCommandBuffer")]
        static abstract Result EndCommandBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceExtensionProperties")]
        static abstract Result EnumerateDeviceExtensionProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const char *")] sbyte* pLayerName,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            ExtensionProperties* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceExtensionProperties")]
        static abstract Result EnumerateDeviceExtensionProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const char *")] Ref<sbyte> pLayerName,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<ExtensionProperties> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceLayerProperties")]
        static abstract Result EnumerateDeviceLayerProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            LayerProperties* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceLayerProperties")]
        static abstract Result EnumerateDeviceLayerProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<LayerProperties> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceExtensionProperties")]
        static abstract Result EnumerateInstanceExtensionProperties(
            [NativeTypeName("const char *")] sbyte* pLayerName,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            ExtensionProperties* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceExtensionProperties")]
        static abstract Result EnumerateInstanceExtensionProperties(
            [NativeTypeName("const char *")] Ref<sbyte> pLayerName,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<ExtensionProperties> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceLayerProperties")]
        static abstract Result EnumerateInstanceLayerProperties(
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            LayerProperties* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceLayerProperties")]
        static abstract Result EnumerateInstanceLayerProperties(
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<LayerProperties> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceVersion")]
        static abstract Result EnumerateInstanceVersion(
            [NativeTypeName("uint32_t *")] uint* pApiVersion
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceVersion")]
        static abstract Result EnumerateInstanceVersion(
            [NativeTypeName("uint32_t *")] Ref<uint> pApiVersion
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroups")]
        static abstract Result EnumeratePhysicalDeviceGroups(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("uint32_t *")] uint* pPhysicalDeviceGroupCount,
            PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroups")]
        static abstract Result EnumeratePhysicalDeviceGroups(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("uint32_t *")] Ref<uint> pPhysicalDeviceGroupCount,
            Ref<PhysicalDeviceGroupProperties> pPhysicalDeviceGroupProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_device_group_creation"])]
        [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroupsKHR")]
        static abstract Result EnumeratePhysicalDeviceGroupsKHR(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("uint32_t *")] uint* pPhysicalDeviceGroupCount,
            PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_device_group_creation"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroupsKHR")]
        static abstract Result EnumeratePhysicalDeviceGroupsKHR(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("uint32_t *")] Ref<uint> pPhysicalDeviceGroupCount,
            Ref<PhysicalDeviceGroupProperties> pPhysicalDeviceGroupProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_performance_query"],
            ImpliesSets = [
                "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
                "VK_KHR_performance_query+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"
        )]
        static abstract Result EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t")] uint queueFamilyIndex,
            [NativeTypeName("uint32_t *")] uint* pCounterCount,
            PerformanceCounterKHR* pCounters,
            PerformanceCounterDescriptionKHR* pCounterDescriptions
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_performance_query"],
            ImpliesSets = [
                "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
                "VK_KHR_performance_query+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"
        )]
        static abstract Result EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t")] uint queueFamilyIndex,
            [NativeTypeName("uint32_t *")] Ref<uint> pCounterCount,
            Ref<PerformanceCounterKHR> pCounters,
            Ref<PerformanceCounterDescriptionKHR> pCounterDescriptions
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDevices")]
        static abstract Result EnumeratePhysicalDevices(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("uint32_t *")] uint* pPhysicalDeviceCount,
            [NativeTypeName("VkPhysicalDevice *")] PhysicalDeviceHandle* pPhysicalDevices
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDevices")]
        static abstract Result EnumeratePhysicalDevices(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("uint32_t *")] Ref<uint> pPhysicalDeviceCount,
            [NativeTypeName("VkPhysicalDevice *")] Ref<PhysicalDeviceHandle> pPhysicalDevices
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkFlushMappedMemoryRanges")]
        static abstract Result FlushMappedMemoryRanges(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint memoryRangeCount,
            [NativeTypeName("const VkMappedMemoryRange *")] MappedMemoryRange* pMemoryRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkFlushMappedMemoryRanges")]
        static abstract Result FlushMappedMemoryRanges(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint memoryRangeCount,
            [NativeTypeName("const VkMappedMemoryRange *")] Ref<MappedMemoryRange> pMemoryRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkFreeCommandBuffers")]
        static abstract void FreeCommandBuffer(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkFreeCommandBuffers")]
        static abstract void FreeCommandBuffers(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("uint32_t")] uint commandBufferCount,
            [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle* pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkFreeCommandBuffers")]
        static abstract void FreeCommandBuffers(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("uint32_t")] uint commandBufferCount,
            [NativeTypeName("const VkCommandBuffer *")] Ref<CommandBufferHandle> pCommandBuffers
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkFreeDescriptorSets")]
        static abstract Result FreeDescriptorSets(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
            [NativeTypeName("uint32_t")] uint descriptorSetCount,
            [NativeTypeName("const VkDescriptorSet *")] DescriptorSetHandle* pDescriptorSets
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkFreeDescriptorSets")]
        static abstract Result FreeDescriptorSets(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
            [NativeTypeName("uint32_t")] uint descriptorSetCount,
            [NativeTypeName("const VkDescriptorSet *")] Ref<DescriptorSetHandle> pDescriptorSets
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkFreeMemory")]
        static abstract void FreeMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkFreeMemory")]
        static abstract void FreeMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureBuildSizesKHR")]
        static abstract void GetAccelerationStructureBuildSizesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            AccelerationStructureBuildTypeKHR buildType,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                AccelerationStructureBuildGeometryInfoKHR* pBuildInfo,
            [NativeTypeName("const uint32_t *")] uint* pMaxPrimitiveCounts,
            AccelerationStructureBuildSizesInfoKHR* pSizeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureBuildSizesKHR")]
        static abstract void GetAccelerationStructureBuildSizesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            AccelerationStructureBuildTypeKHR buildType,
            [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
                Ref<AccelerationStructureBuildGeometryInfoKHR> pBuildInfo,
            [NativeTypeName("const uint32_t *")] Ref<uint> pMaxPrimitiveCounts,
            Ref<AccelerationStructureBuildSizesInfoKHR> pSizeInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureDeviceAddressKHR")]
        static abstract ulong GetAccelerationStructureDeviceAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureDeviceAddressInfoKHR *")]
                AccelerationStructureDeviceAddressInfoKHR* pInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureDeviceAddressKHR")]
        static abstract ulong GetAccelerationStructureDeviceAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureDeviceAddressInfoKHR *")]
                Ref<AccelerationStructureDeviceAddressInfoKHR> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureHandleNV")]
        static abstract Result GetAccelerationStructureHandleNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkAccelerationStructureNV")]
                AccelerationStructureNVHandle accelerationStructure,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureHandleNV")]
        static abstract Result GetAccelerationStructureHandleNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkAccelerationStructureNV")]
                AccelerationStructureNVHandle accelerationStructure,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureMemoryRequirementsNV")]
        static abstract void GetAccelerationStructureMemoryRequirementsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureMemoryRequirementsInfoNV *")]
                AccelerationStructureMemoryRequirementsInfoNV* pInfo,
            [NativeTypeName("VkMemoryRequirements2KHR *")] MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureMemoryRequirementsNV")]
        static abstract void GetAccelerationStructureMemoryRequirementsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureMemoryRequirementsInfoNV *")]
                Ref<AccelerationStructureMemoryRequirementsInfoNV> pInfo,
            [NativeTypeName("VkMemoryRequirements2KHR *")]
                Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_EXT_descriptor_buffer+VK_KHR_acceleration_structure",
                "VK_EXT_descriptor_buffer+VK_NV_ray_tracing",
            ],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT"
        )]
        static abstract Result GetAccelerationStructureOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureCaptureDescriptorDataInfoEXT *")]
                AccelerationStructureCaptureDescriptorDataInfoEXT* pInfo,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_EXT_descriptor_buffer+VK_KHR_acceleration_structure",
                "VK_EXT_descriptor_buffer+VK_NV_ray_tracing",
            ],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT"
        )]
        static abstract Result GetAccelerationStructureOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureCaptureDescriptorDataInfoEXT *")]
                Ref<AccelerationStructureCaptureDescriptorDataInfoEXT> pInfo,
            Ref pData
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddress")]
        static abstract ulong GetBufferDeviceAddress(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddress")]
        static abstract ulong GetBufferDeviceAddress(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_buffer_device_address"],
            ImpliesSets = [
                "VK_EXT_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_EXT_buffer_device_address+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressEXT")]
        static abstract ulong GetBufferDeviceAddressEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_buffer_device_address"],
            ImpliesSets = [
                "VK_EXT_buffer_device_address+VK_KHR_get_physical_device_properties2",
                "VK_EXT_buffer_device_address+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressEXT")]
        static abstract ulong GetBufferDeviceAddressEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_buffer_device_address"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressKHR")]
        static abstract ulong GetBufferDeviceAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_buffer_device_address"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressKHR")]
        static abstract ulong GetBufferDeviceAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements")]
        static abstract void GetBufferMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            MemoryRequirements* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements")]
        static abstract void GetBufferMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkBuffer")] BufferHandle buffer,
            Ref<MemoryRequirements> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2")]
        static abstract void GetBufferMemoryRequirements2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
                BufferMemoryRequirementsInfo2* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2")]
        static abstract void GetBufferMemoryRequirements2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
                Ref<BufferMemoryRequirementsInfo2> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2KHR")]
        static abstract void GetBufferMemoryRequirements2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
                BufferMemoryRequirementsInfo2* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2KHR")]
        static abstract void GetBufferMemoryRequirements2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
                Ref<BufferMemoryRequirementsInfo2> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddress")]
        static abstract ulong GetBufferOpaqueCaptureAddress(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddress")]
        static abstract ulong GetBufferOpaqueCaptureAddress(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_buffer_device_address"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddressKHR")]
        static abstract ulong GetBufferOpaqueCaptureAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_buffer_device_address"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddressKHR")]
        static abstract ulong GetBufferOpaqueCaptureAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetBufferOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferCaptureDescriptorDataInfoEXT *")]
                BufferCaptureDescriptorDataInfoEXT* pInfo,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetBufferOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkBufferCaptureDescriptorDataInfoEXT *")]
                Ref<BufferCaptureDescriptorDataInfoEXT> pInfo,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_calibrated_timestamps"],
            ImpliesSets = [
                "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsEXT")]
        static abstract Result GetCalibratedTimestampsEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint timestampCount,
            [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
                CalibratedTimestampInfoKHR* pTimestampInfos,
            [NativeTypeName("uint64_t *")] ulong* pTimestamps,
            [NativeTypeName("uint64_t *")] ulong* pMaxDeviation
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_calibrated_timestamps"],
            ImpliesSets = [
                "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsEXT")]
        static abstract Result GetCalibratedTimestampsEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint timestampCount,
            [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
                Ref<CalibratedTimestampInfoKHR> pTimestampInfos,
            [NativeTypeName("uint64_t *")] Ref<ulong> pTimestamps,
            [NativeTypeName("uint64_t *")] Ref<ulong> pMaxDeviation
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_calibrated_timestamps"],
            ImpliesSets = [
                "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsKHR")]
        static abstract Result GetCalibratedTimestampsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint timestampCount,
            [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
                CalibratedTimestampInfoKHR* pTimestampInfos,
            [NativeTypeName("uint64_t *")] ulong* pTimestamps,
            [NativeTypeName("uint64_t *")] ulong* pMaxDeviation
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_calibrated_timestamps"],
            ImpliesSets = [
                "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsKHR")]
        static abstract Result GetCalibratedTimestampsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint timestampCount,
            [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
                Ref<CalibratedTimestampInfoKHR> pTimestampInfos,
            [NativeTypeName("uint64_t *")] Ref<ulong> pTimestamps,
            [NativeTypeName("uint64_t *")] Ref<ulong> pMaxDeviation
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cluster_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetClusterAccelerationStructureBuildSizesNV")]
        static abstract void GetClusterAccelerationStructureBuildSizesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkClusterAccelerationStructureInputInfoNV *")]
                ClusterAccelerationStructureInputInfoNV* pInfo,
            AccelerationStructureBuildSizesInfoKHR* pSizeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cluster_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetClusterAccelerationStructureBuildSizesNV")]
        static abstract void GetClusterAccelerationStructureBuildSizesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkClusterAccelerationStructureInputInfoNV *")]
                Ref<ClusterAccelerationStructureInputInfoNV> pInfo,
            Ref<AccelerationStructureBuildSizesInfoKHR> pSizeInfo
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetCudaModuleCacheNV")]
        static abstract Result GetCudaModuleCacheNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
            [NativeTypeName("size_t *")] nuint* pCacheSize,
            void* pCacheData
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetCudaModuleCacheNV")]
        static abstract Result GetCudaModuleCacheNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
            [NativeTypeName("size_t *")] Ref<nuint> pCacheSize,
            Ref pCacheData
        );

        [return: NativeTypeName("uint32_t")]
        [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeferredOperationMaxConcurrencyKHR")]
        static abstract uint GetDeferredOperationMaxConcurrencyKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeferredOperationResultKHR")]
        static abstract Result GetDeferredOperationResultKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorEXT")]
        static abstract void GetDescriptorEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorGetInfoEXT *")]
                DescriptorGetInfoEXT* pDescriptorInfo,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pDescriptor
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorEXT")]
        static abstract void GetDescriptorEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorGetInfoEXT *")]
                Ref<DescriptorGetInfoEXT> pDescriptorInfo,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pDescriptor
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VALVE_descriptor_set_host_mapping"],
            ImpliesSets = [
                "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
                "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetHostMappingVALVE")]
        static abstract void GetDescriptorSetHostMappingValve(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
            void** ppData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VALVE_descriptor_set_host_mapping"],
            ImpliesSets = [
                "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
                "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetHostMappingVALVE")]
        static abstract void GetDescriptorSetHostMappingValve(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
            Ref2D ppData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutBindingOffsetEXT")]
        static abstract void GetDescriptorSetLayoutBindingOffsetEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint binding,
            [NativeTypeName("VkDeviceSize *")] ulong* pOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutBindingOffsetEXT")]
        static abstract void GetDescriptorSetLayoutBindingOffsetEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
            [NativeTypeName("uint32_t")] uint binding,
            [NativeTypeName("VkDeviceSize *")] Ref<ulong> pOffset
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VALVE_descriptor_set_host_mapping"],
            ImpliesSets = [
                "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
                "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutHostMappingInfoVALVE")]
        static abstract void GetDescriptorSetLayoutHostMappingInfoValve(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetBindingReferenceVALVE *")]
                DescriptorSetBindingReferenceValve* pBindingReference,
            DescriptorSetLayoutHostMappingInfoValve* pHostMapping
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VALVE_descriptor_set_host_mapping"],
            ImpliesSets = [
                "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
                "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutHostMappingInfoVALVE")]
        static abstract void GetDescriptorSetLayoutHostMappingInfoValve(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetBindingReferenceVALVE *")]
                Ref<DescriptorSetBindingReferenceValve> pBindingReference,
            Ref<DescriptorSetLayoutHostMappingInfoValve> pHostMapping
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSizeEXT")]
        static abstract void GetDescriptorSetLayoutSizeEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
            [NativeTypeName("VkDeviceSize *")] ulong* pLayoutSizeInBytes
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSizeEXT")]
        static abstract void GetDescriptorSetLayoutSizeEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
            [NativeTypeName("VkDeviceSize *")] Ref<ulong> pLayoutSizeInBytes
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupport")]
        static abstract void GetDescriptorSetLayoutSupport(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
                DescriptorSetLayoutCreateInfo* pCreateInfo,
            DescriptorSetLayoutSupport* pSupport
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupport")]
        static abstract void GetDescriptorSetLayoutSupport(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
                Ref<DescriptorSetLayoutCreateInfo> pCreateInfo,
            Ref<DescriptorSetLayoutSupport> pSupport
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance3"],
            ImpliesSets = [
                "VK_KHR_maintenance3+VK_KHR_get_physical_device_properties2",
                "VK_KHR_maintenance3+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupportKHR")]
        static abstract void GetDescriptorSetLayoutSupportKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
                DescriptorSetLayoutCreateInfo* pCreateInfo,
            DescriptorSetLayoutSupport* pSupport
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance3"],
            ImpliesSets = [
                "VK_KHR_maintenance3+VK_KHR_get_physical_device_properties2",
                "VK_KHR_maintenance3+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupportKHR")]
        static abstract void GetDescriptorSetLayoutSupportKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
                Ref<DescriptorSetLayoutCreateInfo> pCreateInfo,
            Ref<DescriptorSetLayoutSupport> pSupport
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceAccelerationStructureCompatibilityKHR")]
        static abstract void GetDeviceAccelerationStructureCompatibilityKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureVersionInfoKHR *")]
                AccelerationStructureVersionInfoKHR* pVersionInfo,
            AccelerationStructureCompatibilityKHR* pCompatibility
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceAccelerationStructureCompatibilityKHR")]
        static abstract void GetDeviceAccelerationStructureCompatibilityKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkAccelerationStructureVersionInfoKHR *")]
                Ref<AccelerationStructureVersionInfoKHR> pVersionInfo,
            Ref<AccelerationStructureCompatibilityKHR> pCompatibility
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirements")]
        static abstract void GetDeviceBufferMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
                DeviceBufferMemoryRequirements* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirements")]
        static abstract void GetDeviceBufferMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
                Ref<DeviceBufferMemoryRequirements> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirementsKHR")]
        static abstract void GetDeviceBufferMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
                DeviceBufferMemoryRequirements* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirementsKHR")]
        static abstract void GetDeviceBufferMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
                Ref<DeviceBufferMemoryRequirements> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_fault"],
            ImpliesSets = [
                "VK_EXT_device_fault+VK_KHR_get_physical_device_properties2",
                "VK_EXT_device_fault+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceFaultInfoEXT")]
        static abstract Result GetDeviceFaultInfoEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            DeviceFaultCountsEXT* pFaultCounts,
            DeviceFaultInfoEXT* pFaultInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_fault"],
            ImpliesSets = [
                "VK_EXT_device_fault+VK_KHR_get_physical_device_properties2",
                "VK_EXT_device_fault+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceFaultInfoEXT")]
        static abstract Result GetDeviceFaultInfoEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            Ref<DeviceFaultCountsEXT> pFaultCounts,
            Ref<DeviceFaultInfoEXT> pFaultInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeatures")]
        static abstract void GetDeviceGroupPeerMemoryFeatures(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint heapIndex,
            [NativeTypeName("uint32_t")] uint localDeviceIndex,
            [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
            [NativeTypeName("VkPeerMemoryFeatureFlags *")] uint* pPeerMemoryFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeatures")]
        static abstract void GetDeviceGroupPeerMemoryFeatures(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint heapIndex,
            [NativeTypeName("uint32_t")] uint localDeviceIndex,
            [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
            [NativeTypeName("VkPeerMemoryFeatureFlags *")] Ref<uint> pPeerMemoryFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_device_group"],
            ImpliesSets = ["VK_KHR_device_group_creation"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeaturesKHR")]
        static abstract void GetDeviceGroupPeerMemoryFeaturesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint heapIndex,
            [NativeTypeName("uint32_t")] uint localDeviceIndex,
            [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
            [NativeTypeName("VkPeerMemoryFeatureFlags *")] uint* pPeerMemoryFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_device_group"],
            ImpliesSets = ["VK_KHR_device_group_creation"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeaturesKHR")]
        static abstract void GetDeviceGroupPeerMemoryFeaturesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint heapIndex,
            [NativeTypeName("uint32_t")] uint localDeviceIndex,
            [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
            [NativeTypeName("VkPeerMemoryFeatureFlags *")] Ref<uint> pPeerMemoryFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPresentCapabilitiesKHR")]
        static abstract Result GetDeviceGroupPresentCapabilitiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            DeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPresentCapabilitiesKHR")]
        static abstract Result GetDeviceGroupPresentCapabilitiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            Ref<DeviceGroupPresentCapabilitiesKHR> pDeviceGroupPresentCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupSurfacePresentModesKHR")]
        static abstract Result GetDeviceGroupSurfacePresentModesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("VkDeviceGroupPresentModeFlagsKHR *")] uint* pModes
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupSurfacePresentModesKHR")]
        static abstract Result GetDeviceGroupSurfacePresentModesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("VkDeviceGroupPresentModeFlagsKHR *")] Ref<uint> pModes
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirements")]
        static abstract void GetDeviceImageMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                DeviceImageMemoryRequirements* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirements")]
        static abstract void GetDeviceImageMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                Ref<DeviceImageMemoryRequirements> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirementsKHR")]
        static abstract void GetDeviceImageMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                DeviceImageMemoryRequirements* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirementsKHR")]
        static abstract void GetDeviceImageMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                Ref<DeviceImageMemoryRequirements> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirements")]
        static abstract void GetDeviceImageSparseMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                DeviceImageMemoryRequirements* pInfo,
            [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
            SparseImageMemoryRequirements2* pSparseMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirements")]
        static abstract void GetDeviceImageSparseMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                Ref<DeviceImageMemoryRequirements> pInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
            Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirementsKHR")]
        static abstract void GetDeviceImageSparseMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                DeviceImageMemoryRequirements* pInfo,
            [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
            SparseImageMemoryRequirements2* pSparseMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirementsKHR")]
        static abstract void GetDeviceImageSparseMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
                Ref<DeviceImageMemoryRequirements> pInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
            Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayout")]
        static abstract void GetDeviceImageSubresourceLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageSubresourceInfo *")]
                DeviceImageSubresourceInfo* pInfo,
            SubresourceLayout2* pLayout
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayout")]
        static abstract void GetDeviceImageSubresourceLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageSubresourceInfo *")]
                Ref<DeviceImageSubresourceInfo> pInfo,
            Ref<SubresourceLayout2> pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance5"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayoutKHR")]
        static abstract void GetDeviceImageSubresourceLayoutKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageSubresourceInfo *")]
                DeviceImageSubresourceInfo* pInfo,
            SubresourceLayout2* pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance5"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayoutKHR")]
        static abstract void GetDeviceImageSubresourceLayoutKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceImageSubresourceInfo *")]
                Ref<DeviceImageSubresourceInfo> pInfo,
            Ref<SubresourceLayout2> pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryCommitment")]
        static abstract void GetDeviceMemoryCommitment(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("VkDeviceSize *")] ulong* pCommittedMemoryInBytes
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryCommitment")]
        static abstract void GetDeviceMemoryCommitment(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("VkDeviceSize *")] Ref<ulong> pCommittedMemoryInBytes
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddress")]
        static abstract ulong GetDeviceMemoryOpaqueCaptureAddress(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
                DeviceMemoryOpaqueCaptureAddressInfo* pInfo
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddress")]
        static abstract ulong GetDeviceMemoryOpaqueCaptureAddress(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
                Ref<DeviceMemoryOpaqueCaptureAddressInfo> pInfo
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_buffer_device_address"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddressKHR")]
        static abstract ulong GetDeviceMemoryOpaqueCaptureAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
                DeviceMemoryOpaqueCaptureAddressInfo* pInfo
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_buffer_device_address"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddressKHR")]
        static abstract ulong GetDeviceMemoryOpaqueCaptureAddressKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
                Ref<DeviceMemoryOpaqueCaptureAddressInfo> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMicromapCompatibilityEXT")]
        static abstract void GetDeviceMicromapCompatibilityEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMicromapVersionInfoEXT *")]
                MicromapVersionInfoEXT* pVersionInfo,
            AccelerationStructureCompatibilityKHR* pCompatibility
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMicromapCompatibilityEXT")]
        static abstract void GetDeviceMicromapCompatibilityEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMicromapVersionInfoEXT *")]
                Ref<MicromapVersionInfoEXT> pVersionInfo,
            Ref<AccelerationStructureCompatibilityKHR> pCompatibility
        );

        [return: NativeTypeName("PFN_vkVoidFunction")]
        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceProcAddr")]
        static abstract PFNVkVoidFunction GetDeviceProcAddr(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const char *")] sbyte* pName
        );

        [return: NativeTypeName("PFN_vkVoidFunction")]
        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceProcAddr")]
        static abstract PFNVkVoidFunction GetDeviceProcAddr(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const char *")] Ref<sbyte> pName
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue")]
        static abstract void GetDeviceQueue(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint queueFamilyIndex,
            [NativeTypeName("uint32_t")] uint queueIndex,
            [NativeTypeName("VkQueue *")] QueueHandle* pQueue
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue")]
        static abstract void GetDeviceQueue(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint queueFamilyIndex,
            [NativeTypeName("uint32_t")] uint queueIndex,
            [NativeTypeName("VkQueue *")] Ref<QueueHandle> pQueue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue2")]
        static abstract void GetDeviceQueue2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceQueueInfo2 *")] DeviceQueueInfo2* pQueueInfo,
            [NativeTypeName("VkQueue *")] QueueHandle* pQueue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue2")]
        static abstract void GetDeviceQueue2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceQueueInfo2 *")] Ref<DeviceQueueInfo2> pQueueInfo,
            [NativeTypeName("VkQueue *")] Ref<QueueHandle> pQueue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_HUAWEI_subpass_shading"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_create_renderpass2",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI")]
        static abstract Result GetDeviceSubpassShadingMaxWorkgroupSizeHuawei(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkRenderPass")] RenderPassHandle renderpass,
            Extent2D* pMaxWorkgroupSize
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_HUAWEI_subpass_shading"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_create_renderpass2",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI")]
        static abstract Result GetDeviceSubpassShadingMaxWorkgroupSizeHuawei(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkRenderPass")] RenderPassHandle renderpass,
            Ref<Extent2D> pMaxWorkgroupSize
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModeProperties2KHR")]
        static abstract Result GetDisplayModeProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            DisplayModeProperties2KHR* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModeProperties2KHR")]
        static abstract Result GetDisplayModeProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<DisplayModeProperties2KHR> pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModePropertiesKHR")]
        static abstract Result GetDisplayModePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            DisplayModePropertiesKHR* pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModePropertiesKHR")]
        static abstract Result GetDisplayModePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<DisplayModePropertiesKHR> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilities2KHR")]
        static abstract Result GetDisplayPlaneCapabilities2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkDisplayPlaneInfo2KHR *")]
                DisplayPlaneInfo2KHR* pDisplayPlaneInfo,
            DisplayPlaneCapabilities2KHR* pCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilities2KHR")]
        static abstract Result GetDisplayPlaneCapabilities2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkDisplayPlaneInfo2KHR *")]
                Ref<DisplayPlaneInfo2KHR> pDisplayPlaneInfo,
            Ref<DisplayPlaneCapabilities2KHR> pCapabilities
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilitiesKHR")]
        static abstract Result GetDisplayPlaneCapabilitiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayModeKHR")] DisplayModeKHRHandle mode,
            [NativeTypeName("uint32_t")] uint planeIndex,
            DisplayPlaneCapabilitiesKHR* pCapabilities
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilitiesKHR")]
        static abstract Result GetDisplayPlaneCapabilitiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayModeKHR")] DisplayModeKHRHandle mode,
            [NativeTypeName("uint32_t")] uint planeIndex,
            Ref<DisplayPlaneCapabilitiesKHR> pCapabilities
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneSupportedDisplaysKHR")]
        static abstract Result GetDisplayPlaneSupportedDisplaysKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t")] uint planeIndex,
            [NativeTypeName("uint32_t *")] uint* pDisplayCount,
            [NativeTypeName("VkDisplayKHR *")] DisplayKHRHandle* pDisplays
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneSupportedDisplaysKHR")]
        static abstract Result GetDisplayPlaneSupportedDisplaysKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t")] uint planeIndex,
            [NativeTypeName("uint32_t *")] Ref<uint> pDisplayCount,
            [NativeTypeName("VkDisplayKHR *")] Ref<DisplayKHRHandle> pDisplays
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_acquire_drm_display"],
            ImpliesSets = ["VK_EXT_direct_mode_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDrmDisplayEXT")]
        static abstract Result GetDrmDisplayEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("int32_t")] int drmFd,
            [NativeTypeName("uint32_t")] uint connectorId,
            [NativeTypeName("VkDisplayKHR *")] DisplayKHRHandle* display
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_acquire_drm_display"],
            ImpliesSets = ["VK_EXT_direct_mode_display"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDrmDisplayEXT")]
        static abstract Result GetDrmDisplayEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("int32_t")] int drmFd,
            [NativeTypeName("uint32_t")] uint connectorId,
            [NativeTypeName("VkDisplayKHR *")] Ref<DisplayKHRHandle> display
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_properties"],
            ImpliesSets = [
                "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_properties+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetDynamicRenderingTilePropertiesQCOM")]
        static abstract Result GetDynamicRenderingTilePropertiesQCOM(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderingInfo *")] RenderingInfo* pRenderingInfo,
            TilePropertiesQCOM* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_properties"],
            ImpliesSets = [
                "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_properties+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetDynamicRenderingTilePropertiesQCOM")]
        static abstract Result GetDynamicRenderingTilePropertiesQCOM(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderingInfo *")] Ref<RenderingInfo> pRenderingInfo,
            Ref<TilePropertiesQCOM> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_encode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetEncodedVideoSessionParametersKHR")]
        static abstract Result GetEncodedVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkVideoEncodeSessionParametersGetInfoKHR *")]
                VideoEncodeSessionParametersGetInfoKHR* pVideoSessionParametersInfo,
            VideoEncodeSessionParametersFeedbackInfoKHR* pFeedbackInfo,
            [NativeTypeName("size_t *")] nuint* pDataSize,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_encode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetEncodedVideoSessionParametersKHR")]
        static abstract Result GetEncodedVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkVideoEncodeSessionParametersGetInfoKHR *")]
                Ref<VideoEncodeSessionParametersGetInfoKHR> pVideoSessionParametersInfo,
            Ref<VideoEncodeSessionParametersFeedbackInfoKHR> pFeedbackInfo,
            [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetEventStatus")]
        static abstract Result GetEventStatus(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkEvent")] EventHandle @event
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetExternalComputeQueueDataNV")]
        static abstract void GetExternalComputeQueueDataNV(
            [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
            ExternalComputeQueueDataParamsNV* @params,
            void* pData
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetExternalComputeQueueDataNV")]
        static abstract void GetExternalComputeQueueDataNV(
            [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
            Ref<ExternalComputeQueueDataParamsNV> @params,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_fence_fd"],
            ImpliesSets = [
                "VK_KHR_external_fence_fd+VK_KHR_external_fence",
                "VK_KHR_external_fence_fd+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetFenceFdKHR")]
        static abstract Result GetFenceFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkFenceGetFdInfoKHR *")] FenceGetFdInfoKHR* pGetFdInfo,
            int* pFd
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_fence_fd"],
            ImpliesSets = [
                "VK_KHR_external_fence_fd+VK_KHR_external_fence",
                "VK_KHR_external_fence_fd+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetFenceFdKHR")]
        static abstract Result GetFenceFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkFenceGetFdInfoKHR *")] Ref<FenceGetFdInfoKHR> pGetFdInfo,
            Ref<int> pFd
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetFenceStatus")]
        static abstract Result GetFenceStatus(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_properties"],
            ImpliesSets = [
                "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_properties+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetFramebufferTilePropertiesQCOM")]
        static abstract Result GetFramebufferTilePropertiesQCOM(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
            [NativeTypeName("uint32_t *")] uint* pPropertiesCount,
            TilePropertiesQCOM* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_QCOM_tile_properties"],
            ImpliesSets = [
                "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
                "VK_QCOM_tile_properties+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetFramebufferTilePropertiesQCOM")]
        static abstract Result GetFramebufferTilePropertiesQCOM(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertiesCount,
            Ref<TilePropertiesQCOM> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsEXT")]
        static abstract void GetGeneratedCommandsMemoryRequirementsEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoEXT *")]
                GeneratedCommandsMemoryRequirementsInfoEXT* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsEXT")]
        static abstract void GetGeneratedCommandsMemoryRequirementsEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoEXT *")]
                Ref<GeneratedCommandsMemoryRequirementsInfoEXT> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsNV")]
        static abstract void GetGeneratedCommandsMemoryRequirementsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoNV *")]
                GeneratedCommandsMemoryRequirementsInfoNV* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsNV")]
        static abstract void GetGeneratedCommandsMemoryRequirementsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoNV *")]
                Ref<GeneratedCommandsMemoryRequirementsInfoNV> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_image_drm_format_modifier"],
            ImpliesSets = [
                "VK_KHR_image_format_list+VK_KHR_bind_memory2+VK_KHR_get_physical_device_properties2+VK_KHR_sampler_ycbcr_conversion",
                "VK_KHR_image_format_list+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageDrmFormatModifierPropertiesEXT")]
        static abstract Result GetImageDrmFormatModifierPropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            ImageDrmFormatModifierPropertiesEXT* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_image_drm_format_modifier"],
            ImpliesSets = [
                "VK_KHR_image_format_list+VK_KHR_bind_memory2+VK_KHR_get_physical_device_properties2+VK_KHR_sampler_ycbcr_conversion",
                "VK_KHR_image_format_list+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageDrmFormatModifierPropertiesEXT")]
        static abstract Result GetImageDrmFormatModifierPropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            Ref<ImageDrmFormatModifierPropertiesEXT> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements")]
        static abstract void GetImageMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            MemoryRequirements* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements")]
        static abstract void GetImageMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            Ref<MemoryRequirements> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2")]
        static abstract void GetImageMemoryRequirements2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
                ImageMemoryRequirementsInfo2* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2")]
        static abstract void GetImageMemoryRequirements2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
                Ref<ImageMemoryRequirementsInfo2> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2KHR")]
        static abstract void GetImageMemoryRequirements2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
                ImageMemoryRequirementsInfo2* pInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2KHR")]
        static abstract void GetImageMemoryRequirements2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
                Ref<ImageMemoryRequirementsInfo2> pInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetImageOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageCaptureDescriptorDataInfoEXT *")]
                ImageCaptureDescriptorDataInfoEXT* pInfo,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetImageOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageCaptureDescriptorDataInfoEXT *")]
                Ref<ImageCaptureDescriptorDataInfoEXT> pInfo,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements")]
        static abstract void GetImageSparseMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
            SparseImageMemoryRequirements* pSparseMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements")]
        static abstract void GetImageSparseMemoryRequirements(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
            Ref<SparseImageMemoryRequirements> pSparseMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2")]
        static abstract void GetImageSparseMemoryRequirements2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
                ImageSparseMemoryRequirementsInfo2* pInfo,
            [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
            SparseImageMemoryRequirements2* pSparseMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2")]
        static abstract void GetImageSparseMemoryRequirements2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
                Ref<ImageSparseMemoryRequirementsInfo2> pInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
            Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2KHR")]
        static abstract void GetImageSparseMemoryRequirements2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
                ImageSparseMemoryRequirementsInfo2* pInfo,
            [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
            SparseImageMemoryRequirements2* pSparseMemoryRequirements
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2KHR")]
        static abstract void GetImageSparseMemoryRequirements2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
                Ref<ImageSparseMemoryRequirementsInfo2> pInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
            Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout")]
        static abstract void GetImageSubresourceLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource *")] ImageSubresource* pSubresource,
            SubresourceLayout* pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout")]
        static abstract void GetImageSubresourceLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource *")] Ref<ImageSubresource> pSubresource,
            Ref<SubresourceLayout> pLayout
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2")]
        static abstract void GetImageSubresourceLayout2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource2 *")] ImageSubresource2* pSubresource,
            SubresourceLayout2* pLayout
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2")]
        static abstract void GetImageSubresourceLayout2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource2 *")] Ref<ImageSubresource2> pSubresource,
            Ref<SubresourceLayout2> pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2EXT")]
        static abstract void GetImageSubresourceLayout2EXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource2 *")] ImageSubresource2* pSubresource,
            SubresourceLayout2* pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2EXT")]
        static abstract void GetImageSubresourceLayout2EXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource2 *")] Ref<ImageSubresource2> pSubresource,
            Ref<SubresourceLayout2> pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance5"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2KHR")]
        static abstract void GetImageSubresourceLayout2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource2 *")] ImageSubresource2* pSubresource,
            SubresourceLayout2* pLayout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance5"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2KHR")]
        static abstract void GetImageSubresourceLayout2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImage")] ImageHandle image,
            [NativeTypeName("const VkImageSubresource2 *")] Ref<ImageSubresource2> pSubresource,
            Ref<SubresourceLayout2> pLayout
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewAddressNVX")]
        static abstract Result GetImageViewAddressNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImageView")] ImageViewHandle imageView,
            ImageViewAddressPropertiesNVX* pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewAddressNVX")]
        static abstract Result GetImageViewAddressNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkImageView")] ImageViewHandle imageView,
            Ref<ImageViewAddressPropertiesNVX> pProperties
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandle64NVX")]
        static abstract ulong GetImageViewHandle64NVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewHandleInfoNVX *")] ImageViewHandleInfoNVX* pInfo
        );

        [return: NativeTypeName("uint64_t")]
        [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandle64NVX")]
        static abstract ulong GetImageViewHandle64NVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewHandleInfoNVX *")] Ref<ImageViewHandleInfoNVX> pInfo
        );

        [return: NativeTypeName("uint32_t")]
        [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandleNVX")]
        static abstract uint GetImageViewHandleNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewHandleInfoNVX *")] ImageViewHandleInfoNVX* pInfo
        );

        [return: NativeTypeName("uint32_t")]
        [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandleNVX")]
        static abstract uint GetImageViewHandleNVX(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewHandleInfoNVX *")] Ref<ImageViewHandleInfoNVX> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetImageViewOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewCaptureDescriptorDataInfoEXT *")]
                ImageViewCaptureDescriptorDataInfoEXT* pInfo,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetImageViewOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetImageViewOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImageViewCaptureDescriptorDataInfoEXT *")]
                Ref<ImageViewCaptureDescriptorDataInfoEXT> pInfo,
            Ref pData
        );

        [return: NativeTypeName("PFN_vkVoidFunction")]
        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetInstanceProcAddr")]
        static abstract PFNVkVoidFunction GetInstanceProcAddr(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const char *")] sbyte* pName
        );

        [return: NativeTypeName("PFN_vkVoidFunction")]
        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetInstanceProcAddr")]
        static abstract PFNVkVoidFunction GetInstanceProcAddr(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("const char *")] Ref<sbyte> pName
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetLatencyTimingsNV")]
        static abstract void GetLatencyTimingsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            GetLatencyMarkerInfoNV* pLatencyMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetLatencyTimingsNV")]
        static abstract void GetLatencyTimingsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            Ref<GetLatencyMarkerInfoNV> pLatencyMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_memory_fd"],
            ImpliesSets = [
                "VK_KHR_external_memory_fd+VK_KHR_external_memory",
                "VK_KHR_external_memory_fd+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdKHR")]
        static abstract Result GetMemoryFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryGetFdInfoKHR *")] MemoryGetFdInfoKHR* pGetFdInfo,
            int* pFd
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_memory_fd"],
            ImpliesSets = [
                "VK_KHR_external_memory_fd+VK_KHR_external_memory",
                "VK_KHR_external_memory_fd+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdKHR")]
        static abstract Result GetMemoryFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryGetFdInfoKHR *")] Ref<MemoryGetFdInfoKHR> pGetFdInfo,
            Ref<int> pFd
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_memory_fd"],
            ImpliesSets = [
                "VK_KHR_external_memory_fd+VK_KHR_external_memory",
                "VK_KHR_external_memory_fd+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdPropertiesKHR")]
        static abstract Result GetMemoryFdPropertiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
                ExternalMemoryHandleTypeFlags handleType,
            int fd,
            MemoryFdPropertiesKHR* pMemoryFdProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_memory_fd"],
            ImpliesSets = [
                "VK_KHR_external_memory_fd+VK_KHR_external_memory",
                "VK_KHR_external_memory_fd+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdPropertiesKHR")]
        static abstract Result GetMemoryFdPropertiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
                ExternalMemoryHandleTypeFlags handleType,
            int fd,
            Ref<MemoryFdPropertiesKHR> pMemoryFdProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_external_memory_host"],
            ImpliesSets = [
                "VK_EXT_external_memory_host+VK_KHR_external_memory",
                "VK_EXT_external_memory_host+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryHostPointerPropertiesEXT")]
        static abstract Result GetMemoryHostPointerPropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
                ExternalMemoryHandleTypeFlags handleType,
            [NativeTypeName("const void *")] void* pHostPointer,
            MemoryHostPointerPropertiesEXT* pMemoryHostPointerProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_external_memory_host"],
            ImpliesSets = [
                "VK_EXT_external_memory_host+VK_KHR_external_memory",
                "VK_EXT_external_memory_host+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryHostPointerPropertiesEXT")]
        static abstract Result GetMemoryHostPointerPropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
                ExternalMemoryHandleTypeFlags handleType,
            [NativeTypeName("const void *")] Ref pHostPointer,
            Ref<MemoryHostPointerPropertiesEXT> pMemoryHostPointerProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_external_memory_rdma"],
            ImpliesSets = [
                "VK_NV_external_memory_rdma+VK_KHR_external_memory",
                "VK_NV_external_memory_rdma+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryRemoteAddressNV")]
        static abstract Result GetMemoryRemoteAddressNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryGetRemoteAddressInfoNV *")]
                MemoryGetRemoteAddressInfoNV* pMemoryGetRemoteAddressInfo,
            [NativeTypeName("VkRemoteAddressNV *")] void** pAddress
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_external_memory_rdma"],
            ImpliesSets = [
                "VK_NV_external_memory_rdma+VK_KHR_external_memory",
                "VK_NV_external_memory_rdma+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetMemoryRemoteAddressNV")]
        static abstract Result GetMemoryRemoteAddressNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryGetRemoteAddressInfoNV *")]
                Ref<MemoryGetRemoteAddressInfoNV> pMemoryGetRemoteAddressInfo,
            [NativeTypeName("VkRemoteAddressNV *")] Ref2D pAddress
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetMicromapBuildSizesEXT")]
        static abstract void GetMicromapBuildSizesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            AccelerationStructureBuildTypeKHR buildType,
            [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT* pBuildInfo,
            MicromapBuildSizesInfoEXT* pSizeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetMicromapBuildSizesEXT")]
        static abstract void GetMicromapBuildSizesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            AccelerationStructureBuildTypeKHR buildType,
            [NativeTypeName("const VkMicromapBuildInfoEXT *")] Ref<MicromapBuildInfoEXT> pBuildInfo,
            Ref<MicromapBuildSizesInfoEXT> pSizeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_partitioned_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPartitionedAccelerationStructuresBuildSizesNV"
        )]
        static abstract void GetPartitionedAccelerationStructuresBuildSizesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPartitionedAccelerationStructureInstancesInputNV *")]
                PartitionedAccelerationStructureInstancesInputNV* pInfo,
            AccelerationStructureBuildSizesInfoKHR* pSizeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_partitioned_acceleration_structure"],
            ImpliesSets = ["VK_KHR_acceleration_structure"]
        )]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPartitionedAccelerationStructuresBuildSizesNV"
        )]
        static abstract void GetPartitionedAccelerationStructuresBuildSizesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPartitionedAccelerationStructureInstancesInputNV *")]
                Ref<PartitionedAccelerationStructureInstancesInputNV> pInfo,
            Ref<AccelerationStructureBuildSizesInfoKHR> pSizeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_GOOGLE_display_timing"],
            ImpliesSets = ["VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPastPresentationTimingGOOGLE")]
        static abstract Result GetPastPresentationTimingGoogle(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("uint32_t *")] uint* pPresentationTimingCount,
            PastPresentationTimingGoogle* pPresentationTimings
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_GOOGLE_display_timing"],
            ImpliesSets = ["VK_KHR_swapchain"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPastPresentationTimingGOOGLE")]
        static abstract Result GetPastPresentationTimingGoogle(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("uint32_t *")] Ref<uint> pPresentationTimingCount,
            Ref<PastPresentationTimingGoogle> pPresentationTimings
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPerformanceParameterINTEL")]
        static abstract Result GetPerformanceParameterIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            PerformanceParameterTypeIntel parameter,
            PerformanceValueIntel* pValue
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPerformanceParameterINTEL")]
        static abstract Result GetPerformanceParameterIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            PerformanceParameterTypeIntel parameter,
            Ref<PerformanceValueIntel> pValue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_calibrated_timestamps"],
            ImpliesSets = [
                "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT")]
        static abstract Result GetPhysicalDeviceCalibrateableTimeDomainsEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pTimeDomainCount,
            TimeDomainKHR* pTimeDomains
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_calibrated_timestamps"],
            ImpliesSets = [
                "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT")]
        static abstract Result GetPhysicalDeviceCalibrateableTimeDomainsEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pTimeDomainCount,
            Ref<TimeDomainKHR> pTimeDomains
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_calibrated_timestamps"],
            ImpliesSets = [
                "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsKHR")]
        static abstract Result GetPhysicalDeviceCalibrateableTimeDomainsKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pTimeDomainCount,
            TimeDomainKHR* pTimeDomains
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_calibrated_timestamps"],
            ImpliesSets = [
                "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
                "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsKHR")]
        static abstract Result GetPhysicalDeviceCalibrateableTimeDomainsKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pTimeDomainCount,
            Ref<TimeDomainKHR> pTimeDomains
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cooperative_matrix2"],
            ImpliesSets = ["VK_KHR_cooperative_matrix"]
        )]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV"
        )]
        static abstract Result GetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            CooperativeMatrixFlexibleDimensionsPropertiesNV* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cooperative_matrix2"],
            ImpliesSets = ["VK_KHR_cooperative_matrix"]
        )]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV"
        )]
        static abstract Result GetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<CooperativeMatrixFlexibleDimensionsPropertiesNV> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_cooperative_matrix"],
            ImpliesSets = [
                "VK_KHR_cooperative_matrix+VK_KHR_get_physical_device_properties2",
                "VK_KHR_cooperative_matrix+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR")]
        static abstract Result GetPhysicalDeviceCooperativeMatrixPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            CooperativeMatrixPropertiesKHR* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_cooperative_matrix"],
            ImpliesSets = [
                "VK_KHR_cooperative_matrix+VK_KHR_get_physical_device_properties2",
                "VK_KHR_cooperative_matrix+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR")]
        static abstract Result GetPhysicalDeviceCooperativeMatrixPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<CooperativeMatrixPropertiesKHR> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cooperative_matrix"],
            ImpliesSets = [
                "VK_NV_cooperative_matrix+VK_KHR_get_physical_device_properties2",
                "VK_NV_cooperative_matrix+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV")]
        static abstract Result GetPhysicalDeviceCooperativeMatrixPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            CooperativeMatrixPropertiesNV* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_cooperative_matrix"],
            ImpliesSets = [
                "VK_NV_cooperative_matrix+VK_KHR_get_physical_device_properties2",
                "VK_NV_cooperative_matrix+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV")]
        static abstract Result GetPhysicalDeviceCooperativeMatrixPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<CooperativeMatrixPropertiesNV> pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeVectorPropertiesNV")]
        static abstract Result GetPhysicalDeviceCooperativeVectorPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            CooperativeVectorPropertiesNV* pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeVectorPropertiesNV")]
        static abstract Result GetPhysicalDeviceCooperativeVectorPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<CooperativeVectorPropertiesNV> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlaneProperties2KHR")]
        static abstract Result GetPhysicalDeviceDisplayPlaneProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            DisplayPlaneProperties2KHR* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlaneProperties2KHR")]
        static abstract Result GetPhysicalDeviceDisplayPlaneProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<DisplayPlaneProperties2KHR> pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlanePropertiesKHR")]
        static abstract Result GetPhysicalDeviceDisplayPlanePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            DisplayPlanePropertiesKHR* pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlanePropertiesKHR")]
        static abstract Result GetPhysicalDeviceDisplayPlanePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<DisplayPlanePropertiesKHR> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayProperties2KHR")]
        static abstract Result GetPhysicalDeviceDisplayProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            DisplayProperties2KHR* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_display_properties2"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayProperties2KHR")]
        static abstract Result GetPhysicalDeviceDisplayProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<DisplayProperties2KHR> pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPropertiesKHR")]
        static abstract Result GetPhysicalDeviceDisplayPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            DisplayPropertiesKHR* pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPropertiesKHR")]
        static abstract Result GetPhysicalDeviceDisplayPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<DisplayPropertiesKHR> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferProperties")]
        static abstract void GetPhysicalDeviceExternalBufferProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
                PhysicalDeviceExternalBufferInfo* pExternalBufferInfo,
            ExternalBufferProperties* pExternalBufferProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferProperties")]
        static abstract void GetPhysicalDeviceExternalBufferProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
                Ref<PhysicalDeviceExternalBufferInfo> pExternalBufferInfo,
            Ref<ExternalBufferProperties> pExternalBufferProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_memory_capabilities"],
            ImpliesSets = [
                "VK_KHR_external_memory_capabilities+VK_KHR_get_physical_device_properties2",
                "VK_KHR_external_memory_capabilities+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferPropertiesKHR")]
        static abstract void GetPhysicalDeviceExternalBufferPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
                PhysicalDeviceExternalBufferInfo* pExternalBufferInfo,
            ExternalBufferProperties* pExternalBufferProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_memory_capabilities"],
            ImpliesSets = [
                "VK_KHR_external_memory_capabilities+VK_KHR_get_physical_device_properties2",
                "VK_KHR_external_memory_capabilities+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferPropertiesKHR")]
        static abstract void GetPhysicalDeviceExternalBufferPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
                Ref<PhysicalDeviceExternalBufferInfo> pExternalBufferInfo,
            Ref<ExternalBufferProperties> pExternalBufferProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFenceProperties")]
        static abstract void GetPhysicalDeviceExternalFenceProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
                PhysicalDeviceExternalFenceInfo* pExternalFenceInfo,
            ExternalFenceProperties* pExternalFenceProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFenceProperties")]
        static abstract void GetPhysicalDeviceExternalFenceProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
                Ref<PhysicalDeviceExternalFenceInfo> pExternalFenceInfo,
            Ref<ExternalFenceProperties> pExternalFenceProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_fence_capabilities"],
            ImpliesSets = [
                "VK_KHR_external_fence_capabilities+VK_KHR_get_physical_device_properties2",
                "VK_KHR_external_fence_capabilities+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFencePropertiesKHR")]
        static abstract void GetPhysicalDeviceExternalFencePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
                PhysicalDeviceExternalFenceInfo* pExternalFenceInfo,
            ExternalFenceProperties* pExternalFenceProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_fence_capabilities"],
            ImpliesSets = [
                "VK_KHR_external_fence_capabilities+VK_KHR_get_physical_device_properties2",
                "VK_KHR_external_fence_capabilities+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFencePropertiesKHR")]
        static abstract void GetPhysicalDeviceExternalFencePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
                Ref<PhysicalDeviceExternalFenceInfo> pExternalFenceInfo,
            Ref<ExternalFenceProperties> pExternalFenceProperties
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_memory_capabilities"])]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
        )]
        static abstract Result GetPhysicalDeviceExternalImageFormatPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            ImageType type,
            ImageTiling tiling,
            [NativeTypeName("VkImageUsageFlags")] uint usage,
            [NativeTypeName("VkImageCreateFlags")] uint flags,
            [NativeTypeName("VkExternalMemoryHandleTypeFlagsNV")] uint externalHandleType,
            ExternalImageFormatPropertiesNV* pExternalImageFormatProperties
        );

        [SupportedApiProfile("vulkan", ["VK_NV_external_memory_capabilities"])]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
        )]
        static abstract Result GetPhysicalDeviceExternalImageFormatPropertiesNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            ImageType type,
            ImageTiling tiling,
            [NativeTypeName("VkImageUsageFlags")] uint usage,
            [NativeTypeName("VkImageCreateFlags")] uint flags,
            [NativeTypeName("VkExternalMemoryHandleTypeFlagsNV")] uint externalHandleType,
            Ref<ExternalImageFormatPropertiesNV> pExternalImageFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphoreProperties")]
        static abstract void GetPhysicalDeviceExternalSemaphoreProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
                PhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo,
            ExternalSemaphoreProperties* pExternalSemaphoreProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphoreProperties")]
        static abstract void GetPhysicalDeviceExternalSemaphoreProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
                Ref<PhysicalDeviceExternalSemaphoreInfo> pExternalSemaphoreInfo,
            Ref<ExternalSemaphoreProperties> pExternalSemaphoreProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_semaphore_capabilities"],
            ImpliesSets = [
                "VK_KHR_external_semaphore_capabilities+VK_KHR_get_physical_device_properties2",
                "VK_KHR_external_semaphore_capabilities+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR")]
        static abstract void GetPhysicalDeviceExternalSemaphorePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
                PhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo,
            ExternalSemaphoreProperties* pExternalSemaphoreProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_semaphore_capabilities"],
            ImpliesSets = [
                "VK_KHR_external_semaphore_capabilities+VK_KHR_get_physical_device_properties2",
                "VK_KHR_external_semaphore_capabilities+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR")]
        static abstract void GetPhysicalDeviceExternalSemaphorePropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
                Ref<PhysicalDeviceExternalSemaphoreInfo> pExternalSemaphoreInfo,
            Ref<ExternalSemaphoreProperties> pExternalSemaphoreProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures")]
        static abstract void GetPhysicalDeviceFeatures(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceFeatures* pFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures")]
        static abstract void GetPhysicalDeviceFeatures(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceFeatures> pFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2")]
        static abstract void GetPhysicalDeviceFeatures2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceFeatures2* pFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2")]
        static abstract void GetPhysicalDeviceFeatures2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceFeatures2> pFeatures
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2KHR")]
        static abstract void GetPhysicalDeviceFeatures2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceFeatures2* pFeatures
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2KHR")]
        static abstract void GetPhysicalDeviceFeatures2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceFeatures2> pFeatures
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties")]
        static abstract void GetPhysicalDeviceFormatProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            FormatProperties* pFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties")]
        static abstract void GetPhysicalDeviceFormatProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            Ref<FormatProperties> pFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2")]
        static abstract void GetPhysicalDeviceFormatProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            FormatProperties2* pFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2")]
        static abstract void GetPhysicalDeviceFormatProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            Ref<FormatProperties2> pFormatProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2KHR")]
        static abstract void GetPhysicalDeviceFormatProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            FormatProperties2* pFormatProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2KHR")]
        static abstract void GetPhysicalDeviceFormatProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            Ref<FormatProperties2> pFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_fragment_shading_rate"],
            ImpliesSets = [
                "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_create_renderpass2+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFragmentShadingRatesKHR")]
        static abstract Result GetPhysicalDeviceFragmentShadingRatesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pFragmentShadingRateCount,
            PhysicalDeviceFragmentShadingRateKHR* pFragmentShadingRates
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_fragment_shading_rate"],
            ImpliesSets = [
                "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_create_renderpass2+VK_VERSION_1_1",
                "VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFragmentShadingRatesKHR")]
        static abstract Result GetPhysicalDeviceFragmentShadingRatesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pFragmentShadingRateCount,
            Ref<PhysicalDeviceFragmentShadingRateKHR> pFragmentShadingRates
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties")]
        static abstract Result GetPhysicalDeviceImageFormatProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            ImageType type,
            ImageTiling tiling,
            [NativeTypeName("VkImageUsageFlags")] uint usage,
            [NativeTypeName("VkImageCreateFlags")] uint flags,
            ImageFormatProperties* pImageFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties")]
        static abstract Result GetPhysicalDeviceImageFormatProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            ImageType type,
            ImageTiling tiling,
            [NativeTypeName("VkImageUsageFlags")] uint usage,
            [NativeTypeName("VkImageCreateFlags")] uint flags,
            Ref<ImageFormatProperties> pImageFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2")]
        static abstract Result GetPhysicalDeviceImageFormatProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
                PhysicalDeviceImageFormatInfo2* pImageFormatInfo,
            ImageFormatProperties2* pImageFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2")]
        static abstract Result GetPhysicalDeviceImageFormatProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
                Ref<PhysicalDeviceImageFormatInfo2> pImageFormatInfo,
            Ref<ImageFormatProperties2> pImageFormatProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2KHR")]
        static abstract Result GetPhysicalDeviceImageFormatProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
                PhysicalDeviceImageFormatInfo2* pImageFormatInfo,
            ImageFormatProperties2* pImageFormatProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2KHR")]
        static abstract Result GetPhysicalDeviceImageFormatProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
                Ref<PhysicalDeviceImageFormatInfo2> pImageFormatInfo,
            Ref<ImageFormatProperties2> pImageFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties")]
        static abstract void GetPhysicalDeviceMemoryProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceMemoryProperties* pMemoryProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties")]
        static abstract void GetPhysicalDeviceMemoryProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceMemoryProperties> pMemoryProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2")]
        static abstract void GetPhysicalDeviceMemoryProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceMemoryProperties2* pMemoryProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2")]
        static abstract void GetPhysicalDeviceMemoryProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceMemoryProperties2> pMemoryProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2KHR")]
        static abstract void GetPhysicalDeviceMemoryProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceMemoryProperties2* pMemoryProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2KHR")]
        static abstract void GetPhysicalDeviceMemoryProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceMemoryProperties2> pMemoryProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_sample_locations"],
            ImpliesSets = [
                "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
                "VK_EXT_sample_locations+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMultisamplePropertiesEXT")]
        static abstract void GetPhysicalDeviceMultisamplePropertiesEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
            MultisamplePropertiesEXT* pMultisampleProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_sample_locations"],
            ImpliesSets = [
                "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
                "VK_EXT_sample_locations+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMultisamplePropertiesEXT")]
        static abstract void GetPhysicalDeviceMultisamplePropertiesEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
            Ref<MultisamplePropertiesEXT> pMultisampleProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceOpticalFlowImageFormatsNV")]
        static abstract Result GetPhysicalDeviceOpticalFlowImageFormatsNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkOpticalFlowImageFormatInfoNV *")]
                OpticalFlowImageFormatInfoNV* pOpticalFlowImageFormatInfo,
            [NativeTypeName("uint32_t *")] uint* pFormatCount,
            OpticalFlowImageFormatPropertiesNV* pImageFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_optical_flow"],
            ImpliesSets = [
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceOpticalFlowImageFormatsNV")]
        static abstract Result GetPhysicalDeviceOpticalFlowImageFormatsNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkOpticalFlowImageFormatInfoNV *")]
                Ref<OpticalFlowImageFormatInfoNV> pOpticalFlowImageFormatInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pFormatCount,
            Ref<OpticalFlowImageFormatPropertiesNV> pImageFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDevicePresentRectanglesKHR")]
        static abstract Result GetPhysicalDevicePresentRectanglesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("uint32_t *")] uint* pRectCount,
            Rect2D* pRects
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_swapchain", "VK_VERSION_1_1"],
            ImpliesSets = ["VK_KHR_surface"],
            RequireAll = true
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDevicePresentRectanglesKHR")]
        static abstract Result GetPhysicalDevicePresentRectanglesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("uint32_t *")] Ref<uint> pRectCount,
            Ref<Rect2D> pRects
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties")]
        static abstract void GetPhysicalDeviceProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceProperties* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties")]
        static abstract void GetPhysicalDeviceProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceProperties> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2")]
        static abstract void GetPhysicalDeviceProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceProperties2* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2")]
        static abstract void GetPhysicalDeviceProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceProperties2> pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2KHR")]
        static abstract void GetPhysicalDeviceProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            PhysicalDeviceProperties2* pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2KHR")]
        static abstract void GetPhysicalDeviceProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Ref<PhysicalDeviceProperties2> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_performance_query"],
            ImpliesSets = [
                "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
                "VK_KHR_performance_query+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"
        )]
        static abstract void GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkQueryPoolPerformanceCreateInfoKHR *")]
                QueryPoolPerformanceCreateInfoKHR* pPerformanceQueryCreateInfo,
            [NativeTypeName("uint32_t *")] uint* pNumPasses
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_performance_query"],
            ImpliesSets = [
                "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
                "VK_KHR_performance_query+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"
        )]
        static abstract void GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkQueryPoolPerformanceCreateInfoKHR *")]
                Ref<QueryPoolPerformanceCreateInfoKHR> pPerformanceQueryCreateInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pNumPasses
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties")]
        static abstract void GetPhysicalDeviceQueueFamilyProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pQueueFamilyPropertyCount,
            QueueFamilyProperties* pQueueFamilyProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties")]
        static abstract void GetPhysicalDeviceQueueFamilyProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pQueueFamilyPropertyCount,
            Ref<QueueFamilyProperties> pQueueFamilyProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2")]
        static abstract void GetPhysicalDeviceQueueFamilyProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pQueueFamilyPropertyCount,
            QueueFamilyProperties2* pQueueFamilyProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2")]
        static abstract void GetPhysicalDeviceQueueFamilyProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pQueueFamilyPropertyCount,
            Ref<QueueFamilyProperties2> pQueueFamilyProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2KHR")]
        static abstract void GetPhysicalDeviceQueueFamilyProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pQueueFamilyPropertyCount,
            QueueFamilyProperties2* pQueueFamilyProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2KHR")]
        static abstract void GetPhysicalDeviceQueueFamilyProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pQueueFamilyPropertyCount,
            Ref<QueueFamilyProperties2> pQueueFamilyProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties")]
        static abstract void GetPhysicalDeviceSparseImageFormatProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            ImageType type,
            [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
            [NativeTypeName("VkImageUsageFlags")] uint usage,
            ImageTiling tiling,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            SparseImageFormatProperties* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties")]
        static abstract void GetPhysicalDeviceSparseImageFormatProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            Format format,
            ImageType type,
            [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
            [NativeTypeName("VkImageUsageFlags")] uint usage,
            ImageTiling tiling,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<SparseImageFormatProperties> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2")]
        static abstract void GetPhysicalDeviceSparseImageFormatProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
                PhysicalDeviceSparseImageFormatInfo2* pFormatInfo,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            SparseImageFormatProperties2* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2")]
        static abstract void GetPhysicalDeviceSparseImageFormatProperties2(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
                Ref<PhysicalDeviceSparseImageFormatInfo2> pFormatInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<SparseImageFormatProperties2> pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2KHR"
        )]
        static abstract void GetPhysicalDeviceSparseImageFormatProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
                PhysicalDeviceSparseImageFormatInfo2* pFormatInfo,
            [NativeTypeName("uint32_t *")] uint* pPropertyCount,
            SparseImageFormatProperties2* pProperties
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2KHR"
        )]
        static abstract void GetPhysicalDeviceSparseImageFormatProperties2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
                Ref<PhysicalDeviceSparseImageFormatInfo2> pFormatInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
            Ref<SparseImageFormatProperties2> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_coverage_reduction_mode"],
            ImpliesSets = [
                "VK_NV_framebuffer_mixed_samples+VK_KHR_get_physical_device_properties2",
                "VK_NV_framebuffer_mixed_samples+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"
        )]
        static abstract Result GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pCombinationCount,
            FramebufferMixedSamplesCombinationNV* pCombinations
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_coverage_reduction_mode"],
            ImpliesSets = [
                "VK_NV_framebuffer_mixed_samples+VK_KHR_get_physical_device_properties2",
                "VK_NV_framebuffer_mixed_samples+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"
        )]
        static abstract Result GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pCombinationCount,
            Ref<FramebufferMixedSamplesCombinationNV> pCombinations
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_surface_counter"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2EXT")]
        static abstract Result GetPhysicalDeviceSurfaceCapabilities2EXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            SurfaceCapabilities2EXT* pSurfaceCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_surface_counter"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2EXT")]
        static abstract Result GetPhysicalDeviceSurfaceCapabilities2EXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            Ref<SurfaceCapabilities2EXT> pSurfaceCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_surface_capabilities2"],
            ImpliesSets = ["VK_KHR_surface"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2KHR")]
        static abstract Result GetPhysicalDeviceSurfaceCapabilities2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
                PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo,
            SurfaceCapabilities2KHR* pSurfaceCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_surface_capabilities2"],
            ImpliesSets = ["VK_KHR_surface"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2KHR")]
        static abstract Result GetPhysicalDeviceSurfaceCapabilities2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
                Ref<PhysicalDeviceSurfaceInfo2KHR> pSurfaceInfo,
            Ref<SurfaceCapabilities2KHR> pSurfaceCapabilities
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilitiesKHR")]
        static abstract Result GetPhysicalDeviceSurfaceCapabilitiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            SurfaceCapabilitiesKHR* pSurfaceCapabilities
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilitiesKHR")]
        static abstract Result GetPhysicalDeviceSurfaceCapabilitiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            Ref<SurfaceCapabilitiesKHR> pSurfaceCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_surface_capabilities2"],
            ImpliesSets = ["VK_KHR_surface"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormats2KHR")]
        static abstract Result GetPhysicalDeviceSurfaceFormats2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
                PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo,
            [NativeTypeName("uint32_t *")] uint* pSurfaceFormatCount,
            SurfaceFormat2KHR* pSurfaceFormats
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_get_surface_capabilities2"],
            ImpliesSets = ["VK_KHR_surface"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormats2KHR")]
        static abstract Result GetPhysicalDeviceSurfaceFormats2KHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
                Ref<PhysicalDeviceSurfaceInfo2KHR> pSurfaceInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pSurfaceFormatCount,
            Ref<SurfaceFormat2KHR> pSurfaceFormats
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormatsKHR")]
        static abstract Result GetPhysicalDeviceSurfaceFormatsKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("uint32_t *")] uint* pSurfaceFormatCount,
            SurfaceFormatKHR* pSurfaceFormats
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormatsKHR")]
        static abstract Result GetPhysicalDeviceSurfaceFormatsKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("uint32_t *")] Ref<uint> pSurfaceFormatCount,
            Ref<SurfaceFormatKHR> pSurfaceFormats
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfacePresentModesKHR")]
        static abstract Result GetPhysicalDeviceSurfacePresentModesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("uint32_t *")] uint* pPresentModeCount,
            PresentModeKHR* pPresentModes
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfacePresentModesKHR")]
        static abstract Result GetPhysicalDeviceSurfacePresentModesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("uint32_t *")] Ref<uint> pPresentModeCount,
            Ref<PresentModeKHR> pPresentModes
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceSupportKHR")]
        static abstract Result GetPhysicalDeviceSurfaceSupportKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t")] uint queueFamilyIndex,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("VkBool32 *")] uint* pSupported
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceSupportKHR")]
        static abstract Result GetPhysicalDeviceSurfaceSupportKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t")] uint queueFamilyIndex,
            [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
            [NativeTypeName("VkBool32 *")] Ref<uint> pSupported
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolProperties")]
        static abstract Result GetPhysicalDeviceToolProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pToolCount,
            PhysicalDeviceToolProperties* pToolProperties
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolProperties")]
        static abstract Result GetPhysicalDeviceToolProperties(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pToolCount,
            Ref<PhysicalDeviceToolProperties> pToolProperties
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_tooling_info"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolPropertiesEXT")]
        static abstract Result GetPhysicalDeviceToolPropertiesEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] uint* pToolCount,
            PhysicalDeviceToolProperties* pToolProperties
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_tooling_info"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolPropertiesEXT")]
        static abstract Result GetPhysicalDeviceToolPropertiesEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("uint32_t *")] Ref<uint> pToolCount,
            Ref<PhysicalDeviceToolProperties> pToolProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoCapabilitiesKHR")]
        static abstract Result GetPhysicalDeviceVideoCapabilitiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkVideoProfileInfoKHR *")] VideoProfileInfoKHR* pVideoProfile,
            VideoCapabilitiesKHR* pCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoCapabilitiesKHR")]
        static abstract Result GetPhysicalDeviceVideoCapabilitiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkVideoProfileInfoKHR *")]
                Ref<VideoProfileInfoKHR> pVideoProfile,
            Ref<VideoCapabilitiesKHR> pCapabilities
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_encode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR"
        )]
        static abstract Result GetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR *")]
                PhysicalDeviceVideoEncodeQualityLevelInfoKHR* pQualityLevelInfo,
            VideoEncodeQualityLevelPropertiesKHR* pQualityLevelProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_encode_queue"],
            ImpliesSets = [
                "VK_KHR_video_queue+VK_KHR_synchronization2",
                "VK_KHR_video_queue+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction(
            "vulkan",
            EntryPoint = "vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR"
        )]
        static abstract Result GetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR *")]
                Ref<PhysicalDeviceVideoEncodeQualityLevelInfoKHR> pQualityLevelInfo,
            Ref<VideoEncodeQualityLevelPropertiesKHR> pQualityLevelProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoFormatPropertiesKHR")]
        static abstract Result GetPhysicalDeviceVideoFormatPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceVideoFormatInfoKHR *")]
                PhysicalDeviceVideoFormatInfoKHR* pVideoFormatInfo,
            [NativeTypeName("uint32_t *")] uint* pVideoFormatPropertyCount,
            VideoFormatPropertiesKHR* pVideoFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoFormatPropertiesKHR")]
        static abstract Result GetPhysicalDeviceVideoFormatPropertiesKHR(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("const VkPhysicalDeviceVideoFormatInfoKHR *")]
                Ref<PhysicalDeviceVideoFormatInfoKHR> pVideoFormatInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pVideoFormatPropertyCount,
            Ref<VideoFormatPropertiesKHR> pVideoFormatProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineBinaryDataKHR")]
        static abstract Result GetPipelineBinaryDataKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineBinaryDataInfoKHR *")]
                PipelineBinaryDataInfoKHR* pInfo,
            PipelineBinaryKeyKHR* pPipelineBinaryKey,
            [NativeTypeName("size_t *")] nuint* pPipelineBinaryDataSize,
            void* pPipelineBinaryData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineBinaryDataKHR")]
        static abstract Result GetPipelineBinaryDataKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineBinaryDataInfoKHR *")]
                Ref<PipelineBinaryDataInfoKHR> pInfo,
            Ref<PipelineBinaryKeyKHR> pPipelineBinaryKey,
            [NativeTypeName("size_t *")] Ref<nuint> pPipelineBinaryDataSize,
            Ref pPipelineBinaryData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineCacheData")]
        static abstract Result GetPipelineCacheData(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("size_t *")] nuint* pDataSize,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineCacheData")]
        static abstract Result GetPipelineCacheData(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
            [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_executable_properties"],
            ImpliesSets = [
                "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
                "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableInternalRepresentationsKHR")]
        static abstract Result GetPipelineExecutableInternalRepresentationsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
                PipelineExecutableInfoKHR* pExecutableInfo,
            [NativeTypeName("uint32_t *")] uint* pInternalRepresentationCount,
            PipelineExecutableInternalRepresentationKHR* pInternalRepresentations
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_executable_properties"],
            ImpliesSets = [
                "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
                "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableInternalRepresentationsKHR")]
        static abstract Result GetPipelineExecutableInternalRepresentationsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
                Ref<PipelineExecutableInfoKHR> pExecutableInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pInternalRepresentationCount,
            Ref<PipelineExecutableInternalRepresentationKHR> pInternalRepresentations
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_executable_properties"],
            ImpliesSets = [
                "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
                "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutablePropertiesKHR")]
        static abstract Result GetPipelineExecutablePropertiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineInfoKHR *")] PipelineInfoKHR* pPipelineInfo,
            [NativeTypeName("uint32_t *")] uint* pExecutableCount,
            PipelineExecutablePropertiesKHR* pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_executable_properties"],
            ImpliesSets = [
                "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
                "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutablePropertiesKHR")]
        static abstract Result GetPipelineExecutablePropertiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineInfoKHR *")] Ref<PipelineInfoKHR> pPipelineInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pExecutableCount,
            Ref<PipelineExecutablePropertiesKHR> pProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_executable_properties"],
            ImpliesSets = [
                "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
                "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableStatisticsKHR")]
        static abstract Result GetPipelineExecutableStatisticsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
                PipelineExecutableInfoKHR* pExecutableInfo,
            [NativeTypeName("uint32_t *")] uint* pStatisticCount,
            PipelineExecutableStatisticKHR* pStatistics
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_executable_properties"],
            ImpliesSets = [
                "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
                "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableStatisticsKHR")]
        static abstract Result GetPipelineExecutableStatisticsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
                Ref<PipelineExecutableInfoKHR> pExecutableInfo,
            [NativeTypeName("uint32_t *")] Ref<uint> pStatisticCount,
            Ref<PipelineExecutableStatisticKHR> pStatistics
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands_compute"],
            ImpliesSets = ["VK_NV_device_generated_commands"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectDeviceAddressNV")]
        static abstract ulong GetPipelineIndirectDeviceAddressNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineIndirectDeviceAddressInfoNV *")]
                PipelineIndirectDeviceAddressInfoNV* pInfo
        );

        [return: NativeTypeName("VkDeviceAddress")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands_compute"],
            ImpliesSets = ["VK_NV_device_generated_commands"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectDeviceAddressNV")]
        static abstract ulong GetPipelineIndirectDeviceAddressNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineIndirectDeviceAddressInfoNV *")]
                Ref<PipelineIndirectDeviceAddressInfoNV> pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands_compute"],
            ImpliesSets = ["VK_NV_device_generated_commands"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectMemoryRequirementsNV")]
        static abstract void GetPipelineIndirectMemoryRequirementsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkComputePipelineCreateInfo *")]
                ComputePipelineCreateInfo* pCreateInfo,
            MemoryRequirements2* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_generated_commands_compute"],
            ImpliesSets = ["VK_NV_device_generated_commands"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectMemoryRequirementsNV")]
        static abstract void GetPipelineIndirectMemoryRequirementsNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkComputePipelineCreateInfo *")]
                Ref<ComputePipelineCreateInfo> pCreateInfo,
            Ref<MemoryRequirements2> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineKeyKHR")]
        static abstract Result GetPipelineKeyKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineCreateInfoKHR *")]
                PipelineCreateInfoKHR* pPipelineCreateInfo,
            PipelineBinaryKeyKHR* pPipelineKey
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelineKeyKHR")]
        static abstract Result GetPipelineKeyKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineCreateInfoKHR *")]
                Ref<PipelineCreateInfoKHR> pPipelineCreateInfo,
            Ref<PipelineBinaryKeyKHR> pPipelineKey
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_pipeline_properties"],
            ImpliesSets = [
                "VK_EXT_pipeline_properties+VK_KHR_get_physical_device_properties2",
                "VK_EXT_pipeline_properties+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelinePropertiesEXT")]
        static abstract Result GetPipelinePropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineInfoEXT *")] PipelineInfoKHR* pPipelineInfo,
            BaseOutStructure* pPipelineProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_pipeline_properties"],
            ImpliesSets = [
                "VK_EXT_pipeline_properties+VK_KHR_get_physical_device_properties2",
                "VK_EXT_pipeline_properties+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPipelinePropertiesEXT")]
        static abstract Result GetPipelinePropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkPipelineInfoEXT *")] Ref<PipelineInfoKHR> pPipelineInfo,
            Ref<BaseOutStructure> pPipelineProperties
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkGetPrivateData")]
        static abstract void GetPrivateData(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            ObjectType objectType,
            [NativeTypeName("uint64_t")] ulong objectHandle,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("uint64_t *")] ulong* pData
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPrivateData")]
        static abstract void GetPrivateData(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            ObjectType objectType,
            [NativeTypeName("uint64_t")] ulong objectHandle,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("uint64_t *")] Ref<ulong> pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_private_data"],
            ImpliesSets = [
                "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
                "VK_EXT_private_data+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetPrivateDataEXT")]
        static abstract void GetPrivateDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            ObjectType objectType,
            [NativeTypeName("uint64_t")] ulong objectHandle,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("uint64_t *")] ulong* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_private_data"],
            ImpliesSets = [
                "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
                "VK_EXT_private_data+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetPrivateDataEXT")]
        static abstract void GetPrivateDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            ObjectType objectType,
            [NativeTypeName("uint64_t")] ulong objectHandle,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("uint64_t *")] Ref<ulong> pData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetQueryPoolResults")]
        static abstract Result GetQueryPoolResults(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery,
            [NativeTypeName("uint32_t")] uint queryCount,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pData,
            [NativeTypeName("VkDeviceSize")] ulong stride,
            [NativeTypeName("VkQueryResultFlags")] uint flags
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetQueryPoolResults")]
        static abstract Result GetQueryPoolResults(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery,
            [NativeTypeName("uint32_t")] uint queryCount,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pData,
            [NativeTypeName("VkDeviceSize")] ulong stride,
            [NativeTypeName("VkQueryResultFlags")] uint flags
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_synchronization2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_3",
            ],
            ImpliesSets = [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointData2NV")]
        static abstract void GetQueueCheckpointData2NV(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t *")] uint* pCheckpointDataCount,
            CheckpointData2NV* pCheckpointData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_synchronization2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_3",
            ],
            ImpliesSets = [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointData2NV")]
        static abstract void GetQueueCheckpointData2NV(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t *")] Ref<uint> pCheckpointDataCount,
            Ref<CheckpointData2NV> pCheckpointData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_diagnostic_checkpoints"],
            ImpliesSets = [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointDataNV")]
        static abstract void GetQueueCheckpointDataNV(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t *")] uint* pCheckpointDataCount,
            CheckpointDataNV* pCheckpointData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_device_diagnostic_checkpoints"],
            ImpliesSets = [
                "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
                "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointDataNV")]
        static abstract void GetQueueCheckpointDataNV(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t *")] Ref<uint> pCheckpointDataCount,
            Ref<CheckpointDataNV> pCheckpointData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR")]
        static abstract Result GetRayTracingCaptureReplayShaderGroupHandlesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint firstGroup,
            [NativeTypeName("uint32_t")] uint groupCount,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR")]
        static abstract Result GetRayTracingCaptureReplayShaderGroupHandlesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint firstGroup,
            [NativeTypeName("uint32_t")] uint groupCount,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesKHR")]
        static abstract Result GetRayTracingShaderGroupHandlesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint firstGroup,
            [NativeTypeName("uint32_t")] uint groupCount,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesKHR")]
        static abstract Result GetRayTracingShaderGroupHandlesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint firstGroup,
            [NativeTypeName("uint32_t")] uint groupCount,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesNV")]
        static abstract Result GetRayTracingShaderGroupHandlesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint firstGroup,
            [NativeTypeName("uint32_t")] uint groupCount,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_ray_tracing"],
            ImpliesSets = [
                "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
                "VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesNV")]
        static abstract Result GetRayTracingShaderGroupHandlesNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint firstGroup,
            [NativeTypeName("uint32_t")] uint groupCount,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pData
        );

        [return: NativeTypeName("VkDeviceSize")]
        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_ray_tracing_pipeline"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
                "VK_KHR_acceleration_structure+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupStackSizeKHR")]
        static abstract ulong GetRayTracingShaderGroupStackSizeKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("uint32_t")] uint group,
            ShaderGroupShaderKHR groupShader
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_GOOGLE_display_timing"],
            ImpliesSets = ["VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetRefreshCycleDurationGOOGLE")]
        static abstract Result GetRefreshCycleDurationGoogle(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            RefreshCycleDurationGoogle* pDisplayTimingProperties
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_GOOGLE_display_timing"],
            ImpliesSets = ["VK_KHR_swapchain"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetRefreshCycleDurationGOOGLE")]
        static abstract Result GetRefreshCycleDurationGoogle(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            Ref<RefreshCycleDurationGoogle> pDisplayTimingProperties
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetRenderAreaGranularity")]
        static abstract void GetRenderAreaGranularity(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
            Extent2D* pGranularity
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetRenderAreaGranularity")]
        static abstract void GetRenderAreaGranularity(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
            Ref<Extent2D> pGranularity
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularity")]
        static abstract void GetRenderingAreaGranularity(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderingAreaInfo *")] RenderingAreaInfo* pRenderingAreaInfo,
            Extent2D* pGranularity
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularity")]
        static abstract void GetRenderingAreaGranularity(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderingAreaInfo *")]
                Ref<RenderingAreaInfo> pRenderingAreaInfo,
            Ref<Extent2D> pGranularity
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance5"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularityKHR")]
        static abstract void GetRenderingAreaGranularityKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderingAreaInfo *")] RenderingAreaInfo* pRenderingAreaInfo,
            Extent2D* pGranularity
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_maintenance5"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularityKHR")]
        static abstract void GetRenderingAreaGranularityKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkRenderingAreaInfo *")]
                Ref<RenderingAreaInfo> pRenderingAreaInfo,
            Ref<Extent2D> pGranularity
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetSamplerOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetSamplerOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerCaptureDescriptorDataInfoEXT *")]
                SamplerCaptureDescriptorDataInfoEXT* pInfo,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_descriptor_buffer"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
                "VK_KHR_synchronization2+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetSamplerOpaqueCaptureDescriptorDataEXT")]
        static abstract Result GetSamplerOpaqueCaptureDescriptorDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSamplerCaptureDescriptorDataInfoEXT *")]
                Ref<SamplerCaptureDescriptorDataInfoEXT> pInfo,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValue")]
        static abstract Result GetSemaphoreCounterValue(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("uint64_t *")] ulong* pValue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValue")]
        static abstract Result GetSemaphoreCounterValue(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("uint64_t *")] Ref<ulong> pValue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_timeline_semaphore"],
            ImpliesSets = [
                "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
                "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValueKHR")]
        static abstract Result GetSemaphoreCounterValueKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("uint64_t *")] ulong* pValue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_timeline_semaphore"],
            ImpliesSets = [
                "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
                "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValueKHR")]
        static abstract Result GetSemaphoreCounterValueKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
            [NativeTypeName("uint64_t *")] Ref<ulong> pValue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_semaphore_fd"],
            ImpliesSets = [
                "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
                "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreFdKHR")]
        static abstract Result GetSemaphoreFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreGetFdInfoKHR *")] SemaphoreGetFdInfoKHR* pGetFdInfo,
            int* pFd
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_semaphore_fd"],
            ImpliesSets = [
                "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
                "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreFdKHR")]
        static abstract Result GetSemaphoreFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreGetFdInfoKHR *")]
                Ref<SemaphoreGetFdInfoKHR> pGetFdInfo,
            Ref<int> pFd
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderBinaryDataEXT")]
        static abstract Result GetShaderBinaryDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
            [NativeTypeName("size_t *")] nuint* pDataSize,
            void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_object"],
            ImpliesSets = [
                "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
                "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderBinaryDataEXT")]
        static abstract Result GetShaderBinaryDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
            [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
            Ref pData
        );

        [SupportedApiProfile("vulkan", ["VK_AMD_shader_info"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderInfoAMD")]
        static abstract Result GetShaderInfoAMD(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("VkShaderStageFlagBits")] ShaderStageFlags shaderStage,
            ShaderInfoTypeAMD infoType,
            [NativeTypeName("size_t *")] nuint* pInfoSize,
            void* pInfo
        );

        [SupportedApiProfile("vulkan", ["VK_AMD_shader_info"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderInfoAMD")]
        static abstract Result GetShaderInfoAMD(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
            [NativeTypeName("VkShaderStageFlagBits")] ShaderStageFlags shaderStage,
            ShaderInfoTypeAMD infoType,
            [NativeTypeName("size_t *")] Ref<nuint> pInfoSize,
            Ref pInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_module_identifier"],
            ImpliesSets = [
                "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
                "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleCreateInfoIdentifierEXT")]
        static abstract void GetShaderModuleCreateInfoIdentifierEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkShaderModuleCreateInfo *")]
                ShaderModuleCreateInfo* pCreateInfo,
            ShaderModuleIdentifierEXT* pIdentifier
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_module_identifier"],
            ImpliesSets = [
                "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
                "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleCreateInfoIdentifierEXT")]
        static abstract void GetShaderModuleCreateInfoIdentifierEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkShaderModuleCreateInfo *")]
                Ref<ShaderModuleCreateInfo> pCreateInfo,
            Ref<ShaderModuleIdentifierEXT> pIdentifier
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_module_identifier"],
            ImpliesSets = [
                "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
                "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleIdentifierEXT")]
        static abstract void GetShaderModuleIdentifierEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
            ShaderModuleIdentifierEXT* pIdentifier
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_shader_module_identifier"],
            ImpliesSets = [
                "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
                "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleIdentifierEXT")]
        static abstract void GetShaderModuleIdentifierEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
            Ref<ShaderModuleIdentifierEXT> pIdentifier
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainCounterEXT")]
        static abstract Result GetSwapchainCounterEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("VkSurfaceCounterFlagBitsEXT")] SurfaceCounterFlagsEXT counter,
            [NativeTypeName("uint64_t *")] ulong* pCounterValue
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainCounterEXT")]
        static abstract Result GetSwapchainCounterEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("VkSurfaceCounterFlagBitsEXT")] SurfaceCounterFlagsEXT counter,
            [NativeTypeName("uint64_t *")] Ref<ulong> pCounterValue
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainImagesKHR")]
        static abstract Result GetSwapchainImagesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("uint32_t *")] uint* pSwapchainImageCount,
            [NativeTypeName("VkImage *")] ImageHandle* pSwapchainImages
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainImagesKHR")]
        static abstract Result GetSwapchainImagesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("uint32_t *")] Ref<uint> pSwapchainImageCount,
            [NativeTypeName("VkImage *")] Ref<ImageHandle> pSwapchainImages
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_shared_presentable_image"],
            ImpliesSets = [
                "VK_KHR_swapchain+VK_KHR_get_surface_capabilities2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_swapchain+VK_KHR_get_surface_capabilities2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainStatusKHR")]
        static abstract Result GetSwapchainStatusKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [NativeFunction("vulkan", EntryPoint = "vkGetValidationCacheDataEXT")]
        static abstract Result GetValidationCacheDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
            [NativeTypeName("size_t *")] nuint* pDataSize,
            void* pData
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetValidationCacheDataEXT")]
        static abstract Result GetValidationCacheDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
            [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
            Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkGetVideoSessionMemoryRequirementsKHR")]
        static abstract Result GetVideoSessionMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
            [NativeTypeName("uint32_t *")] uint* pMemoryRequirementsCount,
            VideoSessionMemoryRequirementsKHR* pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkGetVideoSessionMemoryRequirementsKHR")]
        static abstract Result GetVideoSessionMemoryRequirementsKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
            [NativeTypeName("uint32_t *")] Ref<uint> pMemoryRequirementsCount,
            Ref<VideoSessionMemoryRequirementsKHR> pMemoryRequirements
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_fence_fd"],
            ImpliesSets = [
                "VK_KHR_external_fence_fd+VK_KHR_external_fence",
                "VK_KHR_external_fence_fd+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkImportFenceFdKHR")]
        static abstract Result ImportFenceFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImportFenceFdInfoKHR *")]
                ImportFenceFdInfoKHR* pImportFenceFdInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_fence_fd"],
            ImpliesSets = [
                "VK_KHR_external_fence_fd+VK_KHR_external_fence",
                "VK_KHR_external_fence_fd+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkImportFenceFdKHR")]
        static abstract Result ImportFenceFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImportFenceFdInfoKHR *")]
                Ref<ImportFenceFdInfoKHR> pImportFenceFdInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_semaphore_fd"],
            ImpliesSets = [
                "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
                "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkImportSemaphoreFdKHR")]
        static abstract Result ImportSemaphoreFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImportSemaphoreFdInfoKHR *")]
                ImportSemaphoreFdInfoKHR* pImportSemaphoreFdInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_external_semaphore_fd"],
            ImpliesSets = [
                "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
                "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkImportSemaphoreFdKHR")]
        static abstract Result ImportSemaphoreFdKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkImportSemaphoreFdInfoKHR *")]
                Ref<ImportSemaphoreFdInfoKHR> pImportSemaphoreFdInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkInitializePerformanceApiINTEL")]
        static abstract Result InitializePerformanceApiIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkInitializePerformanceApiInfoINTEL *")]
                InitializePerformanceApiInfoIntel* pInitializeInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkInitializePerformanceApiINTEL")]
        static abstract Result InitializePerformanceApiIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkInitializePerformanceApiInfoINTEL *")]
                Ref<InitializePerformanceApiInfoIntel> pInitializeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkInvalidateMappedMemoryRanges")]
        static abstract Result InvalidateMappedMemoryRanges(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint memoryRangeCount,
            [NativeTypeName("const VkMappedMemoryRange *")] MappedMemoryRange* pMemoryRanges
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkInvalidateMappedMemoryRanges")]
        static abstract Result InvalidateMappedMemoryRanges(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint memoryRangeCount,
            [NativeTypeName("const VkMappedMemoryRange *")] Ref<MappedMemoryRange> pMemoryRanges
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkLatencySleepNV")]
        static abstract Result LatencySleepNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkLatencySleepInfoNV *")] LatencySleepInfoNV* pSleepInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkLatencySleepNV")]
        static abstract Result LatencySleepNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkLatencySleepInfoNV *")] Ref<LatencySleepInfoNV> pSleepInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkMapMemory")]
        static abstract Result MapMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkDeviceSize")] ulong size,
            [NativeTypeName("VkMemoryMapFlags")] uint flags,
            void** ppData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkMapMemory")]
        static abstract Result MapMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            [NativeTypeName("VkDeviceSize")] ulong offset,
            [NativeTypeName("VkDeviceSize")] ulong size,
            [NativeTypeName("VkMemoryMapFlags")] uint flags,
            Ref2D ppData
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkMapMemory2")]
        static abstract Result MapMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryMapInfo *")] MemoryMapInfo* pMemoryMapInfo,
            void** ppData
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkMapMemory2")]
        static abstract Result MapMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryMapInfo *")] Ref<MemoryMapInfo> pMemoryMapInfo,
            Ref2D ppData
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
        [NativeFunction("vulkan", EntryPoint = "vkMapMemory2KHR")]
        static abstract Result MapMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryMapInfo *")] MemoryMapInfo* pMemoryMapInfo,
            void** ppData
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkMapMemory2KHR")]
        static abstract Result MapMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryMapInfo *")] Ref<MemoryMapInfo> pMemoryMapInfo,
            Ref2D ppData
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkMergePipelineCaches")]
        static abstract Result MergePipelineCaches(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle dstCache,
            [NativeTypeName("uint32_t")] uint srcCacheCount,
            [NativeTypeName("const VkPipelineCache *")] PipelineCacheHandle* pSrcCaches
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkMergePipelineCaches")]
        static abstract Result MergePipelineCaches(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPipelineCache")] PipelineCacheHandle dstCache,
            [NativeTypeName("uint32_t")] uint srcCacheCount,
            [NativeTypeName("const VkPipelineCache *")] Ref<PipelineCacheHandle> pSrcCaches
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [NativeFunction("vulkan", EntryPoint = "vkMergeValidationCachesEXT")]
        static abstract Result MergeValidationCachesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle dstCache,
            [NativeTypeName("uint32_t")] uint srcCacheCount,
            [NativeTypeName("const VkValidationCacheEXT *")] ValidationCacheEXTHandle* pSrcCaches
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkMergeValidationCachesEXT")]
        static abstract Result MergeValidationCachesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle dstCache,
            [NativeTypeName("uint32_t")] uint srcCacheCount,
            [NativeTypeName("const VkValidationCacheEXT *")]
                Ref<ValidationCacheEXTHandle> pSrcCaches
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkQueueBeginDebugUtilsLabelEXT")]
        static abstract void QueueBeginDebugUtilsLabelEXT(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueueBeginDebugUtilsLabelEXT")]
        static abstract void QueueBeginDebugUtilsLabelEXT(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkQueueBindSparse")]
        static abstract Result QueueBindSparse(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindSparseInfo *")] BindSparseInfo* pBindInfo,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueueBindSparse")]
        static abstract Result QueueBindSparse(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint bindInfoCount,
            [NativeTypeName("const VkBindSparseInfo *")] Ref<BindSparseInfo> pBindInfo,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkQueueEndDebugUtilsLabelEXT")]
        static abstract void QueueEndDebugUtilsLabelEXT(
            [NativeTypeName("VkQueue")] QueueHandle queue
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkQueueInsertDebugUtilsLabelEXT")]
        static abstract void QueueInsertDebugUtilsLabelEXT(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueueInsertDebugUtilsLabelEXT")]
        static abstract void QueueInsertDebugUtilsLabelEXT(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkQueueNotifyOutOfBandNV")]
        static abstract void QueueNotifyOutOfBandNV(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkOutOfBandQueueTypeInfoNV *")]
                OutOfBandQueueTypeInfoNV* pQueueTypeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueueNotifyOutOfBandNV")]
        static abstract void QueueNotifyOutOfBandNV(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkOutOfBandQueueTypeInfoNV *")]
                Ref<OutOfBandQueueTypeInfoNV> pQueueTypeInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [NativeFunction("vulkan", EntryPoint = "vkQueuePresentKHR")]
        static abstract Result QueuePresentKHR(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkPresentInfoKHR *")] PresentInfoKHR* pPresentInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueuePresentKHR")]
        static abstract Result QueuePresentKHR(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("const VkPresentInfoKHR *")] Ref<PresentInfoKHR> pPresentInfo
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkQueueSetPerformanceConfigurationINTEL")]
        static abstract Result QueueSetPerformanceConfigurationIntel(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("VkPerformanceConfigurationINTEL")]
                PerformanceConfigurationIntelHandle configuration
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit")]
        static abstract Result QueueSubmit(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint submitCount,
            [NativeTypeName("const VkSubmitInfo *")] SubmitInfo* pSubmits,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit")]
        static abstract Result QueueSubmit(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint submitCount,
            [NativeTypeName("const VkSubmitInfo *")] Ref<SubmitInfo> pSubmits,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2")]
        static abstract Result QueueSubmit2(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint submitCount,
            [NativeTypeName("const VkSubmitInfo2 *")] SubmitInfo2* pSubmits,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2")]
        static abstract Result QueueSubmit2(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint submitCount,
            [NativeTypeName("const VkSubmitInfo2 *")] Ref<SubmitInfo2> pSubmits,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2KHR")]
        static abstract Result QueueSubmit2KHR(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint submitCount,
            [NativeTypeName("const VkSubmitInfo2 *")] SubmitInfo2* pSubmits,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_synchronization2"],
            ImpliesSets = [
                "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_synchronization2+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2KHR")]
        static abstract Result QueueSubmit2KHR(
            [NativeTypeName("VkQueue")] QueueHandle queue,
            [NativeTypeName("uint32_t")] uint submitCount,
            [NativeTypeName("const VkSubmitInfo2 *")] Ref<SubmitInfo2> pSubmits,
            [NativeTypeName("VkFence")] FenceHandle fence
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkQueueWaitIdle")]
        static abstract Result QueueWaitIdle([NativeTypeName("VkQueue")] QueueHandle queue);

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkRegisterDeviceEventEXT")]
        static abstract Result RegisterDeviceEventEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceEventInfoEXT *")] DeviceEventInfoEXT* pDeviceEventInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkFence *")] FenceHandle* pFence
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkRegisterDeviceEventEXT")]
        static abstract Result RegisterDeviceEventEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDeviceEventInfoEXT *")]
                Ref<DeviceEventInfoEXT> pDeviceEventInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkFence *")] Ref<FenceHandle> pFence
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkRegisterDisplayEventEXT")]
        static abstract Result RegisterDisplayEventEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("const VkDisplayEventInfoEXT *")]
                DisplayEventInfoEXT* pDisplayEventInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
            [NativeTypeName("VkFence *")] FenceHandle* pFence
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_display_control"],
            ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkRegisterDisplayEventEXT")]
        static abstract Result RegisterDisplayEventEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
            [NativeTypeName("const VkDisplayEventInfoEXT *")]
                Ref<DisplayEventInfoEXT> pDisplayEventInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
            [NativeTypeName("VkFence *")] Ref<FenceHandle> pFence
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkReleaseCapturedPipelineDataKHR")]
        static abstract Result ReleaseCapturedPipelineDataKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkReleaseCapturedPipelineDataInfoKHR *")]
                ReleaseCapturedPipelineDataInfoKHR* pInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_pipeline_binary"],
            ImpliesSets = [
                "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
                "VK_KHR_pipeline_binary+VK_VERSION_1_4",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkReleaseCapturedPipelineDataKHR")]
        static abstract Result ReleaseCapturedPipelineDataKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkReleaseCapturedPipelineDataInfoKHR *")]
                Ref<ReleaseCapturedPipelineDataInfoKHR> pInfo,
            [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_direct_mode_display"],
            ImpliesSets = ["VK_KHR_display"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkReleaseDisplayEXT")]
        static abstract Result ReleaseDisplayEXT(
            [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
            [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkReleasePerformanceConfigurationINTEL")]
        static abstract Result ReleasePerformanceConfigurationIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkPerformanceConfigurationINTEL")]
                PerformanceConfigurationIntelHandle configuration
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_performance_query"],
            ImpliesSets = [
                "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
                "VK_KHR_performance_query+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkReleaseProfilingLockKHR")]
        static abstract void ReleaseProfilingLockKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_swapchain_maintenance1"],
            ImpliesSets = [
                "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_KHR_get_physical_device_properties2",
                "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkReleaseSwapchainImagesEXT")]
        static abstract Result ReleaseSwapchainImagesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkReleaseSwapchainImagesInfoEXT *")]
                ReleaseSwapchainImagesInfoEXT* pReleaseInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_swapchain_maintenance1"],
            ImpliesSets = [
                "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_KHR_get_physical_device_properties2",
                "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkReleaseSwapchainImagesEXT")]
        static abstract Result ReleaseSwapchainImagesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkReleaseSwapchainImagesInfoEXT *")]
                Ref<ReleaseSwapchainImagesInfoEXT> pReleaseInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkResetCommandBuffer")]
        static abstract Result ResetCommandBuffer(
            [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
            [NativeTypeName("VkCommandBufferResetFlags")] uint flags
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkResetCommandPool")]
        static abstract Result ResetCommandPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("VkCommandPoolResetFlags")] uint flags
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkResetDescriptorPool")]
        static abstract Result ResetDescriptorPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
            [NativeTypeName("VkDescriptorPoolResetFlags")] uint flags
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkResetEvent")]
        static abstract Result ResetEvent(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkEvent")] EventHandle @event
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkResetFences")]
        static abstract Result ResetFences(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint fenceCount,
            [NativeTypeName("const VkFence *")] FenceHandle* pFences
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkResetFences")]
        static abstract Result ResetFences(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint fenceCount,
            [NativeTypeName("const VkFence *")] Ref<FenceHandle> pFences
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkResetQueryPool")]
        static abstract void ResetQueryPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery,
            [NativeTypeName("uint32_t")] uint queryCount
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_query_reset"],
            ImpliesSets = [
                "VK_EXT_host_query_reset+VK_KHR_get_physical_device_properties2",
                "VK_EXT_host_query_reset+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkResetQueryPoolEXT")]
        static abstract void ResetQueryPoolEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
            [NativeTypeName("uint32_t")] uint firstQuery,
            [NativeTypeName("uint32_t")] uint queryCount
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectNameEXT")]
        static abstract Result SetDebugUtilsObjectNameEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugUtilsObjectNameInfoEXT *")]
                DebugUtilsObjectNameInfoEXT* pNameInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectNameEXT")]
        static abstract Result SetDebugUtilsObjectNameEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugUtilsObjectNameInfoEXT *")]
                Ref<DebugUtilsObjectNameInfoEXT> pNameInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectTagEXT")]
        static abstract Result SetDebugUtilsObjectTagEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugUtilsObjectTagInfoEXT *")]
                DebugUtilsObjectTagInfoEXT* pTagInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectTagEXT")]
        static abstract Result SetDebugUtilsObjectTagEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkDebugUtilsObjectTagInfoEXT *")]
                Ref<DebugUtilsObjectTagInfoEXT> pTagInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_pageable_device_local_memory"],
            ImpliesSets = ["VK_EXT_memory_priority"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSetDeviceMemoryPriorityEXT")]
        static abstract void SetDeviceMemoryPriorityEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
            float priority
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSetEvent")]
        static abstract Result SetEvent(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkEvent")] EventHandle @event
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_hdr_metadata"], ImpliesSets = ["VK_KHR_swapchain"])]
        [NativeFunction("vulkan", EntryPoint = "vkSetHdrMetadataEXT")]
        static abstract void SetHdrMetadataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint swapchainCount,
            [NativeTypeName("const VkSwapchainKHR *")] SwapchainKHRHandle* pSwapchains,
            [NativeTypeName("const VkHdrMetadataEXT *")] HdrMetadataEXT* pMetadata
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_hdr_metadata"], ImpliesSets = ["VK_KHR_swapchain"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSetHdrMetadataEXT")]
        static abstract void SetHdrMetadataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint swapchainCount,
            [NativeTypeName("const VkSwapchainKHR *")] Ref<SwapchainKHRHandle> pSwapchains,
            [NativeTypeName("const VkHdrMetadataEXT *")] Ref<HdrMetadataEXT> pMetadata
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSetLatencyMarkerNV")]
        static abstract void SetLatencyMarkerNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkSetLatencyMarkerInfoNV *")]
                SetLatencyMarkerInfoNV* pLatencyMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSetLatencyMarkerNV")]
        static abstract void SetLatencyMarkerNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkSetLatencyMarkerInfoNV *")]
                Ref<SetLatencyMarkerInfoNV> pLatencyMarkerInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSetLatencySleepModeNV")]
        static abstract Result SetLatencySleepModeNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkLatencySleepModeInfoNV *")]
                LatencySleepModeInfoNV* pSleepModeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_NV_low_latency2"],
            ImpliesSets = [
                "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
                "VK_NV_low_latency2+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSetLatencySleepModeNV")]
        static abstract Result SetLatencySleepModeNV(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("const VkLatencySleepModeInfoNV *")]
                Ref<LatencySleepModeInfoNV> pSleepModeInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_AMD_display_native_hdr"],
            ImpliesSets = [
                "VK_KHR_get_surface_capabilities2+VK_KHR_swapchain+VK_KHR_get_physical_device_properties2",
                "VK_KHR_get_surface_capabilities2+VK_KHR_swapchain+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSetLocalDimmingAMD")]
        static abstract void SetLocalDimmingAMD(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapChain,
            [NativeTypeName("VkBool32")] uint localDimmingEnable
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
        [NativeFunction("vulkan", EntryPoint = "vkSetPrivateData")]
        static abstract Result SetPrivateData(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            ObjectType objectType,
            [NativeTypeName("uint64_t")] ulong objectHandle,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("uint64_t")] ulong data
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_private_data"],
            ImpliesSets = [
                "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
                "VK_EXT_private_data+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSetPrivateDataEXT")]
        static abstract Result SetPrivateDataEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            ObjectType objectType,
            [NativeTypeName("uint64_t")] ulong objectHandle,
            [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
            [NativeTypeName("uint64_t")] ulong data
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphore")]
        static abstract Result SignalSemaphore(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreSignalInfo *")] SemaphoreSignalInfo* pSignalInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphore")]
        static abstract Result SignalSemaphore(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreSignalInfo *")] Ref<SemaphoreSignalInfo> pSignalInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_timeline_semaphore"],
            ImpliesSets = [
                "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
                "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphoreKHR")]
        static abstract Result SignalSemaphoreKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreSignalInfo *")] SemaphoreSignalInfo* pSignalInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_timeline_semaphore"],
            ImpliesSets = [
                "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
                "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphoreKHR")]
        static abstract Result SignalSemaphoreKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreSignalInfo *")] Ref<SemaphoreSignalInfo> pSignalInfo
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [NativeFunction("vulkan", EntryPoint = "vkSubmitDebugUtilsMessageEXT")]
        static abstract void SubmitDebugUtilsMessageEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugUtilsMessageSeverityFlagBitsEXT")]
                DebugUtilsMessageSeverityFlagsEXT messageSeverity,
            [NativeTypeName("VkDebugUtilsMessageTypeFlagsEXT")] uint messageTypes,
            [NativeTypeName("const VkDebugUtilsMessengerCallbackDataEXT *")]
                DebugUtilsMessengerCallbackDataEXT* pCallbackData
        );

        [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkSubmitDebugUtilsMessageEXT")]
        static abstract void SubmitDebugUtilsMessageEXT(
            [NativeTypeName("VkInstance")] InstanceHandle instance,
            [NativeTypeName("VkDebugUtilsMessageSeverityFlagBitsEXT")]
                DebugUtilsMessageSeverityFlagsEXT messageSeverity,
            [NativeTypeName("VkDebugUtilsMessageTypeFlagsEXT")] uint messageTypes,
            [NativeTypeName("const VkDebugUtilsMessengerCallbackDataEXT *")]
                Ref<DebugUtilsMessengerCallbackDataEXT> pCallbackData
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayout")]
        static abstract Result TransitionImageLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint transitionCount,
            [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
                HostImageLayoutTransitionInfo* pTransitions
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayout")]
        static abstract Result TransitionImageLayout(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint transitionCount,
            [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
                Ref<HostImageLayoutTransitionInfo> pTransitions
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayoutEXT")]
        static abstract Result TransitionImageLayoutEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint transitionCount,
            [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
                HostImageLayoutTransitionInfo* pTransitions
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_host_image_copy"],
            ImpliesSets = [
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
                "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayoutEXT")]
        static abstract Result TransitionImageLayoutEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint transitionCount,
            [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
                Ref<HostImageLayoutTransitionInfo> pTransitions
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkTrimCommandPool")]
        static abstract void TrimCommandPool(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("VkCommandPoolTrimFlags")] uint flags
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_maintenance1"])]
        [NativeFunction("vulkan", EntryPoint = "vkTrimCommandPoolKHR")]
        static abstract void TrimCommandPoolKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
            [NativeTypeName("VkCommandPoolTrimFlags")] uint flags
        );

        [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
        [NativeFunction("vulkan", EntryPoint = "vkUninitializePerformanceApiINTEL")]
        static abstract void UninitializePerformanceApiIntel(
            [NativeTypeName("VkDevice")] DeviceHandle device
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory")]
        static abstract void UnmapMemory(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2")]
        static abstract Result UnmapMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryUnmapInfo *")] MemoryUnmapInfo* pMemoryUnmapInfo
        );

        [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2")]
        static abstract Result UnmapMemory2(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryUnmapInfo *")] Ref<MemoryUnmapInfo> pMemoryUnmapInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
        [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2KHR")]
        static abstract Result UnmapMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryUnmapInfo *")] MemoryUnmapInfo* pMemoryUnmapInfo
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2KHR")]
        static abstract Result UnmapMemory2KHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkMemoryUnmapInfo *")] Ref<MemoryUnmapInfo> pMemoryUnmapInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSets")]
        static abstract void UpdateDescriptorSets(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint descriptorWriteCount,
            [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet* pDescriptorWrites,
            [NativeTypeName("uint32_t")] uint descriptorCopyCount,
            [NativeTypeName("const VkCopyDescriptorSet *")] CopyDescriptorSet* pDescriptorCopies
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSets")]
        static abstract void UpdateDescriptorSets(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint descriptorWriteCount,
            [NativeTypeName("const VkWriteDescriptorSet *")]
                Ref<WriteDescriptorSet> pDescriptorWrites,
            [NativeTypeName("uint32_t")] uint descriptorCopyCount,
            [NativeTypeName("const VkCopyDescriptorSet *")] Ref<CopyDescriptorSet> pDescriptorCopies
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplate")]
        static abstract void UpdateDescriptorSetWithTemplate(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const void *")] void* pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.1"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplate")]
        static abstract void UpdateDescriptorSetWithTemplate(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const void *")] Ref pData
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplateKHR")]
        static abstract void UpdateDescriptorSetWithTemplateKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const void *")] void* pData
        );

        [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplateKHR")]
        static abstract void UpdateDescriptorSetWithTemplateKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
            [NativeTypeName("VkDescriptorUpdateTemplate")]
                DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
            [NativeTypeName("const void *")] Ref pData
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetPipelineEXT")]
        static abstract void UpdateIndirectExecutionSetPipelineEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("uint32_t")] uint executionSetWriteCount,
            [NativeTypeName("const VkWriteIndirectExecutionSetPipelineEXT *")]
                WriteIndirectExecutionSetPipelineEXT* pExecutionSetWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetPipelineEXT")]
        static abstract void UpdateIndirectExecutionSetPipelineEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("uint32_t")] uint executionSetWriteCount,
            [NativeTypeName("const VkWriteIndirectExecutionSetPipelineEXT *")]
                Ref<WriteIndirectExecutionSetPipelineEXT> pExecutionSetWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetPipelineEXT")]
        static abstract void UpdateIndirectExecutionSetPipelineEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("const VkWriteIndirectExecutionSetPipelineEXT *")]
                WriteIndirectExecutionSetPipelineEXT pExecutionSetWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetShaderEXT")]
        static abstract void UpdateIndirectExecutionSetShaderEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("uint32_t")] uint executionSetWriteCount,
            [NativeTypeName("const VkWriteIndirectExecutionSetShaderEXT *")]
                WriteIndirectExecutionSetShaderEXT* pExecutionSetWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetShaderEXT")]
        static abstract void UpdateIndirectExecutionSetShaderEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("uint32_t")] uint executionSetWriteCount,
            [NativeTypeName("const VkWriteIndirectExecutionSetShaderEXT *")]
                Ref<WriteIndirectExecutionSetShaderEXT> pExecutionSetWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_device_generated_commands"],
            ImpliesSets = [
                "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
                "VK_KHR_maintenance5+VK_VERSION_1_2",
                "VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetShaderEXT")]
        static abstract void UpdateIndirectExecutionSetShaderEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkIndirectExecutionSetEXT")]
                IndirectExecutionSetEXTHandle indirectExecutionSet,
            [NativeTypeName("const VkWriteIndirectExecutionSetShaderEXT *")]
                WriteIndirectExecutionSetShaderEXT pExecutionSetWrites
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateVideoSessionParametersKHR")]
        static abstract Result UpdateVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionParametersKHR")]
                VideoSessionParametersKHRHandle videoSessionParameters,
            [NativeTypeName("const VkVideoSessionParametersUpdateInfoKHR *")]
                VideoSessionParametersUpdateInfoKHR* pUpdateInfo
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_video_queue"],
            ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkUpdateVideoSessionParametersKHR")]
        static abstract Result UpdateVideoSessionParametersKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkVideoSessionParametersKHR")]
                VideoSessionParametersKHRHandle videoSessionParameters,
            [NativeTypeName("const VkVideoSessionParametersUpdateInfoKHR *")]
                Ref<VideoSessionParametersUpdateInfoKHR> pUpdateInfo
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkWaitForFences")]
        static abstract Result WaitForFences(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint fenceCount,
            [NativeTypeName("const VkFence *")] FenceHandle* pFences,
            [NativeTypeName("VkBool32")] uint waitAll,
            [NativeTypeName("uint64_t")] ulong timeout
        );

        [SupportedApiProfile(
            "vulkan",
            [
                "VK_VERSION_1_0",
                "VK_VERSION_1_1",
                "VK_VERSION_1_2",
                "VK_VERSION_1_3",
                "VK_VERSION_1_4",
            ],
            MinVersion = "1.0"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkWaitForFences")]
        static abstract Result WaitForFences(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint fenceCount,
            [NativeTypeName("const VkFence *")] Ref<FenceHandle> pFences,
            [NativeTypeName("VkBool32")] uint waitAll,
            [NativeTypeName("uint64_t")] ulong timeout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_present_wait"],
            ImpliesSets = ["VK_KHR_present_id", "VK_KHR_swapchain"]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkWaitForPresentKHR")]
        static abstract Result WaitForPresentKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
            [NativeTypeName("uint64_t")] ulong presentId,
            [NativeTypeName("uint64_t")] ulong timeout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphores")]
        static abstract Result WaitSemaphores(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreWaitInfo *")] SemaphoreWaitInfo* pWaitInfo,
            [NativeTypeName("uint64_t")] ulong timeout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
            MinVersion = "1.2"
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphores")]
        static abstract Result WaitSemaphores(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreWaitInfo *")] Ref<SemaphoreWaitInfo> pWaitInfo,
            [NativeTypeName("uint64_t")] ulong timeout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_timeline_semaphore"],
            ImpliesSets = [
                "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
                "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphoresKHR")]
        static abstract Result WaitSemaphoresKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreWaitInfo *")] SemaphoreWaitInfo* pWaitInfo,
            [NativeTypeName("uint64_t")] ulong timeout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_timeline_semaphore"],
            ImpliesSets = [
                "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
                "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphoresKHR")]
        static abstract Result WaitSemaphoresKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("const VkSemaphoreWaitInfo *")] Ref<SemaphoreWaitInfo> pWaitInfo,
            [NativeTypeName("uint64_t")] ulong timeout
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkWriteAccelerationStructuresPropertiesKHR")]
        static abstract Result WriteAccelerationStructuresPropertiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint accelerationStructureCount,
            [NativeTypeName("const VkAccelerationStructureKHR *")]
                AccelerationStructureKHRHandle* pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pData,
            [NativeTypeName("size_t")] nuint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_KHR_acceleration_structure"],
            ImpliesSets = [
                "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
                "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkWriteAccelerationStructuresPropertiesKHR")]
        static abstract Result WriteAccelerationStructuresPropertiesKHR(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint accelerationStructureCount,
            [NativeTypeName("const VkAccelerationStructureKHR *")]
                Ref<AccelerationStructureKHRHandle> pAccelerationStructures,
            QueryType queryType,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pData,
            [NativeTypeName("size_t")] nuint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [NativeFunction("vulkan", EntryPoint = "vkWriteMicromapsPropertiesEXT")]
        static abstract Result WriteMicromapsPropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint micromapCount,
            [NativeTypeName("const VkMicromapEXT *")] MicromapEXTHandle* pMicromaps,
            QueryType queryType,
            [NativeTypeName("size_t")] nuint dataSize,
            void* pData,
            [NativeTypeName("size_t")] nuint stride
        );

        [SupportedApiProfile(
            "vulkan",
            ["VK_EXT_opacity_micromap"],
            ImpliesSets = [
                "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
                "VK_KHR_acceleration_structure+VK_VERSION_1_3",
            ]
        )]
        [Transformed]
        [NativeFunction("vulkan", EntryPoint = "vkWriteMicromapsPropertiesEXT")]
        static abstract Result WriteMicromapsPropertiesEXT(
            [NativeTypeName("VkDevice")] DeviceHandle device,
            [NativeTypeName("uint32_t")] uint micromapCount,
            [NativeTypeName("const VkMicromapEXT *")] Ref<MicromapEXTHandle> pMicromaps,
            QueryType queryType,
            [NativeTypeName("size_t")] nuint dataSize,
            Ref pData,
            [NativeTypeName("size_t")] nuint stride
        );
    }

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_acquire_drm_display"],
        ImpliesSets = ["VK_EXT_direct_mode_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkAcquireDrmDisplayEXT")]
    Result AcquireDrmDisplayEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("int32_t")] int drmFd,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImage2KHR")]
    Result AcquireNextImage2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAcquireNextImageInfoKHR *")] AcquireNextImageInfoKHR* pAcquireInfo,
        [NativeTypeName("uint32_t *")] uint* pImageIndex
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImage2KHR")]
    Result AcquireNextImage2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAcquireNextImageInfoKHR *")]
            Ref<AcquireNextImageInfoKHR> pAcquireInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pImageIndex
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImageKHR")]
    Result AcquireNextImageKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("uint64_t")] ulong timeout,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("VkFence")] FenceHandle fence,
        [NativeTypeName("uint32_t *")] uint* pImageIndex
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAcquireNextImageKHR")]
    Result AcquireNextImageKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("uint64_t")] ulong timeout,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("VkFence")] FenceHandle fence,
        [NativeTypeName("uint32_t *")] Ref<uint> pImageIndex
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkAcquirePerformanceConfigurationINTEL")]
    Result AcquirePerformanceConfigurationIntel(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPerformanceConfigurationAcquireInfoINTEL *")]
            PerformanceConfigurationAcquireInfoIntel* pAcquireInfo,
        [NativeTypeName("VkPerformanceConfigurationINTEL *")]
            PerformanceConfigurationIntelHandle* pConfiguration
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAcquirePerformanceConfigurationINTEL")]
    Result AcquirePerformanceConfigurationIntel(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPerformanceConfigurationAcquireInfoINTEL *")]
            Ref<PerformanceConfigurationAcquireInfoIntel> pAcquireInfo,
        [NativeTypeName("VkPerformanceConfigurationINTEL *")]
            Ref<PerformanceConfigurationIntelHandle> pConfiguration
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_performance_query"],
        ImpliesSets = [
            "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
            "VK_KHR_performance_query+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkAcquireProfilingLockKHR")]
    Result AcquireProfilingLockKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAcquireProfilingLockInfoKHR *")] AcquireProfilingLockInfoKHR* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_performance_query"],
        ImpliesSets = [
            "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
            "VK_KHR_performance_query+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAcquireProfilingLockKHR")]
    Result AcquireProfilingLockKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAcquireProfilingLockInfoKHR *")]
            Ref<AcquireProfilingLockInfoKHR> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkAllocateCommandBuffers")]
    Result AllocateCommandBuffers(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCommandBufferAllocateInfo *")]
            CommandBufferAllocateInfo* pAllocateInfo,
        [NativeTypeName("VkCommandBuffer *")] CommandBufferHandle* pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAllocateCommandBuffers")]
    Result AllocateCommandBuffers(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCommandBufferAllocateInfo *")]
            Ref<CommandBufferAllocateInfo> pAllocateInfo,
        [NativeTypeName("VkCommandBuffer *")] Ref<CommandBufferHandle> pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkAllocateDescriptorSets")]
    Result AllocateDescriptorSets(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetAllocateInfo *")]
            DescriptorSetAllocateInfo* pAllocateInfo,
        [NativeTypeName("VkDescriptorSet *")] DescriptorSetHandle* pDescriptorSets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAllocateDescriptorSets")]
    Result AllocateDescriptorSets(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetAllocateInfo *")]
            Ref<DescriptorSetAllocateInfo> pAllocateInfo,
        [NativeTypeName("VkDescriptorSet *")] Ref<DescriptorSetHandle> pDescriptorSets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkAllocateMemory")]
    Result AllocateMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryAllocateInfo *")] MemoryAllocateInfo* pAllocateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDeviceMemory *")] DeviceMemoryHandle* pMemory
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAllocateMemory")]
    Result AllocateMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryAllocateInfo *")] Ref<MemoryAllocateInfo> pAllocateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDeviceMemory *")] Ref<DeviceMemoryHandle> pMemory
    );

    [SupportedApiProfile("vulkan", ["VK_AMD_anti_lag"])]
    [NativeFunction("vulkan", EntryPoint = "vkAntiLagUpdateAMD")]
    void AntiLagUpdateAMD(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAntiLagDataAMD *")] AntiLagDataAMD* pData
    );

    [SupportedApiProfile("vulkan", ["VK_AMD_anti_lag"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkAntiLagUpdateAMD")]
    void AntiLagUpdateAMD(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAntiLagDataAMD *")] Ref<AntiLagDataAMD> pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBeginCommandBuffer")]
    Result BeginCommandBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCommandBufferBeginInfo *")] CommandBufferBeginInfo* pBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBeginCommandBuffer")]
    Result BeginCommandBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCommandBufferBeginInfo *")] Ref<CommandBufferBeginInfo> pBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBindAccelerationStructureMemoryNV")]
    Result BindAccelerationStructureMemoryNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindAccelerationStructureMemoryInfoNV *")]
            BindAccelerationStructureMemoryInfoNV* pBindInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBindAccelerationStructureMemoryNV")]
    Result BindAccelerationStructureMemoryNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindAccelerationStructureMemoryInfoNV *")]
            Ref<BindAccelerationStructureMemoryInfoNV> pBindInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory")]
    Result BindBufferMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("VkDeviceSize")] ulong memoryOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2")]
    Result BindBufferMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindBufferMemoryInfo *")] BindBufferMemoryInfo* pBindInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2")]
    Result BindBufferMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindBufferMemoryInfo *")] Ref<BindBufferMemoryInfo> pBindInfos
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
    [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2KHR")]
    Result BindBufferMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindBufferMemoryInfo *")] BindBufferMemoryInfo* pBindInfos
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBindBufferMemory2KHR")]
    Result BindBufferMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindBufferMemoryInfo *")] Ref<BindBufferMemoryInfo> pBindInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory")]
    Result BindImageMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("VkDeviceSize")] ulong memoryOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2")]
    Result BindImageMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindImageMemoryInfo *")] BindImageMemoryInfo* pBindInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2")]
    Result BindImageMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindImageMemoryInfo *")] Ref<BindImageMemoryInfo> pBindInfos
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
    [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2KHR")]
    Result BindImageMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindImageMemoryInfo *")] BindImageMemoryInfo* pBindInfos
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_bind_memory2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBindImageMemory2KHR")]
    Result BindImageMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindImageMemoryInfo *")] Ref<BindImageMemoryInfo> pBindInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBindOpticalFlowSessionImageNV")]
    Result BindOpticalFlowSessionImageNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
        OpticalFlowSessionBindingPointNV bindingPoint,
        [NativeTypeName("VkImageView")] ImageViewHandle view,
        ImageLayout layout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBindVideoSessionMemoryKHR")]
    Result BindVideoSessionMemoryKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
        [NativeTypeName("uint32_t")] uint bindSessionMemoryInfoCount,
        [NativeTypeName("const VkBindVideoSessionMemoryInfoKHR *")]
            BindVideoSessionMemoryInfoKHR* pBindSessionMemoryInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBindVideoSessionMemoryKHR")]
    Result BindVideoSessionMemoryKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
        [NativeTypeName("uint32_t")] uint bindSessionMemoryInfoCount,
        [NativeTypeName("const VkBindVideoSessionMemoryInfoKHR *")]
            Ref<BindVideoSessionMemoryInfoKHR> pBindSessionMemoryInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBuildAccelerationStructuresKHR")]
    Result BuildAccelerationStructuresKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            AccelerationStructureBuildGeometryInfoKHR* pInfos,
        [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
            AccelerationStructureBuildRangeInfoKHR** ppBuildRangeInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBuildAccelerationStructuresKHR")]
    Result BuildAccelerationStructuresKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            Ref<AccelerationStructureBuildGeometryInfoKHR> pInfos,
        [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
            Ref2D<AccelerationStructureBuildRangeInfoKHR> ppBuildRangeInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkBuildMicromapsEXT")]
    Result BuildMicromapsEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT* pInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkBuildMicromapsEXT")]
    Result BuildMicromapsEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkMicromapBuildInfoEXT *")] Ref<MicromapBuildInfoEXT> pInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_conditional_rendering"],
        ImpliesSets = [
            "VK_EXT_conditional_rendering+VK_KHR_get_physical_device_properties2",
            "VK_EXT_conditional_rendering+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginConditionalRenderingEXT")]
    void CmdBeginConditionalRenderingEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkConditionalRenderingBeginInfoEXT *")]
            ConditionalRenderingBeginInfoEXT* pConditionalRenderingBegin
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_conditional_rendering"],
        ImpliesSets = [
            "VK_EXT_conditional_rendering+VK_KHR_get_physical_device_properties2",
            "VK_EXT_conditional_rendering+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginConditionalRenderingEXT")]
    void CmdBeginConditionalRenderingEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkConditionalRenderingBeginInfoEXT *")]
            Ref<ConditionalRenderingBeginInfoEXT> pConditionalRenderingBegin
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginDebugUtilsLabelEXT")]
    void CmdBeginDebugUtilsLabelEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginDebugUtilsLabelEXT")]
    void CmdBeginDebugUtilsLabelEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_shading"],
        ImpliesSets = [
            "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginPerTileExecutionQCOM")]
    void CmdBeginPerTileExecutionQCOM(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerTileBeginInfoQCOM *")] PerTileBeginInfoQCOM* pPerTileBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_shading"],
        ImpliesSets = [
            "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginPerTileExecutionQCOM")]
    void CmdBeginPerTileExecutionQCOM(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerTileBeginInfoQCOM *")]
            Ref<PerTileBeginInfoQCOM> pPerTileBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginQuery")]
    void CmdBeginQuery(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint query,
        [NativeTypeName("VkQueryControlFlags")] uint flags
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginQueryIndexedEXT")]
    void CmdBeginQueryIndexedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint query,
        [NativeTypeName("VkQueryControlFlags")] uint flags,
        [NativeTypeName("uint32_t")] uint index
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRendering")]
    void CmdBeginRendering(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInfo *")] RenderingInfo* pRenderingInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRendering")]
    void CmdBeginRendering(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInfo *")] Ref<RenderingInfo> pRenderingInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_dynamic_rendering"],
        ImpliesSets = [
            "VK_KHR_depth_stencil_resolve+VK_KHR_get_physical_device_properties2",
            "VK_KHR_depth_stencil_resolve+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderingKHR")]
    void CmdBeginRenderingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInfo *")] RenderingInfo* pRenderingInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_dynamic_rendering"],
        ImpliesSets = [
            "VK_KHR_depth_stencil_resolve+VK_KHR_get_physical_device_properties2",
            "VK_KHR_depth_stencil_resolve+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderingKHR")]
    void CmdBeginRenderingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInfo *")] Ref<RenderingInfo> pRenderingInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass")]
    void CmdBeginRenderPass(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderPassBeginInfo *")] RenderPassBeginInfo* pRenderPassBegin,
        SubpassContents contents
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass")]
    void CmdBeginRenderPass(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderPassBeginInfo *")] Ref<RenderPassBeginInfo> pRenderPassBegin,
        SubpassContents contents
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2")]
    void CmdBeginRenderPass2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderPassBeginInfo *")] RenderPassBeginInfo* pRenderPassBegin,
        [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2")]
    void CmdBeginRenderPass2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderPassBeginInfo *")] Ref<RenderPassBeginInfo> pRenderPassBegin,
        [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2KHR")]
    void CmdBeginRenderPass2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderPassBeginInfo *")] RenderPassBeginInfo* pRenderPassBegin,
        [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginRenderPass2KHR")]
    void CmdBeginRenderPass2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderPassBeginInfo *")] Ref<RenderPassBeginInfo> pRenderPassBegin,
        [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginTransformFeedbackEXT")]
    void CmdBeginTransformFeedbackEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstCounterBuffer,
        [NativeTypeName("uint32_t")] uint counterBufferCount,
        [NativeTypeName("const VkBuffer *")] BufferHandle* pCounterBuffers,
        [NativeTypeName("const VkDeviceSize *")] ulong* pCounterBufferOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginTransformFeedbackEXT")]
    void CmdBeginTransformFeedbackEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstCounterBuffer,
        [NativeTypeName("uint32_t")] uint counterBufferCount,
        [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pCounterBuffers,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pCounterBufferOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginVideoCodingKHR")]
    void CmdBeginVideoCodingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoBeginCodingInfoKHR *")] VideoBeginCodingInfoKHR* pBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBeginVideoCodingKHR")]
    void CmdBeginVideoCodingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoBeginCodingInfoKHR *")]
            Ref<VideoBeginCodingInfoKHR> pBeginInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT")]
    void CmdBindDescriptorBufferEmbeddedSamplers2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBindDescriptorBufferEmbeddedSamplersInfoEXT *")]
            BindDescriptorBufferEmbeddedSamplersInfoEXT* pBindDescriptorBufferEmbeddedSamplersInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT")]
    void CmdBindDescriptorBufferEmbeddedSamplers2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBindDescriptorBufferEmbeddedSamplersInfoEXT *")]
            Ref<BindDescriptorBufferEmbeddedSamplersInfoEXT> pBindDescriptorBufferEmbeddedSamplersInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBufferEmbeddedSamplersEXT")]
    void CmdBindDescriptorBufferEmbeddedSamplersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBuffersEXT")]
    void CmdBindDescriptorBuffersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint bufferCount,
        [NativeTypeName("const VkDescriptorBufferBindingInfoEXT *")]
            DescriptorBufferBindingInfoEXT* pBindingInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBuffersEXT")]
    void CmdBindDescriptorBuffersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint bufferCount,
        [NativeTypeName("const VkDescriptorBufferBindingInfoEXT *")]
            Ref<DescriptorBufferBindingInfoEXT> pBindingInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorBuffersEXT")]
    void CmdBindDescriptorBuffersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDescriptorBufferBindingInfoEXT *")]
            DescriptorBufferBindingInfoEXT pBindingInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets")]
    void CmdBindDescriptorSets(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint firstSet,
        [NativeTypeName("uint32_t")] uint descriptorSetCount,
        [NativeTypeName("const VkDescriptorSet *")] DescriptorSetHandle* pDescriptorSets,
        [NativeTypeName("uint32_t")] uint dynamicOffsetCount,
        [NativeTypeName("const uint32_t *")] uint* pDynamicOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets")]
    void CmdBindDescriptorSets(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint firstSet,
        [NativeTypeName("uint32_t")] uint descriptorSetCount,
        [NativeTypeName("const VkDescriptorSet *")] Ref<DescriptorSetHandle> pDescriptorSets,
        [NativeTypeName("uint32_t")] uint dynamicOffsetCount,
        [NativeTypeName("const uint32_t *")] Ref<uint> pDynamicOffsets
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2")]
    void CmdBindDescriptorSets2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBindDescriptorSetsInfo *")]
            BindDescriptorSetsInfo* pBindDescriptorSetsInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2")]
    void CmdBindDescriptorSets2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBindDescriptorSetsInfo *")]
            Ref<BindDescriptorSetsInfo> pBindDescriptorSetsInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2KHR")]
    void CmdBindDescriptorSets2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBindDescriptorSetsInfo *")]
            BindDescriptorSetsInfo* pBindDescriptorSetsInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindDescriptorSets2KHR")]
    void CmdBindDescriptorSets2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBindDescriptorSetsInfo *")]
            Ref<BindDescriptorSetsInfo> pBindDescriptorSetsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindIndexBuffer")]
    void CmdBindIndexBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        IndexType indexType
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindIndexBuffer2")]
    void CmdBindIndexBuffer2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkDeviceSize")] ulong size,
        IndexType indexType
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance5"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindIndexBuffer2KHR")]
    void CmdBindIndexBuffer2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkDeviceSize")] ulong size,
        IndexType indexType
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_HUAWEI_invocation_mask"],
        ImpliesSets = [
            "VK_KHR_ray_tracing_pipeline+VK_KHR_synchronization2",
            "VK_KHR_ray_tracing_pipeline+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindInvocationMaskHUAWEI")]
    void CmdBindInvocationMaskHuawei(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImageView")] ImageViewHandle imageView,
        ImageLayout imageLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindPipeline")]
    void CmdBindPipeline(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindPipelineShaderGroupNV")]
    void CmdBindPipelineShaderGroupNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint groupIndex
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindShadersEXT")]
    void CmdBindShadersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint stageCount,
        [NativeTypeName("const VkShaderStageFlagBits *")] ShaderStageFlags* pStages,
        [NativeTypeName("const VkShaderEXT *")] ShaderEXTHandle* pShaders
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindShadersEXT")]
    void CmdBindShadersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint stageCount,
        [NativeTypeName("const VkShaderStageFlagBits *")] Ref<ShaderStageFlags> pStages,
        [NativeTypeName("const VkShaderEXT *")] Ref<ShaderEXTHandle> pShaders
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
            "VK_NV_shading_rate_image+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindShadingRateImageNV")]
    void CmdBindShadingRateImageNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImageView")] ImageViewHandle imageView,
        ImageLayout imageLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_memory_heap"],
        ImpliesSets = [
            "VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindTileMemoryQCOM")]
    void CmdBindTileMemoryQCOM(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkTileMemoryBindInfoQCOM *")]
            TileMemoryBindInfoQCOM* pTileMemoryBindInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_memory_heap"],
        ImpliesSets = [
            "VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindTileMemoryQCOM")]
    void CmdBindTileMemoryQCOM(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkTileMemoryBindInfoQCOM *")]
            Ref<TileMemoryBindInfoQCOM> pTileMemoryBindInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindTransformFeedbackBuffersEXT")]
    void CmdBindTransformFeedbackBuffersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
        [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets,
        [NativeTypeName("const VkDeviceSize *")] ulong* pSizes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindTransformFeedbackBuffersEXT")]
    void CmdBindTransformFeedbackBuffersEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pSizes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers")]
    void CmdBindVertexBuffers(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
        [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers")]
    void CmdBindVertexBuffers(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2")]
    void CmdBindVertexBuffers2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
        [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets,
        [NativeTypeName("const VkDeviceSize *")] ulong* pSizes,
        [NativeTypeName("const VkDeviceSize *")] ulong* pStrides
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2")]
    void CmdBindVertexBuffers2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pSizes,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pStrides
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2EXT")]
    void CmdBindVertexBuffers2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] BufferHandle* pBuffers,
        [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets,
        [NativeTypeName("const VkDeviceSize *")] ulong* pSizes,
        [NativeTypeName("const VkDeviceSize *")] ulong* pStrides
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBindVertexBuffers2EXT")]
    void CmdBindVertexBuffers2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstBinding,
        [NativeTypeName("uint32_t")] uint bindingCount,
        [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pBuffers,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pSizes,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pStrides
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage")]
    void CmdBlitImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkImageBlit *")] ImageBlit* pRegions,
        Filter filter
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage")]
    void CmdBlitImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkImageBlit *")] Ref<ImageBlit> pRegions,
        Filter filter
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage")]
    void CmdBlitImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("const VkImageBlit *")] ImageBlit pRegions,
        Filter filter
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2")]
    void CmdBlitImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBlitImageInfo2 *")] BlitImageInfo2* pBlitImageInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2")]
    void CmdBlitImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBlitImageInfo2 *")] Ref<BlitImageInfo2> pBlitImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2KHR")]
    void CmdBlitImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBlitImageInfo2 *")] BlitImageInfo2* pBlitImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBlitImage2KHR")]
    void CmdBlitImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBlitImageInfo2 *")] Ref<BlitImageInfo2> pBlitImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructureNV")]
    void CmdBuildAccelerationStructureNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkAccelerationStructureInfoNV *")]
            AccelerationStructureInfoNV* pInfo,
        [NativeTypeName("VkBuffer")] BufferHandle instanceData,
        [NativeTypeName("VkDeviceSize")] ulong instanceOffset,
        [NativeTypeName("VkBool32")] uint update,
        [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle dst,
        [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle src,
        [NativeTypeName("VkBuffer")] BufferHandle scratch,
        [NativeTypeName("VkDeviceSize")] ulong scratchOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructureNV")]
    void CmdBuildAccelerationStructureNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkAccelerationStructureInfoNV *")]
            Ref<AccelerationStructureInfoNV> pInfo,
        [NativeTypeName("VkBuffer")] BufferHandle instanceData,
        [NativeTypeName("VkDeviceSize")] ulong instanceOffset,
        [NativeTypeName("VkBool32")] uint update,
        [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle dst,
        [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle src,
        [NativeTypeName("VkBuffer")] BufferHandle scratch,
        [NativeTypeName("VkDeviceSize")] ulong scratchOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresIndirectKHR")]
    void CmdBuildAccelerationStructuresIndirectKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            AccelerationStructureBuildGeometryInfoKHR* pInfos,
        [NativeTypeName("const VkDeviceAddress *")] ulong* pIndirectDeviceAddresses,
        [NativeTypeName("const uint32_t *")] uint* pIndirectStrides,
        [NativeTypeName("const uint32_t *const *")] uint** ppMaxPrimitiveCounts
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresIndirectKHR")]
    void CmdBuildAccelerationStructuresIndirectKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            Ref<AccelerationStructureBuildGeometryInfoKHR> pInfos,
        [NativeTypeName("const VkDeviceAddress *")] Ref<ulong> pIndirectDeviceAddresses,
        [NativeTypeName("const uint32_t *")] Ref<uint> pIndirectStrides,
        [NativeTypeName("const uint32_t *const *")] Ref2D<uint> ppMaxPrimitiveCounts
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresKHR")]
    void CmdBuildAccelerationStructuresKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            AccelerationStructureBuildGeometryInfoKHR* pInfos,
        [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
            AccelerationStructureBuildRangeInfoKHR** ppBuildRangeInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildAccelerationStructuresKHR")]
    void CmdBuildAccelerationStructuresKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            Ref<AccelerationStructureBuildGeometryInfoKHR> pInfos,
        [NativeTypeName("const VkAccelerationStructureBuildRangeInfoKHR *const *")]
            Ref2D<AccelerationStructureBuildRangeInfoKHR> ppBuildRangeInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cluster_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildClusterAccelerationStructureIndirectNV")]
    void CmdBuildClusterAccelerationStructureIndirectNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkClusterAccelerationStructureCommandsInfoNV *")]
            ClusterAccelerationStructureCommandsInfoNV* pCommandInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cluster_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildClusterAccelerationStructureIndirectNV")]
    void CmdBuildClusterAccelerationStructureIndirectNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkClusterAccelerationStructureCommandsInfoNV *")]
            Ref<ClusterAccelerationStructureCommandsInfoNV> pCommandInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildMicromapsEXT")]
    void CmdBuildMicromapsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT* pInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildMicromapsEXT")]
    void CmdBuildMicromapsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkMicromapBuildInfoEXT *")] Ref<MicromapBuildInfoEXT> pInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildMicromapsEXT")]
    void CmdBuildMicromapsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT pInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_partitioned_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildPartitionedAccelerationStructuresNV")]
    void CmdBuildPartitionedAccelerationStructuresNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBuildPartitionedAccelerationStructureInfoNV *")]
            BuildPartitionedAccelerationStructureInfoNV* pBuildInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_partitioned_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdBuildPartitionedAccelerationStructuresNV")]
    void CmdBuildPartitionedAccelerationStructuresNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBuildPartitionedAccelerationStructureInfoNV *")]
            Ref<BuildPartitionedAccelerationStructureInfoNV> pBuildInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearAttachments")]
    void CmdClearAttachments(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkClearAttachment *")] ClearAttachment* pAttachments,
        [NativeTypeName("uint32_t")] uint rectCount,
        [NativeTypeName("const VkClearRect *")] ClearRect* pRects
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearAttachments")]
    void CmdClearAttachments(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkClearAttachment *")] Ref<ClearAttachment> pAttachments,
        [NativeTypeName("uint32_t")] uint rectCount,
        [NativeTypeName("const VkClearRect *")] Ref<ClearRect> pRects
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearColorImage")]
    void CmdClearColorImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle image,
        ImageLayout imageLayout,
        [NativeTypeName("const VkClearColorValue *")] ClearColorValue* pColor,
        [NativeTypeName("uint32_t")] uint rangeCount,
        [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange* pRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearColorImage")]
    void CmdClearColorImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle image,
        ImageLayout imageLayout,
        [NativeTypeName("const VkClearColorValue *")] Ref<ClearColorValue> pColor,
        [NativeTypeName("uint32_t")] uint rangeCount,
        [NativeTypeName("const VkImageSubresourceRange *")] Ref<ImageSubresourceRange> pRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearColorImage")]
    void CmdClearColorImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle image,
        ImageLayout imageLayout,
        [NativeTypeName("const VkClearColorValue *")] Ref<ClearColorValue> pColor,
        [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange pRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearDepthStencilImage")]
    void CmdClearDepthStencilImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle image,
        ImageLayout imageLayout,
        [NativeTypeName("const VkClearDepthStencilValue *")] ClearDepthStencilValue* pDepthStencil,
        [NativeTypeName("uint32_t")] uint rangeCount,
        [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange* pRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearDepthStencilImage")]
    void CmdClearDepthStencilImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle image,
        ImageLayout imageLayout,
        [NativeTypeName("const VkClearDepthStencilValue *")]
            Ref<ClearDepthStencilValue> pDepthStencil,
        [NativeTypeName("uint32_t")] uint rangeCount,
        [NativeTypeName("const VkImageSubresourceRange *")] Ref<ImageSubresourceRange> pRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdClearDepthStencilImage")]
    void CmdClearDepthStencilImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle image,
        ImageLayout imageLayout,
        [NativeTypeName("const VkClearDepthStencilValue *")]
            Ref<ClearDepthStencilValue> pDepthStencil,
        [NativeTypeName("const VkImageSubresourceRange *")] ImageSubresourceRange pRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdControlVideoCodingKHR")]
    void CmdControlVideoCodingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoCodingControlInfoKHR *")]
            VideoCodingControlInfoKHR* pCodingControlInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdControlVideoCodingKHR")]
    void CmdControlVideoCodingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoCodingControlInfoKHR *")]
            Ref<VideoCodingControlInfoKHR> pCodingControlInfo
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdConvertCooperativeVectorMatrixNV")]
    void CmdConvertCooperativeVectorMatrixNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
            ConvertCooperativeVectorMatrixInfoNV* pInfos
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdConvertCooperativeVectorMatrixNV")]
    void CmdConvertCooperativeVectorMatrixNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint infoCount,
        [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
            Ref<ConvertCooperativeVectorMatrixInfoNV> pInfos
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdConvertCooperativeVectorMatrixNV")]
    void CmdConvertCooperativeVectorMatrixNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
            ConvertCooperativeVectorMatrixInfoNV pInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureKHR")]
    void CmdCopyAccelerationStructureKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
            CopyAccelerationStructureInfoKHR* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureKHR")]
    void CmdCopyAccelerationStructureKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
            Ref<CopyAccelerationStructureInfoKHR> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureNV")]
    void CmdCopyAccelerationStructureNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle dst,
        [NativeTypeName("VkAccelerationStructureNV")] AccelerationStructureNVHandle src,
        CopyAccelerationStructureModeKHR mode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureToMemoryKHR")]
    void CmdCopyAccelerationStructureToMemoryKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
            CopyAccelerationStructureToMemoryInfoKHR* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyAccelerationStructureToMemoryKHR")]
    void CmdCopyAccelerationStructureToMemoryKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
            Ref<CopyAccelerationStructureToMemoryInfoKHR> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer")]
    void CmdCopyBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkBufferCopy *")] BufferCopy* pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer")]
    void CmdCopyBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkBufferCopy *")] Ref<BufferCopy> pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer")]
    void CmdCopyBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("const VkBufferCopy *")] BufferCopy pRegions
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2")]
    void CmdCopyBuffer2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferInfo2 *")] CopyBufferInfo2* pCopyBufferInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2")]
    void CmdCopyBuffer2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferInfo2 *")] Ref<CopyBufferInfo2> pCopyBufferInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2KHR")]
    void CmdCopyBuffer2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferInfo2 *")] CopyBufferInfo2* pCopyBufferInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBuffer2KHR")]
    void CmdCopyBuffer2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferInfo2 *")] Ref<CopyBufferInfo2> pCopyBufferInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage")]
    void CmdCopyBufferToImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy* pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage")]
    void CmdCopyBufferToImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkBufferImageCopy *")] Ref<BufferImageCopy> pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage")]
    void CmdCopyBufferToImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle srcBuffer,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy pRegions
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2")]
    void CmdCopyBufferToImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
            CopyBufferToImageInfo2* pCopyBufferToImageInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2")]
    void CmdCopyBufferToImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
            Ref<CopyBufferToImageInfo2> pCopyBufferToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2KHR")]
    void CmdCopyBufferToImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
            CopyBufferToImageInfo2* pCopyBufferToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyBufferToImage2KHR")]
    void CmdCopyBufferToImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyBufferToImageInfo2 *")]
            Ref<CopyBufferToImageInfo2> pCopyBufferToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage")]
    void CmdCopyImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkImageCopy *")] ImageCopy* pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage")]
    void CmdCopyImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkImageCopy *")] Ref<ImageCopy> pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage")]
    void CmdCopyImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("const VkImageCopy *")] ImageCopy pRegions
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2")]
    void CmdCopyImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageInfo2 *")] CopyImageInfo2* pCopyImageInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2")]
    void CmdCopyImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageInfo2 *")] Ref<CopyImageInfo2> pCopyImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2KHR")]
    void CmdCopyImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageInfo2 *")] CopyImageInfo2* pCopyImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImage2KHR")]
    void CmdCopyImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageInfo2 *")] Ref<CopyImageInfo2> pCopyImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer")]
    void CmdCopyImageToBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy* pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer")]
    void CmdCopyImageToBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkBufferImageCopy *")] Ref<BufferImageCopy> pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer")]
    void CmdCopyImageToBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("const VkBufferImageCopy *")] BufferImageCopy pRegions
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2")]
    void CmdCopyImageToBuffer2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
            CopyImageToBufferInfo2* pCopyImageToBufferInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2")]
    void CmdCopyImageToBuffer2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
            Ref<CopyImageToBufferInfo2> pCopyImageToBufferInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2KHR")]
    void CmdCopyImageToBuffer2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
            CopyImageToBufferInfo2* pCopyImageToBufferInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyImageToBuffer2KHR")]
    void CmdCopyImageToBuffer2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyImageToBufferInfo2 *")]
            Ref<CopyImageToBufferInfo2> pCopyImageToBufferInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_copy_memory_indirect"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryIndirectNV")]
    void CmdCopyMemoryIndirectNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
        [NativeTypeName("uint32_t")] uint copyCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToAccelerationStructureKHR")]
    void CmdCopyMemoryToAccelerationStructureKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
            CopyMemoryToAccelerationStructureInfoKHR* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToAccelerationStructureKHR")]
    void CmdCopyMemoryToAccelerationStructureKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
            Ref<CopyMemoryToAccelerationStructureInfoKHR> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_copy_memory_indirect"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToImageIndirectNV")]
    void CmdCopyMemoryToImageIndirectNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
        [NativeTypeName("uint32_t")] uint copyCount,
        [NativeTypeName("uint32_t")] uint stride,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("const VkImageSubresourceLayers *")]
            ImageSubresourceLayers* pImageSubresources
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_copy_memory_indirect"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToImageIndirectNV")]
    void CmdCopyMemoryToImageIndirectNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
        [NativeTypeName("uint32_t")] uint copyCount,
        [NativeTypeName("uint32_t")] uint stride,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("const VkImageSubresourceLayers *")]
            Ref<ImageSubresourceLayers> pImageSubresources
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_copy_memory_indirect"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToImageIndirectNV")]
    void CmdCopyMemoryToImageIndirectNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDeviceAddress")] ulong copyBufferAddress,
        [NativeTypeName("uint32_t")] uint stride,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("const VkImageSubresourceLayers *")]
            ImageSubresourceLayers pImageSubresources
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToMicromapEXT")]
    void CmdCopyMemoryToMicromapEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")] CopyMemoryToMicromapInfoEXT* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMemoryToMicromapEXT")]
    void CmdCopyMemoryToMicromapEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")]
            Ref<CopyMemoryToMicromapInfoEXT> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapEXT")]
    void CmdCopyMicromapEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMicromapInfoEXT *")] CopyMicromapInfoEXT* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapEXT")]
    void CmdCopyMicromapEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMicromapInfoEXT *")] Ref<CopyMicromapInfoEXT> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapToMemoryEXT")]
    void CmdCopyMicromapToMemoryEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")] CopyMicromapToMemoryInfoEXT* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyMicromapToMemoryEXT")]
    void CmdCopyMicromapToMemoryEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")]
            Ref<CopyMicromapToMemoryInfoEXT> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCopyQueryPoolResults")]
    void CmdCopyQueryPoolResults(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery,
        [NativeTypeName("uint32_t")] uint queryCount,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("VkDeviceSize")] ulong dstOffset,
        [NativeTypeName("VkDeviceSize")] ulong stride,
        [NativeTypeName("VkQueryResultFlags")] uint flags
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCudaLaunchKernelNV")]
    void CmdCudaLaunchKernelNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCudaLaunchInfoNV *")] CudaLaunchInfoNV* pLaunchInfo
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCudaLaunchKernelNV")]
    void CmdCudaLaunchKernelNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCudaLaunchInfoNV *")] Ref<CudaLaunchInfoNV> pLaunchInfo
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCuLaunchKernelNVX")]
    void CmdCuLaunchKernelNVX(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCuLaunchInfoNVX *")] CuLaunchInfoNVX* pLaunchInfo
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdCuLaunchKernelNVX")]
    void CmdCuLaunchKernelNVX(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCuLaunchInfoNVX *")] Ref<CuLaunchInfoNVX> pLaunchInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerBeginEXT")]
    void CmdDebugMarkerBeginEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")] DebugMarkerMarkerInfoEXT* pMarkerInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerBeginEXT")]
    void CmdDebugMarkerBeginEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")]
            Ref<DebugMarkerMarkerInfoEXT> pMarkerInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerEndEXT")]
    void CmdDebugMarkerEndEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerInsertEXT")]
    void CmdDebugMarkerInsertEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")] DebugMarkerMarkerInfoEXT* pMarkerInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDebugMarkerInsertEXT")]
    void CmdDebugMarkerInsertEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugMarkerMarkerInfoEXT *")]
            Ref<DebugMarkerMarkerInfoEXT> pMarkerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_decode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDecodeVideoKHR")]
    void CmdDecodeVideoKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoDecodeInfoKHR *")] VideoDecodeInfoKHR* pDecodeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_decode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDecodeVideoKHR")]
    void CmdDecodeVideoKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoDecodeInfoKHR *")] Ref<VideoDecodeInfoKHR> pDecodeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_memory_decompression"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryIndirectCountNV")]
    void CmdDecompressMemoryIndirectCountNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDeviceAddress")] ulong indirectCommandsAddress,
        [NativeTypeName("VkDeviceAddress")] ulong indirectCommandsCountAddress,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_memory_decompression"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryNV")]
    void CmdDecompressMemoryNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint decompressRegionCount,
        [NativeTypeName("const VkDecompressMemoryRegionNV *")]
            DecompressMemoryRegionNV* pDecompressMemoryRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_memory_decompression"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryNV")]
    void CmdDecompressMemoryNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint decompressRegionCount,
        [NativeTypeName("const VkDecompressMemoryRegionNV *")]
            Ref<DecompressMemoryRegionNV> pDecompressMemoryRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_memory_decompression"],
        ImpliesSets = [
            "VK_KHR_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_KHR_buffer_device_address+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDecompressMemoryNV")]
    void CmdDecompressMemoryNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDecompressMemoryRegionNV *")]
            DecompressMemoryRegionNV pDecompressMemoryRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDispatch")]
    void CmdDispatch(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint groupCountX,
        [NativeTypeName("uint32_t")] uint groupCountY,
        [NativeTypeName("uint32_t")] uint groupCountZ
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchBase")]
    void CmdDispatchBase(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint baseGroupX,
        [NativeTypeName("uint32_t")] uint baseGroupY,
        [NativeTypeName("uint32_t")] uint baseGroupZ,
        [NativeTypeName("uint32_t")] uint groupCountX,
        [NativeTypeName("uint32_t")] uint groupCountY,
        [NativeTypeName("uint32_t")] uint groupCountZ
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_device_group"],
        ImpliesSets = ["VK_KHR_device_group_creation"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchBaseKHR")]
    void CmdDispatchBaseKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint baseGroupX,
        [NativeTypeName("uint32_t")] uint baseGroupY,
        [NativeTypeName("uint32_t")] uint baseGroupZ,
        [NativeTypeName("uint32_t")] uint groupCountX,
        [NativeTypeName("uint32_t")] uint groupCountY,
        [NativeTypeName("uint32_t")] uint groupCountZ
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchIndirect")]
    void CmdDispatchIndirect(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_shading"],
        ImpliesSets = [
            "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDispatchTileQCOM")]
    void CmdDispatchTileQCOM([NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer);

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDraw")]
    void CmdDraw(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint vertexCount,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstVertex,
        [NativeTypeName("uint32_t")] uint firstInstance
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_HUAWEI_cluster_culling_shader"],
        ImpliesSets = [
            "VK_HUAWEI_cluster_culling_shader+VK_KHR_get_physical_device_properties2",
            "VK_HUAWEI_cluster_culling_shader+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawClusterHUAWEI")]
    void CmdDrawClusterHuawei(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint groupCountX,
        [NativeTypeName("uint32_t")] uint groupCountY,
        [NativeTypeName("uint32_t")] uint groupCountZ
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_HUAWEI_cluster_culling_shader"],
        ImpliesSets = [
            "VK_HUAWEI_cluster_culling_shader+VK_KHR_get_physical_device_properties2",
            "VK_HUAWEI_cluster_culling_shader+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawClusterIndirectHUAWEI")]
    void CmdDrawClusterIndirectHuawei(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexed")]
    void CmdDrawIndexed(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint indexCount,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstIndex,
        [NativeTypeName("int32_t")] int vertexOffset,
        [NativeTypeName("uint32_t")] uint firstInstance
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirect")]
    void CmdDrawIndexedIndirect(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirectCount")]
    void CmdDrawIndexedIndirectCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile("vulkan", ["VK_AMD_draw_indirect_count"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirectCountAMD")]
    void CmdDrawIndexedIndirectCountAMD(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_draw_indirect_count"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndexedIndirectCountKHR")]
    void CmdDrawIndexedIndirectCountKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirect")]
    void CmdDrawIndirect(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectByteCountEXT")]
    void CmdDrawIndirectByteCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstInstance,
        [NativeTypeName("VkBuffer")] BufferHandle counterBuffer,
        [NativeTypeName("VkDeviceSize")] ulong counterBufferOffset,
        [NativeTypeName("uint32_t")] uint counterOffset,
        [NativeTypeName("uint32_t")] uint vertexStride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectCount")]
    void CmdDrawIndirectCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile("vulkan", ["VK_AMD_draw_indirect_count"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectCountAMD")]
    void CmdDrawIndirectCountAMD(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_draw_indirect_count"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawIndirectCountKHR")]
    void CmdDrawIndirectCountKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_mesh_shader"],
        ImpliesSets = ["VK_EXT_mesh_shader+VK_KHR_spirv_1_4", "VK_EXT_mesh_shader+VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksEXT")]
    void CmdDrawMeshTasksEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint groupCountX,
        [NativeTypeName("uint32_t")] uint groupCountY,
        [NativeTypeName("uint32_t")] uint groupCountZ
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_mesh_shader+VK_KHR_draw_indirect_count", "VK_EXT_mesh_shader+VK_VERSION_1_2"],
        ImpliesSets = ["VK_EXT_mesh_shader+VK_KHR_spirv_1_4", "VK_EXT_mesh_shader+VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectCountEXT")]
    void CmdDrawMeshTasksIndirectCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_mesh_shader+VK_KHR_draw_indirect_count", "VK_NV_mesh_shader+VK_VERSION_1_2"],
        ImpliesSets = [
            "VK_NV_mesh_shader+VK_KHR_get_physical_device_properties2",
            "VK_NV_mesh_shader+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectCountNV")]
    void CmdDrawMeshTasksIndirectCountNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkBuffer")] BufferHandle countBuffer,
        [NativeTypeName("VkDeviceSize")] ulong countBufferOffset,
        [NativeTypeName("uint32_t")] uint maxDrawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_mesh_shader"],
        ImpliesSets = ["VK_EXT_mesh_shader+VK_KHR_spirv_1_4", "VK_EXT_mesh_shader+VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectEXT")]
    void CmdDrawMeshTasksIndirectEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_mesh_shader"],
        ImpliesSets = [
            "VK_NV_mesh_shader+VK_KHR_get_physical_device_properties2",
            "VK_NV_mesh_shader+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksIndirectNV")]
    void CmdDrawMeshTasksIndirectNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_mesh_shader"],
        ImpliesSets = [
            "VK_NV_mesh_shader+VK_KHR_get_physical_device_properties2",
            "VK_NV_mesh_shader+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMeshTasksNV")]
    void CmdDrawMeshTasksNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint taskCount,
        [NativeTypeName("uint32_t")] uint firstTask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_multi_draw"],
        ImpliesSets = [
            "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
            "VK_EXT_multi_draw+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiEXT")]
    void CmdDrawMultiEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("const VkMultiDrawInfoEXT *")] MultiDrawInfoEXT* pVertexInfo,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstInstance,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_multi_draw"],
        ImpliesSets = [
            "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
            "VK_EXT_multi_draw+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiEXT")]
    void CmdDrawMultiEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("const VkMultiDrawInfoEXT *")] Ref<MultiDrawInfoEXT> pVertexInfo,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstInstance,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_multi_draw"],
        ImpliesSets = [
            "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
            "VK_EXT_multi_draw+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiEXT")]
    void CmdDrawMultiEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkMultiDrawInfoEXT *")] MultiDrawInfoEXT pVertexInfo,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstInstance,
        [NativeTypeName("uint32_t")] uint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_multi_draw"],
        ImpliesSets = [
            "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
            "VK_EXT_multi_draw+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiIndexedEXT")]
    void CmdDrawMultiIndexedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("const VkMultiDrawIndexedInfoEXT *")] MultiDrawIndexedInfoEXT* pIndexInfo,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstInstance,
        [NativeTypeName("uint32_t")] uint stride,
        [NativeTypeName("const int32_t *")] int* pVertexOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_multi_draw"],
        ImpliesSets = [
            "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
            "VK_EXT_multi_draw+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiIndexedEXT")]
    void CmdDrawMultiIndexedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint drawCount,
        [NativeTypeName("const VkMultiDrawIndexedInfoEXT *")]
            Ref<MultiDrawIndexedInfoEXT> pIndexInfo,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstInstance,
        [NativeTypeName("uint32_t")] uint stride,
        [NativeTypeName("const int32_t *")] Ref<int> pVertexOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_multi_draw"],
        ImpliesSets = [
            "VK_EXT_multi_draw+VK_KHR_get_physical_device_properties2",
            "VK_EXT_multi_draw+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdDrawMultiIndexedEXT")]
    void CmdDrawMultiIndexedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkMultiDrawIndexedInfoEXT *")] MultiDrawIndexedInfoEXT pIndexInfo,
        [NativeTypeName("uint32_t")] uint instanceCount,
        [NativeTypeName("uint32_t")] uint firstInstance,
        [NativeTypeName("uint32_t")] uint stride,
        [NativeTypeName("const int32_t *")] Ref<int> pVertexOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_encode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEncodeVideoKHR")]
    void CmdEncodeVideoKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoEncodeInfoKHR *")] VideoEncodeInfoKHR* pEncodeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_encode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEncodeVideoKHR")]
    void CmdEncodeVideoKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoEncodeInfoKHR *")] Ref<VideoEncodeInfoKHR> pEncodeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_conditional_rendering"],
        ImpliesSets = [
            "VK_EXT_conditional_rendering+VK_KHR_get_physical_device_properties2",
            "VK_EXT_conditional_rendering+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndConditionalRenderingEXT")]
    void CmdEndConditionalRenderingEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndDebugUtilsLabelEXT")]
    void CmdEndDebugUtilsLabelEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_shading"],
        ImpliesSets = [
            "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndPerTileExecutionQCOM")]
    void CmdEndPerTileExecutionQCOM(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerTileEndInfoQCOM *")] PerTileEndInfoQCOM* pPerTileEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_shading"],
        ImpliesSets = [
            "VK_QCOM_tile_shading+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_shading+VK_QCOM_tile_properties",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndPerTileExecutionQCOM")]
    void CmdEndPerTileExecutionQCOM(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerTileEndInfoQCOM *")] Ref<PerTileEndInfoQCOM> pPerTileEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndQuery")]
    void CmdEndQuery(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint query
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndQueryIndexedEXT")]
    void CmdEndQueryIndexedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint query,
        [NativeTypeName("uint32_t")] uint index
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRendering")]
    void CmdEndRendering([NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer);

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_fragment_density_map_offset"],
        ImpliesSets = [
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_VERSION_1_3",
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_VERSION_1_3",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_VERSION_1_3",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRendering2EXT")]
    void CmdEndRendering2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingEndInfoEXT *")] RenderingEndInfoEXT* pRenderingEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_fragment_density_map_offset"],
        ImpliesSets = [
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_KHR_create_renderpass2+VK_VERSION_1_3",
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_KHR_get_physical_device_properties2+VK_VERSION_1_2+VK_VERSION_1_3",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_KHR_create_renderpass2+VK_VERSION_1_3",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_KHR_dynamic_rendering",
            "VK_EXT_fragment_density_map+VK_VERSION_1_1+VK_VERSION_1_2+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRendering2EXT")]
    void CmdEndRendering2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingEndInfoEXT *")] Ref<RenderingEndInfoEXT> pRenderingEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_dynamic_rendering"],
        ImpliesSets = [
            "VK_KHR_depth_stencil_resolve+VK_KHR_get_physical_device_properties2",
            "VK_KHR_depth_stencil_resolve+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderingKHR")]
    void CmdEndRenderingKHR([NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer);

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass")]
    void CmdEndRenderPass([NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer);

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2")]
    void CmdEndRenderPass2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2")]
    void CmdEndRenderPass2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2KHR")]
    void CmdEndRenderPass2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndRenderPass2KHR")]
    void CmdEndRenderPass2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndTransformFeedbackEXT")]
    void CmdEndTransformFeedbackEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstCounterBuffer,
        [NativeTypeName("uint32_t")] uint counterBufferCount,
        [NativeTypeName("const VkBuffer *")] BufferHandle* pCounterBuffers,
        [NativeTypeName("const VkDeviceSize *")] ulong* pCounterBufferOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_transform_feedback+VK_KHR_get_physical_device_properties2",
            "VK_EXT_transform_feedback+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndTransformFeedbackEXT")]
    void CmdEndTransformFeedbackEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstCounterBuffer,
        [NativeTypeName("uint32_t")] uint counterBufferCount,
        [NativeTypeName("const VkBuffer *")] Ref<BufferHandle> pCounterBuffers,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pCounterBufferOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndVideoCodingKHR")]
    void CmdEndVideoCodingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoEndCodingInfoKHR *")] VideoEndCodingInfoKHR* pEndCodingInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdEndVideoCodingKHR")]
    void CmdEndVideoCodingKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkVideoEndCodingInfoKHR *")]
            Ref<VideoEndCodingInfoKHR> pEndCodingInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteCommands")]
    void CmdExecuteCommand(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteCommands")]
    void CmdExecuteCommands(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint commandBufferCount,
        [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle* pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteCommands")]
    void CmdExecuteCommands(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint commandBufferCount,
        [NativeTypeName("const VkCommandBuffer *")] Ref<CommandBufferHandle> pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsEXT")]
    void CmdExecuteGeneratedCommandsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint isPreprocessed,
        [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
            GeneratedCommandsInfoEXT* pGeneratedCommandsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsEXT")]
    void CmdExecuteGeneratedCommandsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint isPreprocessed,
        [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
            Ref<GeneratedCommandsInfoEXT> pGeneratedCommandsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsNV")]
    void CmdExecuteGeneratedCommandsNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint isPreprocessed,
        [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
            GeneratedCommandsInfoNV* pGeneratedCommandsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdExecuteGeneratedCommandsNV")]
    void CmdExecuteGeneratedCommandsNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint isPreprocessed,
        [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
            Ref<GeneratedCommandsInfoNV> pGeneratedCommandsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdFillBuffer")]
    void CmdFillBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("VkDeviceSize")] ulong dstOffset,
        [NativeTypeName("VkDeviceSize")] ulong size,
        [NativeTypeName("uint32_t")] uint data
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdInsertDebugUtilsLabelEXT")]
    void CmdInsertDebugUtilsLabelEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdInsertDebugUtilsLabelEXT")]
    void CmdInsertDebugUtilsLabelEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass")]
    void CmdNextSubpass(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        SubpassContents contents
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2")]
    void CmdNextSubpass2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo,
        [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2")]
    void CmdNextSubpass2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo,
        [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2KHR")]
    void CmdNextSubpass2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassBeginInfo *")] SubpassBeginInfo* pSubpassBeginInfo,
        [NativeTypeName("const VkSubpassEndInfo *")] SubpassEndInfo* pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdNextSubpass2KHR")]
    void CmdNextSubpass2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSubpassBeginInfo *")] Ref<SubpassBeginInfo> pSubpassBeginInfo,
        [NativeTypeName("const VkSubpassEndInfo *")] Ref<SubpassEndInfo> pSubpassEndInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdOpticalFlowExecuteNV")]
    void CmdOpticalFlowExecuteNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
        [NativeTypeName("const VkOpticalFlowExecuteInfoNV *")]
            OpticalFlowExecuteInfoNV* pExecuteInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdOpticalFlowExecuteNV")]
    void CmdOpticalFlowExecuteNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
        [NativeTypeName("const VkOpticalFlowExecuteInfoNV *")]
            Ref<OpticalFlowExecuteInfoNV> pExecuteInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier")]
    void CmdPipelineBarrier(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
        [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
        [NativeTypeName("VkDependencyFlags")] uint dependencyFlags,
        [NativeTypeName("uint32_t")] uint memoryBarrierCount,
        [NativeTypeName("const VkMemoryBarrier *")] MemoryBarrier* pMemoryBarriers,
        [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
        [NativeTypeName("const VkBufferMemoryBarrier *")]
            BufferMemoryBarrier* pBufferMemoryBarriers,
        [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
        [NativeTypeName("const VkImageMemoryBarrier *")] ImageMemoryBarrier* pImageMemoryBarriers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier")]
    void CmdPipelineBarrier(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
        [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
        [NativeTypeName("VkDependencyFlags")] uint dependencyFlags,
        [NativeTypeName("uint32_t")] uint memoryBarrierCount,
        [NativeTypeName("const VkMemoryBarrier *")] Ref<MemoryBarrier> pMemoryBarriers,
        [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
        [NativeTypeName("const VkBufferMemoryBarrier *")]
            Ref<BufferMemoryBarrier> pBufferMemoryBarriers,
        [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
        [NativeTypeName("const VkImageMemoryBarrier *")]
            Ref<ImageMemoryBarrier> pImageMemoryBarriers
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2")]
    void CmdPipelineBarrier2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2")]
    void CmdPipelineBarrier2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2KHR")]
    void CmdPipelineBarrier2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPipelineBarrier2KHR")]
    void CmdPipelineBarrier2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsEXT")]
    void CmdPreprocessGeneratedCommandsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
            GeneratedCommandsInfoEXT* pGeneratedCommandsInfo,
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle stateCommandBuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsEXT")]
    void CmdPreprocessGeneratedCommandsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkGeneratedCommandsInfoEXT *")]
            Ref<GeneratedCommandsInfoEXT> pGeneratedCommandsInfo,
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle stateCommandBuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsNV")]
    void CmdPreprocessGeneratedCommandsNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
            GeneratedCommandsInfoNV* pGeneratedCommandsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPreprocessGeneratedCommandsNV")]
    void CmdPreprocessGeneratedCommandsNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkGeneratedCommandsInfoNV *")]
            Ref<GeneratedCommandsInfoNV> pGeneratedCommandsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants")]
    void CmdPushConstants(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("VkShaderStageFlags")] uint stageFlags,
        [NativeTypeName("uint32_t")] uint offset,
        [NativeTypeName("uint32_t")] uint size,
        [NativeTypeName("const void *")] void* pValues
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants")]
    void CmdPushConstants(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("VkShaderStageFlags")] uint stageFlags,
        [NativeTypeName("uint32_t")] uint offset,
        [NativeTypeName("uint32_t")] uint size,
        [NativeTypeName("const void *")] Ref pValues
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2")]
    void CmdPushConstants2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushConstantsInfo *")] PushConstantsInfo* pPushConstantsInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2")]
    void CmdPushConstants2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushConstantsInfo *")] Ref<PushConstantsInfo> pPushConstantsInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2KHR")]
    void CmdPushConstants2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushConstantsInfo *")] PushConstantsInfo* pPushConstantsInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance6"], ImpliesSets = ["VK_VERSION_1_1"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushConstants2KHR")]
    void CmdPushConstants2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushConstantsInfo *")] Ref<PushConstantsInfo> pPushConstantsInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet")]
    void CmdPushDescriptorSet(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("uint32_t")] uint descriptorWriteCount,
        [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet* pDescriptorWrites
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet")]
    void CmdPushDescriptorSet(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("uint32_t")] uint descriptorWriteCount,
        [NativeTypeName("const VkWriteDescriptorSet *")] Ref<WriteDescriptorSet> pDescriptorWrites
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet")]
    void CmdPushDescriptorSet(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet pDescriptorWrites
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2")]
    void CmdPushDescriptorSet2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetInfo *")]
            PushDescriptorSetInfo* pPushDescriptorSetInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2")]
    void CmdPushDescriptorSet2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetInfo *")]
            Ref<PushDescriptorSetInfo> pPushDescriptorSetInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2KHR")]
    void CmdPushDescriptorSet2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetInfo *")]
            PushDescriptorSetInfo* pPushDescriptorSetInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSet2KHR")]
    void CmdPushDescriptorSet2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetInfo *")]
            Ref<PushDescriptorSetInfo> pPushDescriptorSetInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_push_descriptor"],
        ImpliesSets = [
            "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
            "VK_KHR_push_descriptor+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetKHR")]
    void CmdPushDescriptorSetKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("uint32_t")] uint descriptorWriteCount,
        [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet* pDescriptorWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_push_descriptor"],
        ImpliesSets = [
            "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
            "VK_KHR_push_descriptor+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetKHR")]
    void CmdPushDescriptorSetKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("uint32_t")] uint descriptorWriteCount,
        [NativeTypeName("const VkWriteDescriptorSet *")] Ref<WriteDescriptorSet> pDescriptorWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_push_descriptor"],
        ImpliesSets = [
            "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
            "VK_KHR_push_descriptor+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetKHR")]
    void CmdPushDescriptorSetKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet pDescriptorWrites
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate")]
    void CmdPushDescriptorSetWithTemplate(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("const void *")] void* pData
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate")]
    void CmdPushDescriptorSetWithTemplate(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("const void *")] Ref pData
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2")]
    void CmdPushDescriptorSetWithTemplate2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
            PushDescriptorSetWithTemplateInfo* pPushDescriptorSetWithTemplateInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2")]
    void CmdPushDescriptorSetWithTemplate2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
            Ref<PushDescriptorSetWithTemplateInfo> pPushDescriptorSetWithTemplateInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2KHR")]
    void CmdPushDescriptorSetWithTemplate2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
            PushDescriptorSetWithTemplateInfo* pPushDescriptorSetWithTemplateInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance6", "VK_KHR_push_descriptor"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplate2KHR")]
    void CmdPushDescriptorSetWithTemplate2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPushDescriptorSetWithTemplateInfo *")]
            Ref<PushDescriptorSetWithTemplateInfo> pPushDescriptorSetWithTemplateInfo
    );

    [SupportedApiProfile(
        "vulkan",
        [
            "VK_KHR_push_descriptor+VK_KHR_descriptor_update_template",
            "VK_KHR_push_descriptor+VK_VERSION_1_1",
        ],
        ImpliesSets = [
            "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
            "VK_KHR_push_descriptor+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplateKHR")]
    void CmdPushDescriptorSetWithTemplateKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("const void *")] void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        [
            "VK_KHR_push_descriptor+VK_KHR_descriptor_update_template",
            "VK_KHR_push_descriptor+VK_VERSION_1_1",
        ],
        ImpliesSets = [
            "VK_KHR_push_descriptor+VK_KHR_get_physical_device_properties2",
            "VK_KHR_push_descriptor+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdPushDescriptorSetWithTemplateKHR")]
    void CmdPushDescriptorSetWithTemplateKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint set,
        [NativeTypeName("const void *")] Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResetEvent")]
    void CmdResetEvent(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("VkPipelineStageFlags")] uint stageMask
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResetEvent2")]
    void CmdResetEvent2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("VkPipelineStageFlags2")] ulong stageMask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResetEvent2KHR")]
    void CmdResetEvent2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("VkPipelineStageFlags2")] ulong stageMask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResetQueryPool")]
    void CmdResetQueryPool(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery,
        [NativeTypeName("uint32_t")] uint queryCount
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage")]
    void CmdResolveImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkImageResolve *")] ImageResolve* pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage")]
    void CmdResolveImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("uint32_t")] uint regionCount,
        [NativeTypeName("const VkImageResolve *")] Ref<ImageResolve> pRegions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage")]
    void CmdResolveImage(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImage")] ImageHandle srcImage,
        ImageLayout srcImageLayout,
        [NativeTypeName("VkImage")] ImageHandle dstImage,
        ImageLayout dstImageLayout,
        [NativeTypeName("const VkImageResolve *")] ImageResolve pRegions
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2")]
    void CmdResolveImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkResolveImageInfo2 *")] ResolveImageInfo2* pResolveImageInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2")]
    void CmdResolveImage2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkResolveImageInfo2 *")] Ref<ResolveImageInfo2> pResolveImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2KHR")]
    void CmdResolveImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkResolveImageInfo2 *")] ResolveImageInfo2* pResolveImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_copy_commands2"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdResolveImage2KHR")]
    void CmdResolveImage2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkResolveImageInfo2 *")] Ref<ResolveImageInfo2> pResolveImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetAlphaToCoverageEnableEXT")]
    void CmdSetAlphaToCoverageEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint alphaToCoverageEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetAlphaToOneEnableEXT")]
    void CmdSetAlphaToOneEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint alphaToOneEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_attachment_feedback_loop_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_attachment_feedback_loop_layout+VK_KHR_get_physical_device_properties2",
            "VK_EXT_attachment_feedback_loop_layout+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetAttachmentFeedbackLoopEnableEXT")]
    void CmdSetAttachmentFeedbackLoopEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkImageAspectFlags")] uint aspectMask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetBlendConstants")]
    void CmdSetBlendConstants(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const float[4]")] float* blendConstants
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetBlendConstants")]
    void CmdSetBlendConstants(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const float[4]")] Ref<float> blendConstants
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_diagnostic_checkpoints"],
        ImpliesSets = [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCheckpointNV")]
    void CmdSetCheckpointNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const void *")] void* pCheckpointMarker
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_diagnostic_checkpoints"],
        ImpliesSets = [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCheckpointNV")]
    void CmdSetCheckpointNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const void *")] Ref pCheckpointMarker
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
            "VK_NV_shading_rate_image+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoarseSampleOrderNV")]
    void CmdSetCoarseSampleOrderNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        CoarseSampleOrderTypeNV sampleOrderType,
        [NativeTypeName("uint32_t")] uint customSampleOrderCount,
        [NativeTypeName("const VkCoarseSampleOrderCustomNV *")]
            CoarseSampleOrderCustomNV* pCustomSampleOrders
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
            "VK_NV_shading_rate_image+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoarseSampleOrderNV")]
    void CmdSetCoarseSampleOrderNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        CoarseSampleOrderTypeNV sampleOrderType,
        [NativeTypeName("uint32_t")] uint customSampleOrderCount,
        [NativeTypeName("const VkCoarseSampleOrderCustomNV *")]
            Ref<CoarseSampleOrderCustomNV> pCustomSampleOrders
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
            "VK_NV_shading_rate_image+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoarseSampleOrderNV")]
    void CmdSetCoarseSampleOrderNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        CoarseSampleOrderTypeNV sampleOrderType,
        [NativeTypeName("const VkCoarseSampleOrderCustomNV *")]
            CoarseSampleOrderCustomNV pCustomSampleOrders
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_blend_operation_advanced", "VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendAdvancedEXT")]
    void CmdSetColorBlendAdvancedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkColorBlendAdvancedEXT *")]
            ColorBlendAdvancedEXT* pColorBlendAdvanced
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_blend_operation_advanced", "VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendAdvancedEXT")]
    void CmdSetColorBlendAdvancedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkColorBlendAdvancedEXT *")]
            Ref<ColorBlendAdvancedEXT> pColorBlendAdvanced
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_blend_operation_advanced", "VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendAdvancedEXT")]
    void CmdSetColorBlendAdvancedEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("const VkColorBlendAdvancedEXT *")]
            ColorBlendAdvancedEXT pColorBlendAdvanced
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEnableEXT")]
    void CmdSetColorBlendEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkBool32 *")] uint* pColorBlendEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEnableEXT")]
    void CmdSetColorBlendEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkBool32 *")] Ref<uint> pColorBlendEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEnableEXT")]
    void CmdSetColorBlendEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("const VkBool32 *")] uint pColorBlendEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEquationEXT")]
    void CmdSetColorBlendEquationEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkColorBlendEquationEXT *")]
            ColorBlendEquationEXT* pColorBlendEquations
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEquationEXT")]
    void CmdSetColorBlendEquationEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkColorBlendEquationEXT *")]
            Ref<ColorBlendEquationEXT> pColorBlendEquations
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorBlendEquationEXT")]
    void CmdSetColorBlendEquationEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("const VkColorBlendEquationEXT *")]
            ColorBlendEquationEXT pColorBlendEquations
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_color_write_enable"],
        ImpliesSets = [
            "VK_EXT_color_write_enable+VK_KHR_get_physical_device_properties2",
            "VK_EXT_color_write_enable+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteEnableEXT")]
    void CmdSetColorWriteEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkBool32 *")] uint* pColorWriteEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_color_write_enable"],
        ImpliesSets = [
            "VK_EXT_color_write_enable+VK_KHR_get_physical_device_properties2",
            "VK_EXT_color_write_enable+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteEnableEXT")]
    void CmdSetColorWriteEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkBool32 *")] Ref<uint> pColorWriteEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_color_write_enable"],
        ImpliesSets = [
            "VK_EXT_color_write_enable+VK_KHR_get_physical_device_properties2",
            "VK_EXT_color_write_enable+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteEnableEXT")]
    void CmdSetColorWriteEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkBool32 *")] uint pColorWriteEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteMaskEXT")]
    void CmdSetColorWriteMaskEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkColorComponentFlags *")] uint* pColorWriteMasks
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteMaskEXT")]
    void CmdSetColorWriteMaskEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("uint32_t")] uint attachmentCount,
        [NativeTypeName("const VkColorComponentFlags *")] Ref<uint> pColorWriteMasks
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetColorWriteMaskEXT")]
    void CmdSetColorWriteMaskEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstAttachment,
        [NativeTypeName("const VkColorComponentFlags *")] uint pColorWriteMasks
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_conservative_rasterization", "VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetConservativeRasterizationModeEXT")]
    void CmdSetConservativeRasterizationModeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        ConservativeRasterizationModeEXT conservativeRasterizationMode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationModeNV")]
    void CmdSetCoverageModulationModeNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        CoverageModulationModeNV coverageModulationMode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableEnableNV")]
    void CmdSetCoverageModulationTableEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint coverageModulationTableEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableNV")]
    void CmdSetCoverageModulationTableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint coverageModulationTableCount,
        [NativeTypeName("const float *")] float* pCoverageModulationTable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableNV")]
    void CmdSetCoverageModulationTableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint coverageModulationTableCount,
        [NativeTypeName("const float *")] Ref<float> pCoverageModulationTable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_framebuffer_mixed_samples"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageModulationTableNV")]
    void CmdSetCoverageModulationTableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const float *")] float pCoverageModulationTable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_coverage_reduction_mode"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageReductionModeNV")]
    void CmdSetCoverageReductionModeNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        CoverageReductionModeNV coverageReductionMode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_fragment_coverage_to_color"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageToColorEnableNV")]
    void CmdSetCoverageToColorEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint coverageToColorEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_fragment_coverage_to_color"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCoverageToColorLocationNV")]
    void CmdSetCoverageToColorLocationNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint coverageToColorLocation
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCullMode")]
    void CmdSetCullMode(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkCullModeFlags")] uint cullMode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetCullModeEXT")]
    void CmdSetCullModeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkCullModeFlags")] uint cullMode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBias")]
    void CmdSetDepthBias(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        float depthBiasConstantFactor,
        float depthBiasClamp,
        float depthBiasSlopeFactor
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_depth_bias_control"],
        ImpliesSets = [
            "VK_EXT_depth_bias_control+VK_KHR_get_physical_device_properties2",
            "VK_EXT_depth_bias_control+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBias2EXT")]
    void CmdSetDepthBias2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDepthBiasInfoEXT *")] DepthBiasInfoEXT* pDepthBiasInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_depth_bias_control"],
        ImpliesSets = [
            "VK_EXT_depth_bias_control+VK_KHR_get_physical_device_properties2",
            "VK_EXT_depth_bias_control+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBias2EXT")]
    void CmdSetDepthBias2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkDepthBiasInfoEXT *")] Ref<DepthBiasInfoEXT> pDepthBiasInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBiasEnable")]
    void CmdSetDepthBiasEnable(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthBiasEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state2"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBiasEnableEXT")]
    void CmdSetDepthBiasEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthBiasEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBounds")]
    void CmdSetDepthBounds(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        float minDepthBounds,
        float maxDepthBounds
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBoundsTestEnable")]
    void CmdSetDepthBoundsTestEnable(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthBoundsTestEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthBoundsTestEnableEXT")]
    void CmdSetDepthBoundsTestEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthBoundsTestEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClampEnableEXT")]
    void CmdSetDepthClampEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthClampEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_depth_clamp_control", "VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClampRangeEXT")]
    void CmdSetDepthClampRangeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        DepthClampModeEXT depthClampMode,
        [NativeTypeName("const VkDepthClampRangeEXT *")] DepthClampRangeEXT* pDepthClampRange
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_depth_clamp_control", "VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClampRangeEXT")]
    void CmdSetDepthClampRangeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        DepthClampModeEXT depthClampMode,
        [NativeTypeName("const VkDepthClampRangeEXT *")] Ref<DepthClampRangeEXT> pDepthClampRange
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_depth_clip_enable", "VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClipEnableEXT")]
    void CmdSetDepthClipEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthClipEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_depth_clip_control", "VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthClipNegativeOneToOneEXT")]
    void CmdSetDepthClipNegativeOneToOneEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint negativeOneToOne
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthCompareOp")]
    void CmdSetDepthCompareOp(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        CompareOp depthCompareOp
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthCompareOpEXT")]
    void CmdSetDepthCompareOpEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        CompareOp depthCompareOp
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthTestEnable")]
    void CmdSetDepthTestEnable(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthTestEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthTestEnableEXT")]
    void CmdSetDepthTestEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthTestEnable
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthWriteEnable")]
    void CmdSetDepthWriteEnable(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthWriteEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDepthWriteEnableEXT")]
    void CmdSetDepthWriteEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint depthWriteEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsets2EXT")]
    void CmdSetDescriptorBufferOffsets2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSetDescriptorBufferOffsetsInfoEXT *")]
            SetDescriptorBufferOffsetsInfoEXT* pSetDescriptorBufferOffsetsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer", "VK_KHR_maintenance6"],
        ImpliesSets = ["VK_VERSION_1_1"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsets2EXT")]
    void CmdSetDescriptorBufferOffsets2EXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSetDescriptorBufferOffsetsInfoEXT *")]
            Ref<SetDescriptorBufferOffsetsInfoEXT> pSetDescriptorBufferOffsetsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsetsEXT")]
    void CmdSetDescriptorBufferOffsetsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint firstSet,
        [NativeTypeName("uint32_t")] uint setCount,
        [NativeTypeName("const uint32_t *")] uint* pBufferIndices,
        [NativeTypeName("const VkDeviceSize *")] ulong* pOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDescriptorBufferOffsetsEXT")]
    void CmdSetDescriptorBufferOffsetsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint firstSet,
        [NativeTypeName("uint32_t")] uint setCount,
        [NativeTypeName("const uint32_t *")] Ref<uint> pBufferIndices,
        [NativeTypeName("const VkDeviceSize *")] Ref<ulong> pOffsets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDeviceMask")]
    void CmdSetDeviceMask(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint deviceMask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_device_group"],
        ImpliesSets = ["VK_KHR_device_group_creation"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDeviceMaskKHR")]
    void CmdSetDeviceMaskKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint deviceMask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_discard_rectangles"],
        ImpliesSets = [
            "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
            "VK_EXT_discard_rectangles+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEnableEXT")]
    void CmdSetDiscardRectangleEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint discardRectangleEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_discard_rectangles"],
        ImpliesSets = [
            "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
            "VK_EXT_discard_rectangles+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEXT")]
    void CmdSetDiscardRectangleEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstDiscardRectangle,
        [NativeTypeName("uint32_t")] uint discardRectangleCount,
        [NativeTypeName("const VkRect2D *")] Rect2D* pDiscardRectangles
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_discard_rectangles"],
        ImpliesSets = [
            "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
            "VK_EXT_discard_rectangles+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEXT")]
    void CmdSetDiscardRectangleEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstDiscardRectangle,
        [NativeTypeName("uint32_t")] uint discardRectangleCount,
        [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pDiscardRectangles
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_discard_rectangles"],
        ImpliesSets = [
            "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
            "VK_EXT_discard_rectangles+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleEXT")]
    void CmdSetDiscardRectangleEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstDiscardRectangle,
        [NativeTypeName("const VkRect2D *")] Rect2D pDiscardRectangles
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_discard_rectangles"],
        ImpliesSets = [
            "VK_EXT_discard_rectangles+VK_KHR_get_physical_device_properties2",
            "VK_EXT_discard_rectangles+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetDiscardRectangleModeEXT")]
    void CmdSetDiscardRectangleModeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        DiscardRectangleModeEXT discardRectangleMode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent")]
    void CmdSetEvent(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("VkPipelineStageFlags")] uint stageMask
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2")]
    void CmdSetEvent2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2")]
    void CmdSetEvent2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2KHR")]
    void CmdSetEvent2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetEvent2KHR")]
    void CmdSetEvent2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_scissor_exclusive"],
        ImpliesSets = [
            "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
            "VK_NV_scissor_exclusive+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorEnableNV")]
    void CmdSetExclusiveScissorEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
        [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
        [NativeTypeName("const VkBool32 *")] uint* pExclusiveScissorEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_scissor_exclusive"],
        ImpliesSets = [
            "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
            "VK_NV_scissor_exclusive+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorEnableNV")]
    void CmdSetExclusiveScissorEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
        [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
        [NativeTypeName("const VkBool32 *")] Ref<uint> pExclusiveScissorEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_scissor_exclusive"],
        ImpliesSets = [
            "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
            "VK_NV_scissor_exclusive+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorEnableNV")]
    void CmdSetExclusiveScissorEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
        [NativeTypeName("const VkBool32 *")] uint pExclusiveScissorEnables
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_scissor_exclusive"],
        ImpliesSets = [
            "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
            "VK_NV_scissor_exclusive+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorNV")]
    void CmdSetExclusiveScissorNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
        [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
        [NativeTypeName("const VkRect2D *")] Rect2D* pExclusiveScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_scissor_exclusive"],
        ImpliesSets = [
            "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
            "VK_NV_scissor_exclusive+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorNV")]
    void CmdSetExclusiveScissorNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
        [NativeTypeName("uint32_t")] uint exclusiveScissorCount,
        [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pExclusiveScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_scissor_exclusive"],
        ImpliesSets = [
            "VK_NV_scissor_exclusive+VK_KHR_get_physical_device_properties2",
            "VK_NV_scissor_exclusive+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetExclusiveScissorNV")]
    void CmdSetExclusiveScissorNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstExclusiveScissor,
        [NativeTypeName("const VkRect2D *")] Rect2D pExclusiveScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_conservative_rasterization", "VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetExtraPrimitiveOverestimationSizeEXT")]
    void CmdSetExtraPrimitiveOverestimationSizeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        float extraPrimitiveOverestimationSize
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_fragment_shading_rate_enums"],
        ImpliesSets = ["VK_KHR_fragment_shading_rate"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateEnumNV")]
    void CmdSetFragmentShadingRateEnumNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        FragmentShadingRateNV shadingRate,
        [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
            FragmentShadingRateCombinerOpKHR* combinerOps
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_fragment_shading_rate_enums"],
        ImpliesSets = ["VK_KHR_fragment_shading_rate"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateEnumNV")]
    void CmdSetFragmentShadingRateEnumNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        FragmentShadingRateNV shadingRate,
        [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
            Ref<FragmentShadingRateCombinerOpKHR> combinerOps
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_fragment_shading_rate"],
        ImpliesSets = [
            "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_create_renderpass2+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateKHR")]
    void CmdSetFragmentShadingRateKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkExtent2D *")] Extent2D* pFragmentSize,
        [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
            FragmentShadingRateCombinerOpKHR* combinerOps
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_fragment_shading_rate"],
        ImpliesSets = [
            "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_create_renderpass2+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetFragmentShadingRateKHR")]
    void CmdSetFragmentShadingRateKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkExtent2D *")] Ref<Extent2D> pFragmentSize,
        [NativeTypeName("const VkFragmentShadingRateCombinerOpKHR[2]")]
            Ref<FragmentShadingRateCombinerOpKHR> combinerOps
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetFrontFace")]
    void CmdSetFrontFace(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        FrontFace frontFace
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetFrontFaceEXT")]
    void CmdSetFrontFaceEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        FrontFace frontFace
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_EXT_line_rasterization"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineRasterizationModeEXT")]
    void CmdSetLineRasterizationModeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkLineRasterizationModeEXT")] LineRasterizationMode lineRasterizationMode
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStipple")]
    void CmdSetLineStipple(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint lineStippleFactor,
        [NativeTypeName("uint16_t")] ushort lineStipplePattern
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_EXT_line_rasterization"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStippleEnableEXT")]
    void CmdSetLineStippleEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint stippledLineEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_line_rasterization"],
        ImpliesSets = [
            "VK_EXT_line_rasterization+VK_KHR_get_physical_device_properties2",
            "VK_EXT_line_rasterization+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStippleEXT")]
    void CmdSetLineStippleEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint lineStippleFactor,
        [NativeTypeName("uint16_t")] ushort lineStipplePattern
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_line_rasterization"],
        ImpliesSets = [
            "VK_KHR_line_rasterization+VK_KHR_get_physical_device_properties2",
            "VK_KHR_line_rasterization+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineStippleKHR")]
    void CmdSetLineStippleKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint lineStippleFactor,
        [NativeTypeName("uint16_t")] ushort lineStipplePattern
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLineWidth")]
    void CmdSetLineWidth(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        float lineWidth
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLogicOpEnableEXT")]
    void CmdSetLogicOpEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint logicOpEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state2"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetLogicOpEXT")]
    void CmdSetLogicOpEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        LogicOp logicOp
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state2"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPatchControlPointsEXT")]
    void CmdSetPatchControlPointsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint patchControlPoints
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceMarkerINTEL")]
    Result CmdSetPerformanceMarkerIntel(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerformanceMarkerInfoINTEL *")]
            PerformanceMarkerInfoIntel* pMarkerInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceMarkerINTEL")]
    Result CmdSetPerformanceMarkerIntel(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerformanceMarkerInfoINTEL *")]
            Ref<PerformanceMarkerInfoIntel> pMarkerInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceOverrideINTEL")]
    Result CmdSetPerformanceOverrideIntel(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerformanceOverrideInfoINTEL *")]
            PerformanceOverrideInfoIntel* pOverrideInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceOverrideINTEL")]
    Result CmdSetPerformanceOverrideIntel(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerformanceOverrideInfoINTEL *")]
            Ref<PerformanceOverrideInfoIntel> pOverrideInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceStreamMarkerINTEL")]
    Result CmdSetPerformanceStreamMarkerIntel(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerformanceStreamMarkerInfoINTEL *")]
            PerformanceStreamMarkerInfoIntel* pMarkerInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPerformanceStreamMarkerINTEL")]
    Result CmdSetPerformanceStreamMarkerIntel(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkPerformanceStreamMarkerInfoINTEL *")]
            Ref<PerformanceStreamMarkerInfoIntel> pMarkerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPolygonModeEXT")]
    void CmdSetPolygonModeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PolygonMode polygonMode
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveRestartEnable")]
    void CmdSetPrimitiveRestartEnable(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint primitiveRestartEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state2"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveRestartEnableEXT")]
    void CmdSetPrimitiveRestartEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint primitiveRestartEnable
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveTopology")]
    void CmdSetPrimitiveTopology(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PrimitiveTopology primitiveTopology
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetPrimitiveTopologyEXT")]
    void CmdSetPrimitiveTopologyEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PrimitiveTopology primitiveTopology
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_EXT_provoking_vertex"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetProvokingVertexModeEXT")]
    void CmdSetProvokingVertexModeEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        ProvokingVertexModeEXT provokingVertexMode
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizationSamplesEXT")]
    void CmdSetRasterizationSamplesEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags rasterizationSamples
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_EXT_transform_feedback"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizationStreamEXT")]
    void CmdSetRasterizationStreamEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint rasterizationStream
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizerDiscardEnable")]
    void CmdSetRasterizerDiscardEnable(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint rasterizerDiscardEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state2"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state2+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRasterizerDiscardEnableEXT")]
    void CmdSetRasterizerDiscardEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint rasterizerDiscardEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRayTracingPipelineStackSizeKHR")]
    void CmdSetRayTracingPipelineStackSizeKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint pipelineStackSize
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocations")]
    void CmdSetRenderingAttachmentLocations(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
            RenderingAttachmentLocationInfo* pLocationInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocations")]
    void CmdSetRenderingAttachmentLocations(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
            Ref<RenderingAttachmentLocationInfo> pLocationInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_dynamic_rendering_local_read"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
            "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocationsKHR")]
    void CmdSetRenderingAttachmentLocationsKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
            RenderingAttachmentLocationInfo* pLocationInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_dynamic_rendering_local_read"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
            "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingAttachmentLocationsKHR")]
    void CmdSetRenderingAttachmentLocationsKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingAttachmentLocationInfo *")]
            Ref<RenderingAttachmentLocationInfo> pLocationInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndices")]
    void CmdSetRenderingInputAttachmentIndices(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
            RenderingInputAttachmentIndexInfo* pInputAttachmentIndexInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndices")]
    void CmdSetRenderingInputAttachmentIndices(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
            Ref<RenderingInputAttachmentIndexInfo> pInputAttachmentIndexInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_dynamic_rendering_local_read"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
            "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndicesKHR")]
    void CmdSetRenderingInputAttachmentIndicesKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
            RenderingInputAttachmentIndexInfo* pInputAttachmentIndexInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_dynamic_rendering_local_read"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering_local_read+VK_KHR_dynamic_rendering",
            "VK_KHR_dynamic_rendering_local_read+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRenderingInputAttachmentIndicesKHR")]
    void CmdSetRenderingInputAttachmentIndicesKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRenderingInputAttachmentIndexInfo *")]
            Ref<RenderingInputAttachmentIndexInfo> pInputAttachmentIndexInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_representative_fragment_test"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetRepresentativeFragmentTestEnableNV")]
    void CmdSetRepresentativeFragmentTestEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint representativeFragmentTestEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_EXT_sample_locations"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleLocationsEnableEXT")]
    void CmdSetSampleLocationsEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint sampleLocationsEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_sample_locations"],
        ImpliesSets = [
            "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
            "VK_EXT_sample_locations+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleLocationsEXT")]
    void CmdSetSampleLocationsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSampleLocationsInfoEXT *")]
            SampleLocationsInfoEXT* pSampleLocationsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_sample_locations"],
        ImpliesSets = [
            "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
            "VK_EXT_sample_locations+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleLocationsEXT")]
    void CmdSetSampleLocationsEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkSampleLocationsInfoEXT *")]
            Ref<SampleLocationsInfoEXT> pSampleLocationsInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleMaskEXT")]
    void CmdSetSampleMaskEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
        [NativeTypeName("const VkSampleMask *")] uint* pSampleMask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetSampleMaskEXT")]
    void CmdSetSampleMaskEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
        [NativeTypeName("const VkSampleMask *")] Ref<uint> pSampleMask
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissor")]
    void CmdSetScissor(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstScissor,
        [NativeTypeName("uint32_t")] uint scissorCount,
        [NativeTypeName("const VkRect2D *")] Rect2D* pScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissor")]
    void CmdSetScissor(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstScissor,
        [NativeTypeName("uint32_t")] uint scissorCount,
        [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissor")]
    void CmdSetScissor(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstScissor,
        [NativeTypeName("const VkRect2D *")] Rect2D pScissors
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCount")]
    void CmdSetScissorWithCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint scissorCount,
        [NativeTypeName("const VkRect2D *")] Rect2D* pScissors
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCount")]
    void CmdSetScissorWithCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint scissorCount,
        [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pScissors
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCount")]
    void CmdSetScissorWithCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRect2D *")] Rect2D pScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCountEXT")]
    void CmdSetScissorWithCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint scissorCount,
        [NativeTypeName("const VkRect2D *")] Rect2D* pScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCountEXT")]
    void CmdSetScissorWithCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint scissorCount,
        [NativeTypeName("const VkRect2D *")] Ref<Rect2D> pScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetScissorWithCountEXT")]
    void CmdSetScissorWithCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkRect2D *")] Rect2D pScissors
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetShadingRateImageEnableNV")]
    void CmdSetShadingRateImageEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint shadingRateImageEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilCompareMask")]
    void CmdSetStencilCompareMask(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
        [NativeTypeName("uint32_t")] uint compareMask
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilOp")]
    void CmdSetStencilOp(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
        StencilOp failOp,
        StencilOp passOp,
        StencilOp depthFailOp,
        CompareOp compareOp
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilOpEXT")]
    void CmdSetStencilOpEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
        StencilOp failOp,
        StencilOp passOp,
        StencilOp depthFailOp,
        CompareOp compareOp
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilReference")]
    void CmdSetStencilReference(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
        [NativeTypeName("uint32_t")] uint reference
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilTestEnable")]
    void CmdSetStencilTestEnable(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint stencilTestEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilTestEnableEXT")]
    void CmdSetStencilTestEnableEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint stencilTestEnable
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetStencilWriteMask")]
    void CmdSetStencilWriteMask(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkStencilFaceFlags")] uint faceMask,
        [NativeTypeName("uint32_t")] uint writeMask
    );

    [SupportedApiProfile(
        "vulkan",
        [
            "VK_EXT_extended_dynamic_state3+VK_KHR_maintenance2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetTessellationDomainOriginEXT")]
    void CmdSetTessellationDomainOriginEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        TessellationDomainOrigin domainOrigin
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_vertex_input_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_vertex_input_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_vertex_input_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetVertexInputEXT")]
    void CmdSetVertexInputEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint vertexBindingDescriptionCount,
        [NativeTypeName("const VkVertexInputBindingDescription2EXT *")]
            VertexInputBindingDescription2EXT* pVertexBindingDescriptions,
        [NativeTypeName("uint32_t")] uint vertexAttributeDescriptionCount,
        [NativeTypeName("const VkVertexInputAttributeDescription2EXT *")]
            VertexInputAttributeDescription2EXT* pVertexAttributeDescriptions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_vertex_input_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_vertex_input_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_vertex_input_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetVertexInputEXT")]
    void CmdSetVertexInputEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint vertexBindingDescriptionCount,
        [NativeTypeName("const VkVertexInputBindingDescription2EXT *")]
            Ref<VertexInputBindingDescription2EXT> pVertexBindingDescriptions,
        [NativeTypeName("uint32_t")] uint vertexAttributeDescriptionCount,
        [NativeTypeName("const VkVertexInputAttributeDescription2EXT *")]
            Ref<VertexInputAttributeDescription2EXT> pVertexAttributeDescriptions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewport")]
    void CmdSetViewport(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewport *")] Viewport* pViewports
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewport")]
    void CmdSetViewport(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewport *")] Ref<Viewport> pViewports
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewport")]
    void CmdSetViewport(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("const VkViewport *")] Viewport pViewports
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
            "VK_NV_shading_rate_image+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportShadingRatePaletteNV")]
    void CmdSetViewportShadingRatePaletteNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkShadingRatePaletteNV *")]
            ShadingRatePaletteNV* pShadingRatePalettes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
            "VK_NV_shading_rate_image+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportShadingRatePaletteNV")]
    void CmdSetViewportShadingRatePaletteNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkShadingRatePaletteNV *")]
            Ref<ShadingRatePaletteNV> pShadingRatePalettes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_shading_rate_image"],
        ImpliesSets = [
            "VK_NV_shading_rate_image+VK_KHR_get_physical_device_properties2",
            "VK_NV_shading_rate_image+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportShadingRatePaletteNV")]
    void CmdSetViewportShadingRatePaletteNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("const VkShadingRatePaletteNV *")] ShadingRatePaletteNV pShadingRatePalettes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_viewport_swizzle"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportSwizzleNV")]
    void CmdSetViewportSwizzleNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewportSwizzleNV *")] ViewportSwizzleNV* pViewportSwizzles
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_viewport_swizzle"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportSwizzleNV")]
    void CmdSetViewportSwizzleNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewportSwizzleNV *")] Ref<ViewportSwizzleNV> pViewportSwizzles
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_viewport_swizzle"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportSwizzleNV")]
    void CmdSetViewportSwizzleNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("const VkViewportSwizzleNV *")] ViewportSwizzleNV pViewportSwizzles
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCount")]
    void CmdSetViewportWithCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewport *")] Viewport* pViewports
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCount")]
    void CmdSetViewportWithCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewport *")] Ref<Viewport> pViewports
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCount")]
    void CmdSetViewportWithCount(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkViewport *")] Viewport pViewports
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCountEXT")]
    void CmdSetViewportWithCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewport *")] Viewport* pViewports
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCountEXT")]
    void CmdSetViewportWithCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewport *")] Ref<Viewport> pViewports
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWithCountEXT")]
    void CmdSetViewportWithCountEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkViewport *")] Viewport pViewports
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_extended_dynamic_state3", "VK_NV_clip_space_w_scaling"],
        ImpliesSets = [
            "VK_EXT_extended_dynamic_state3+VK_KHR_get_physical_device_properties2",
            "VK_EXT_extended_dynamic_state3+VK_VERSION_1_1",
        ],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingEnableNV")]
    void CmdSetViewportWScalingEnableNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBool32")] uint viewportWScalingEnable
    );

    [SupportedApiProfile("vulkan", ["VK_NV_clip_space_w_scaling"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingNV")]
    void CmdSetViewportWScalingNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewportWScalingNV *")] ViewportWScalingNV* pViewportWScalings
    );

    [SupportedApiProfile("vulkan", ["VK_NV_clip_space_w_scaling"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingNV")]
    void CmdSetViewportWScalingNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("uint32_t")] uint viewportCount,
        [NativeTypeName("const VkViewportWScalingNV *")] Ref<ViewportWScalingNV> pViewportWScalings
    );

    [SupportedApiProfile("vulkan", ["VK_NV_clip_space_w_scaling"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSetViewportWScalingNV")]
    void CmdSetViewportWScalingNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint firstViewport,
        [NativeTypeName("const VkViewportWScalingNV *")] ViewportWScalingNV pViewportWScalings
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_HUAWEI_subpass_shading"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_create_renderpass2",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdSubpassShadingHUAWEI")]
    void CmdSubpassShadingHuawei(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_maintenance1", "VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = ["VK_KHR_acceleration_structure"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysIndirect2KHR")]
    void CmdTraceRaysIndirect2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkDeviceAddress")] ulong indirectDeviceAddress
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysIndirectKHR")]
    void CmdTraceRaysIndirectKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pRaygenShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pMissShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pHitShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pCallableShaderBindingTable,
        [NativeTypeName("VkDeviceAddress")] ulong indirectDeviceAddress
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysIndirectKHR")]
    void CmdTraceRaysIndirectKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pRaygenShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pMissShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pHitShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pCallableShaderBindingTable,
        [NativeTypeName("VkDeviceAddress")] ulong indirectDeviceAddress
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysKHR")]
    void CmdTraceRaysKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pRaygenShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pMissShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pHitShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            StridedDeviceAddressRegionKHR* pCallableShaderBindingTable,
        [NativeTypeName("uint32_t")] uint width,
        [NativeTypeName("uint32_t")] uint height,
        [NativeTypeName("uint32_t")] uint depth
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysKHR")]
    void CmdTraceRaysKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pRaygenShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pMissShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pHitShaderBindingTable,
        [NativeTypeName("const VkStridedDeviceAddressRegionKHR *")]
            Ref<StridedDeviceAddressRegionKHR> pCallableShaderBindingTable,
        [NativeTypeName("uint32_t")] uint width,
        [NativeTypeName("uint32_t")] uint height,
        [NativeTypeName("uint32_t")] uint depth
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdTraceRaysNV")]
    void CmdTraceRaysNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle raygenShaderBindingTableBuffer,
        [NativeTypeName("VkDeviceSize")] ulong raygenShaderBindingOffset,
        [NativeTypeName("VkBuffer")] BufferHandle missShaderBindingTableBuffer,
        [NativeTypeName("VkDeviceSize")] ulong missShaderBindingOffset,
        [NativeTypeName("VkDeviceSize")] ulong missShaderBindingStride,
        [NativeTypeName("VkBuffer")] BufferHandle hitShaderBindingTableBuffer,
        [NativeTypeName("VkDeviceSize")] ulong hitShaderBindingOffset,
        [NativeTypeName("VkDeviceSize")] ulong hitShaderBindingStride,
        [NativeTypeName("VkBuffer")] BufferHandle callableShaderBindingTableBuffer,
        [NativeTypeName("VkDeviceSize")] ulong callableShaderBindingOffset,
        [NativeTypeName("VkDeviceSize")] ulong callableShaderBindingStride,
        [NativeTypeName("uint32_t")] uint width,
        [NativeTypeName("uint32_t")] uint height,
        [NativeTypeName("uint32_t")] uint depth
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdUpdateBuffer")]
    void CmdUpdateBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("VkDeviceSize")] ulong dstOffset,
        [NativeTypeName("VkDeviceSize")] ulong dataSize,
        [NativeTypeName("const void *")] void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdUpdateBuffer")]
    void CmdUpdateBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("VkDeviceSize")] ulong dstOffset,
        [NativeTypeName("VkDeviceSize")] ulong dataSize,
        [NativeTypeName("const void *")] Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands_compute"],
        ImpliesSets = ["VK_NV_device_generated_commands"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdUpdatePipelineIndirectBufferNV")]
    void CmdUpdatePipelineIndirectBufferNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        PipelineBindPoint pipelineBindPoint,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents")]
    void CmdWaitEvents(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint eventCount,
        [NativeTypeName("const VkEvent *")] EventHandle* pEvents,
        [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
        [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
        [NativeTypeName("uint32_t")] uint memoryBarrierCount,
        [NativeTypeName("const VkMemoryBarrier *")] MemoryBarrier* pMemoryBarriers,
        [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
        [NativeTypeName("const VkBufferMemoryBarrier *")]
            BufferMemoryBarrier* pBufferMemoryBarriers,
        [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
        [NativeTypeName("const VkImageMemoryBarrier *")] ImageMemoryBarrier* pImageMemoryBarriers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents")]
    void CmdWaitEvents(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint eventCount,
        [NativeTypeName("const VkEvent *")] Ref<EventHandle> pEvents,
        [NativeTypeName("VkPipelineStageFlags")] uint srcStageMask,
        [NativeTypeName("VkPipelineStageFlags")] uint dstStageMask,
        [NativeTypeName("uint32_t")] uint memoryBarrierCount,
        [NativeTypeName("const VkMemoryBarrier *")] Ref<MemoryBarrier> pMemoryBarriers,
        [NativeTypeName("uint32_t")] uint bufferMemoryBarrierCount,
        [NativeTypeName("const VkBufferMemoryBarrier *")]
            Ref<BufferMemoryBarrier> pBufferMemoryBarriers,
        [NativeTypeName("uint32_t")] uint imageMemoryBarrierCount,
        [NativeTypeName("const VkImageMemoryBarrier *")]
            Ref<ImageMemoryBarrier> pImageMemoryBarriers
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2")]
    void CmdWaitEvents2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint eventCount,
        [NativeTypeName("const VkEvent *")] EventHandle* pEvents,
        [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfos
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2")]
    void CmdWaitEvents2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint eventCount,
        [NativeTypeName("const VkEvent *")] Ref<EventHandle> pEvents,
        [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2KHR")]
    void CmdWaitEvents2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint eventCount,
        [NativeTypeName("const VkEvent *")] EventHandle* pEvents,
        [NativeTypeName("const VkDependencyInfo *")] DependencyInfo* pDependencyInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWaitEvents2KHR")]
    void CmdWaitEvents2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint eventCount,
        [NativeTypeName("const VkEvent *")] Ref<EventHandle> pEvents,
        [NativeTypeName("const VkDependencyInfo *")] Ref<DependencyInfo> pDependencyInfos
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesKHR")]
    void CmdWriteAccelerationStructuresPropertiesKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint accelerationStructureCount,
        [NativeTypeName("const VkAccelerationStructureKHR *")]
            AccelerationStructureKHRHandle* pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesKHR")]
    void CmdWriteAccelerationStructuresPropertiesKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint accelerationStructureCount,
        [NativeTypeName("const VkAccelerationStructureKHR *")]
            Ref<AccelerationStructureKHRHandle> pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesKHR")]
    void CmdWriteAccelerationStructuresPropertiesKHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkAccelerationStructureKHR *")]
            AccelerationStructureKHRHandle pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesNV")]
    void CmdWriteAccelerationStructuresPropertiesNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint accelerationStructureCount,
        [NativeTypeName("const VkAccelerationStructureNV *")]
            AccelerationStructureNVHandle* pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesNV")]
    void CmdWriteAccelerationStructuresPropertiesNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint accelerationStructureCount,
        [NativeTypeName("const VkAccelerationStructureNV *")]
            Ref<AccelerationStructureNVHandle> pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteAccelerationStructuresPropertiesNV")]
    void CmdWriteAccelerationStructuresPropertiesNV(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkAccelerationStructureNV *")]
            AccelerationStructureNVHandle pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_AMD_buffer_marker+VK_KHR_synchronization2", "VK_AMD_buffer_marker+VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteBufferMarker2AMD")]
    void CmdWriteBufferMarker2AMD(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineStageFlags2")] ulong stage,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("VkDeviceSize")] ulong dstOffset,
        [NativeTypeName("uint32_t")] uint marker
    );

    [SupportedApiProfile("vulkan", ["VK_AMD_buffer_marker"])]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteBufferMarkerAMD")]
    void CmdWriteBufferMarkerAMD(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineStageFlagBits")] PipelineStageFlags pipelineStage,
        [NativeTypeName("VkBuffer")] BufferHandle dstBuffer,
        [NativeTypeName("VkDeviceSize")] ulong dstOffset,
        [NativeTypeName("uint32_t")] uint marker
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteMicromapsPropertiesEXT")]
    void CmdWriteMicromapsPropertiesEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint micromapCount,
        [NativeTypeName("const VkMicromapEXT *")] MicromapEXTHandle* pMicromaps,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteMicromapsPropertiesEXT")]
    void CmdWriteMicromapsPropertiesEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("uint32_t")] uint micromapCount,
        [NativeTypeName("const VkMicromapEXT *")] Ref<MicromapEXTHandle> pMicromaps,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteMicromapsPropertiesEXT")]
    void CmdWriteMicromapsPropertiesEXT(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("const VkMicromapEXT *")] MicromapEXTHandle pMicromaps,
        QueryType queryType,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteTimestamp")]
    void CmdWriteTimestamp(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineStageFlagBits")] PipelineStageFlags pipelineStage,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint query
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteTimestamp2")]
    void CmdWriteTimestamp2(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineStageFlags2")] ulong stage,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint query
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCmdWriteTimestamp2KHR")]
    void CmdWriteTimestamp2KHR(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkPipelineStageFlags2")] ulong stage,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint query
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCompileDeferredNV")]
    Result CompileDeferredNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint shader
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
    [NativeFunction("vulkan", EntryPoint = "vkConvertCooperativeVectorMatrixNV")]
    Result ConvertCooperativeVectorMatrixNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
            ConvertCooperativeVectorMatrixInfoNV* pInfo
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkConvertCooperativeVectorMatrixNV")]
    Result ConvertCooperativeVectorMatrixNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkConvertCooperativeVectorMatrixInfoNV *")]
            Ref<ConvertCooperativeVectorMatrixInfoNV> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureKHR")]
    Result CopyAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
            CopyAccelerationStructureInfoKHR* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureKHR")]
    Result CopyAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyAccelerationStructureInfoKHR *")]
            Ref<CopyAccelerationStructureInfoKHR> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureToMemoryKHR")]
    Result CopyAccelerationStructureToMemoryKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
            CopyAccelerationStructureToMemoryInfoKHR* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyAccelerationStructureToMemoryKHR")]
    Result CopyAccelerationStructureToMemoryKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyAccelerationStructureToMemoryInfoKHR *")]
            Ref<CopyAccelerationStructureToMemoryInfoKHR> pInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImage")]
    Result CopyImageToImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToImageInfo *")]
            CopyImageToImageInfo* pCopyImageToImageInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImage")]
    Result CopyImageToImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToImageInfo *")]
            Ref<CopyImageToImageInfo> pCopyImageToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImageEXT")]
    Result CopyImageToImageEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToImageInfo *")]
            CopyImageToImageInfo* pCopyImageToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToImageEXT")]
    Result CopyImageToImageEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToImageInfo *")]
            Ref<CopyImageToImageInfo> pCopyImageToImageInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemory")]
    Result CopyImageToMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToMemoryInfo *")]
            CopyImageToMemoryInfo* pCopyImageToMemoryInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemory")]
    Result CopyImageToMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToMemoryInfo *")]
            Ref<CopyImageToMemoryInfo> pCopyImageToMemoryInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemoryEXT")]
    Result CopyImageToMemoryEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToMemoryInfo *")]
            CopyImageToMemoryInfo* pCopyImageToMemoryInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyImageToMemoryEXT")]
    Result CopyImageToMemoryEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyImageToMemoryInfo *")]
            Ref<CopyImageToMemoryInfo> pCopyImageToMemoryInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToAccelerationStructureKHR")]
    Result CopyMemoryToAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
            CopyMemoryToAccelerationStructureInfoKHR* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToAccelerationStructureKHR")]
    Result CopyMemoryToAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMemoryToAccelerationStructureInfoKHR *")]
            Ref<CopyMemoryToAccelerationStructureInfoKHR> pInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImage")]
    Result CopyMemoryToImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyMemoryToImageInfo *")]
            CopyMemoryToImageInfo* pCopyMemoryToImageInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImage")]
    Result CopyMemoryToImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyMemoryToImageInfo *")]
            Ref<CopyMemoryToImageInfo> pCopyMemoryToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImageEXT")]
    Result CopyMemoryToImageEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyMemoryToImageInfo *")]
            CopyMemoryToImageInfo* pCopyMemoryToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToImageEXT")]
    Result CopyMemoryToImageEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCopyMemoryToImageInfo *")]
            Ref<CopyMemoryToImageInfo> pCopyMemoryToImageInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToMicromapEXT")]
    Result CopyMemoryToMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")] CopyMemoryToMicromapInfoEXT* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMemoryToMicromapEXT")]
    Result CopyMemoryToMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMemoryToMicromapInfoEXT *")]
            Ref<CopyMemoryToMicromapInfoEXT> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapEXT")]
    Result CopyMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMicromapInfoEXT *")] CopyMicromapInfoEXT* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapEXT")]
    Result CopyMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMicromapInfoEXT *")] Ref<CopyMicromapInfoEXT> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapToMemoryEXT")]
    Result CopyMicromapToMemoryEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")] CopyMicromapToMemoryInfoEXT* pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCopyMicromapToMemoryEXT")]
    Result CopyMicromapToMemoryEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("const VkCopyMicromapToMemoryInfoEXT *")]
            Ref<CopyMicromapToMemoryInfoEXT> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureKHR")]
    Result CreateAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureCreateInfoKHR *")]
            AccelerationStructureCreateInfoKHR* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkAccelerationStructureKHR *")]
            AccelerationStructureKHRHandle* pAccelerationStructure
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureKHR")]
    Result CreateAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureCreateInfoKHR *")]
            Ref<AccelerationStructureCreateInfoKHR> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkAccelerationStructureKHR *")]
            Ref<AccelerationStructureKHRHandle> pAccelerationStructure
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureNV")]
    Result CreateAccelerationStructureNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureCreateInfoNV *")]
            AccelerationStructureCreateInfoNV* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkAccelerationStructureNV *")]
            AccelerationStructureNVHandle* pAccelerationStructure
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateAccelerationStructureNV")]
    Result CreateAccelerationStructureNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureCreateInfoNV *")]
            Ref<AccelerationStructureCreateInfoNV> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkAccelerationStructureNV *")]
            Ref<AccelerationStructureNVHandle> pAccelerationStructure
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateBuffer")]
    Result CreateBuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferCreateInfo *")] BufferCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkBuffer *")] BufferHandle* pBuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateBuffer")]
    Result CreateBuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferCreateInfo *")] Ref<BufferCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkBuffer *")] Ref<BufferHandle> pBuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateBufferView")]
    Result CreateBufferView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferViewCreateInfo *")] BufferViewCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkBufferView *")] BufferViewHandle* pView
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateBufferView")]
    Result CreateBufferView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferViewCreateInfo *")] Ref<BufferViewCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkBufferView *")] Ref<BufferViewHandle> pView
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCommandPool")]
    Result CreateCommandPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCommandPoolCreateInfo *")] CommandPoolCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkCommandPool *")] CommandPoolHandle* pCommandPool
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCommandPool")]
    Result CreateCommandPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCommandPoolCreateInfo *")] Ref<CommandPoolCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkCommandPool *")] Ref<CommandPoolHandle> pCommandPool
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateComputePipelines")]
    Result CreateComputePipelines(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkComputePipelineCreateInfo *")]
            ComputePipelineCreateInfo* pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateComputePipelines")]
    Result CreateComputePipelines(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkComputePipelineCreateInfo *")]
            Ref<ComputePipelineCreateInfo> pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCudaFunctionNV")]
    Result CreateCudaFunctionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCudaFunctionCreateInfoNV *")]
            CudaFunctionCreateInfoNV* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkCudaFunctionNV *")] CudaFunctionNVHandle* pFunction
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCudaFunctionNV")]
    Result CreateCudaFunctionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCudaFunctionCreateInfoNV *")]
            Ref<CudaFunctionCreateInfoNV> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkCudaFunctionNV *")] Ref<CudaFunctionNVHandle> pFunction
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCudaModuleNV")]
    Result CreateCudaModuleNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCudaModuleCreateInfoNV *")] CudaModuleCreateInfoNV* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkCudaModuleNV *")] CudaModuleNVHandle* pModule
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCudaModuleNV")]
    Result CreateCudaModuleNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCudaModuleCreateInfoNV *")]
            Ref<CudaModuleCreateInfoNV> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkCudaModuleNV *")] Ref<CudaModuleNVHandle> pModule
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCuFunctionNVX")]
    Result CreateCuFunctionNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCuFunctionCreateInfoNVX *")] CuFunctionCreateInfoNVX* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkCuFunctionNVX *")] CuFunctionNVXHandle* pFunction
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCuFunctionNVX")]
    Result CreateCuFunctionNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCuFunctionCreateInfoNVX *")]
            Ref<CuFunctionCreateInfoNVX> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkCuFunctionNVX *")] Ref<CuFunctionNVXHandle> pFunction
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCuModuleNVX")]
    Result CreateCuModuleNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCuModuleCreateInfoNVX *")] CuModuleCreateInfoNVX* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkCuModuleNVX *")] CuModuleNVXHandle* pModule
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateCuModuleNVX")]
    Result CreateCuModuleNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkCuModuleCreateInfoNVX *")] Ref<CuModuleCreateInfoNVX> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkCuModuleNVX *")] Ref<CuModuleNVXHandle> pModule
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDebugReportCallbackEXT")]
    Result CreateDebugReportCallbackEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkDebugReportCallbackCreateInfoEXT *")]
            DebugReportCallbackCreateInfoEXT* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDebugReportCallbackEXT *")] DebugReportCallbackEXTHandle* pCallback
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDebugReportCallbackEXT")]
    Result CreateDebugReportCallbackEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkDebugReportCallbackCreateInfoEXT *")]
            Ref<DebugReportCallbackCreateInfoEXT> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDebugReportCallbackEXT *")] Ref<DebugReportCallbackEXTHandle> pCallback
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDebugUtilsMessengerEXT")]
    Result CreateDebugUtilsMessengerEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkDebugUtilsMessengerCreateInfoEXT *")]
            DebugUtilsMessengerCreateInfoEXT* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDebugUtilsMessengerEXT *")] DebugUtilsMessengerEXTHandle* pMessenger
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDebugUtilsMessengerEXT")]
    Result CreateDebugUtilsMessengerEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkDebugUtilsMessengerCreateInfoEXT *")]
            Ref<DebugUtilsMessengerCreateInfoEXT> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDebugUtilsMessengerEXT *")] Ref<DebugUtilsMessengerEXTHandle> pMessenger
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDeferredOperationKHR")]
    Result CreateDeferredOperationKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDeferredOperationKHR *")] DeferredOperationKHRHandle* pDeferredOperation
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDeferredOperationKHR")]
    Result CreateDeferredOperationKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDeferredOperationKHR *")]
            Ref<DeferredOperationKHRHandle> pDeferredOperation
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorPool")]
    Result CreateDescriptorPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorPoolCreateInfo *")]
            DescriptorPoolCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDescriptorPool *")] DescriptorPoolHandle* pDescriptorPool
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorPool")]
    Result CreateDescriptorPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorPoolCreateInfo *")]
            Ref<DescriptorPoolCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDescriptorPool *")] Ref<DescriptorPoolHandle> pDescriptorPool
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorSetLayout")]
    Result CreateDescriptorSetLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
            DescriptorSetLayoutCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDescriptorSetLayout *")] DescriptorSetLayoutHandle* pSetLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorSetLayout")]
    Result CreateDescriptorSetLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
            Ref<DescriptorSetLayoutCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDescriptorSetLayout *")] Ref<DescriptorSetLayoutHandle> pSetLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplate")]
    Result CreateDescriptorUpdateTemplate(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
            DescriptorUpdateTemplateCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDescriptorUpdateTemplate *")]
            DescriptorUpdateTemplateHandle* pDescriptorUpdateTemplate
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplate")]
    Result CreateDescriptorUpdateTemplate(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
            Ref<DescriptorUpdateTemplateCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDescriptorUpdateTemplate *")]
            Ref<DescriptorUpdateTemplateHandle> pDescriptorUpdateTemplate
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplateKHR")]
    Result CreateDescriptorUpdateTemplateKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
            DescriptorUpdateTemplateCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDescriptorUpdateTemplate *")]
            DescriptorUpdateTemplateHandle* pDescriptorUpdateTemplate
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDescriptorUpdateTemplateKHR")]
    Result CreateDescriptorUpdateTemplateKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorUpdateTemplateCreateInfo *")]
            Ref<DescriptorUpdateTemplateCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDescriptorUpdateTemplate *")]
            Ref<DescriptorUpdateTemplateHandle> pDescriptorUpdateTemplate
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDevice")]
    Result CreateDevice(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkDeviceCreateInfo *")] DeviceCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDevice *")] DeviceHandle* pDevice
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDevice")]
    Result CreateDevice(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkDeviceCreateInfo *")] Ref<DeviceCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDevice *")] Ref<DeviceHandle> pDevice
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayModeKHR")]
    Result CreateDisplayModeKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("const VkDisplayModeCreateInfoKHR *")]
            DisplayModeCreateInfoKHR* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkDisplayModeKHR *")] DisplayModeKHRHandle* pMode
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayModeKHR")]
    Result CreateDisplayModeKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("const VkDisplayModeCreateInfoKHR *")]
            Ref<DisplayModeCreateInfoKHR> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkDisplayModeKHR *")] Ref<DisplayModeKHRHandle> pMode
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayPlaneSurfaceKHR")]
    Result CreateDisplayPlaneSurfaceKHR(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkDisplaySurfaceCreateInfoKHR *")]
            DisplaySurfaceCreateInfoKHR* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSurfaceKHR *")] SurfaceKHRHandle* pSurface
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateDisplayPlaneSurfaceKHR")]
    Result CreateDisplayPlaneSurfaceKHR(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkDisplaySurfaceCreateInfoKHR *")]
            Ref<DisplaySurfaceCreateInfoKHR> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSurfaceKHR *")] Ref<SurfaceKHRHandle> pSurface
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateEvent")]
    Result CreateEvent(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkEventCreateInfo *")] EventCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkEvent *")] EventHandle* pEvent
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateEvent")]
    Result CreateEvent(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkEventCreateInfo *")] Ref<EventCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkEvent *")] Ref<EventHandle> pEvent
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateExternalComputeQueueNV")]
    Result CreateExternalComputeQueueNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkExternalComputeQueueCreateInfoNV *")]
            ExternalComputeQueueCreateInfoNV* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkExternalComputeQueueNV *")] ExternalComputeQueueNVHandle* pExternalQueue
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateExternalComputeQueueNV")]
    Result CreateExternalComputeQueueNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkExternalComputeQueueCreateInfoNV *")]
            Ref<ExternalComputeQueueCreateInfoNV> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkExternalComputeQueueNV *")]
            Ref<ExternalComputeQueueNVHandle> pExternalQueue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateFence")]
    Result CreateFence(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkFenceCreateInfo *")] FenceCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkFence *")] FenceHandle* pFence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateFence")]
    Result CreateFence(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkFenceCreateInfo *")] Ref<FenceCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkFence *")] Ref<FenceHandle> pFence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateFramebuffer")]
    Result CreateFramebuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkFramebufferCreateInfo *")] FramebufferCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkFramebuffer *")] FramebufferHandle* pFramebuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateFramebuffer")]
    Result CreateFramebuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkFramebufferCreateInfo *")] Ref<FramebufferCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkFramebuffer *")] Ref<FramebufferHandle> pFramebuffer
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateGraphicsPipelines")]
    Result CreateGraphicsPipelines(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkGraphicsPipelineCreateInfo *")]
            GraphicsPipelineCreateInfo* pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateGraphicsPipelines")]
    Result CreateGraphicsPipelines(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkGraphicsPipelineCreateInfo *")]
            Ref<GraphicsPipelineCreateInfo> pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_headless_surface"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateHeadlessSurfaceEXT")]
    Result CreateHeadlessSurfaceEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkHeadlessSurfaceCreateInfoEXT *")]
            HeadlessSurfaceCreateInfoEXT* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSurfaceKHR *")] SurfaceKHRHandle* pSurface
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_headless_surface"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateHeadlessSurfaceEXT")]
    Result CreateHeadlessSurfaceEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkHeadlessSurfaceCreateInfoEXT *")]
            Ref<HeadlessSurfaceCreateInfoEXT> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSurfaceKHR *")] Ref<SurfaceKHRHandle> pSurface
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateImage")]
    Result CreateImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageCreateInfo *")] ImageCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkImage *")] ImageHandle* pImage
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateImage")]
    Result CreateImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageCreateInfo *")] Ref<ImageCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkImage *")] Ref<ImageHandle> pImage
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateImageView")]
    Result CreateImageView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewCreateInfo *")] ImageViewCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkImageView *")] ImageViewHandle* pView
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateImageView")]
    Result CreateImageView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewCreateInfo *")] Ref<ImageViewCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkImageView *")] Ref<ImageViewHandle> pView
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutEXT")]
    Result CreateIndirectCommandsLayoutEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoEXT *")]
            IndirectCommandsLayoutCreateInfoEXT* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkIndirectCommandsLayoutEXT *")]
            IndirectCommandsLayoutEXTHandle* pIndirectCommandsLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutEXT")]
    Result CreateIndirectCommandsLayoutEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoEXT *")]
            Ref<IndirectCommandsLayoutCreateInfoEXT> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkIndirectCommandsLayoutEXT *")]
            Ref<IndirectCommandsLayoutEXTHandle> pIndirectCommandsLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutNV")]
    Result CreateIndirectCommandsLayoutNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoNV *")]
            IndirectCommandsLayoutCreateInfoNV* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkIndirectCommandsLayoutNV *")]
            IndirectCommandsLayoutNVHandle* pIndirectCommandsLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectCommandsLayoutNV")]
    Result CreateIndirectCommandsLayoutNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkIndirectCommandsLayoutCreateInfoNV *")]
            Ref<IndirectCommandsLayoutCreateInfoNV> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkIndirectCommandsLayoutNV *")]
            Ref<IndirectCommandsLayoutNVHandle> pIndirectCommandsLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectExecutionSetEXT")]
    Result CreateIndirectExecutionSetEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkIndirectExecutionSetCreateInfoEXT *")]
            IndirectExecutionSetCreateInfoEXT* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkIndirectExecutionSetEXT *")]
            IndirectExecutionSetEXTHandle* pIndirectExecutionSet
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateIndirectExecutionSetEXT")]
    Result CreateIndirectExecutionSetEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkIndirectExecutionSetCreateInfoEXT *")]
            Ref<IndirectExecutionSetCreateInfoEXT> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkIndirectExecutionSetEXT *")]
            Ref<IndirectExecutionSetEXTHandle> pIndirectExecutionSet
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateInstance")]
    Result CreateInstance(
        [NativeTypeName("const VkInstanceCreateInfo *")] InstanceCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkInstance *")] InstanceHandle* pInstance
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateInstance")]
    Result CreateInstance(
        [NativeTypeName("const VkInstanceCreateInfo *")] Ref<InstanceCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkInstance *")] Ref<InstanceHandle> pInstance
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateMicromapEXT")]
    Result CreateMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMicromapCreateInfoEXT *")] MicromapCreateInfoEXT* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkMicromapEXT *")] MicromapEXTHandle* pMicromap
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateMicromapEXT")]
    Result CreateMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMicromapCreateInfoEXT *")] Ref<MicromapCreateInfoEXT> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkMicromapEXT *")] Ref<MicromapEXTHandle> pMicromap
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateOpticalFlowSessionNV")]
    Result CreateOpticalFlowSessionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkOpticalFlowSessionCreateInfoNV *")]
            OpticalFlowSessionCreateInfoNV* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkOpticalFlowSessionNV *")] OpticalFlowSessionNVHandle* pSession
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateOpticalFlowSessionNV")]
    Result CreateOpticalFlowSessionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkOpticalFlowSessionCreateInfoNV *")]
            Ref<OpticalFlowSessionCreateInfoNV> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkOpticalFlowSessionNV *")] Ref<OpticalFlowSessionNVHandle> pSession
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineBinariesKHR")]
    Result CreatePipelineBinariesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineBinaryCreateInfoKHR *")]
            PipelineBinaryCreateInfoKHR* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        PipelineBinaryHandlesInfoKHR* pBinaries
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineBinariesKHR")]
    Result CreatePipelineBinariesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineBinaryCreateInfoKHR *")]
            Ref<PipelineBinaryCreateInfoKHR> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        Ref<PipelineBinaryHandlesInfoKHR> pBinaries
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineCache")]
    Result CreatePipelineCache(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineCacheCreateInfo *")] PipelineCacheCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPipelineCache *")] PipelineCacheHandle* pPipelineCache
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineCache")]
    Result CreatePipelineCache(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineCacheCreateInfo *")]
            Ref<PipelineCacheCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPipelineCache *")] Ref<PipelineCacheHandle> pPipelineCache
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineLayout")]
    Result CreatePipelineLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineLayoutCreateInfo *")]
            PipelineLayoutCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPipelineLayout *")] PipelineLayoutHandle* pPipelineLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePipelineLayout")]
    Result CreatePipelineLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineLayoutCreateInfo *")]
            Ref<PipelineLayoutCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPipelineLayout *")] Ref<PipelineLayoutHandle> pPipelineLayout
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlot")]
    Result CreatePrivateDataSlot(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
            PrivateDataSlotCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPrivateDataSlot *")] PrivateDataSlotHandle* pPrivateDataSlot
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlot")]
    Result CreatePrivateDataSlot(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
            Ref<PrivateDataSlotCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPrivateDataSlot *")] Ref<PrivateDataSlotHandle> pPrivateDataSlot
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_private_data"],
        ImpliesSets = [
            "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
            "VK_EXT_private_data+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlotEXT")]
    Result CreatePrivateDataSlotEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
            PrivateDataSlotCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPrivateDataSlot *")] PrivateDataSlotHandle* pPrivateDataSlot
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_private_data"],
        ImpliesSets = [
            "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
            "VK_EXT_private_data+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreatePrivateDataSlotEXT")]
    Result CreatePrivateDataSlotEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPrivateDataSlotCreateInfo *")]
            Ref<PrivateDataSlotCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPrivateDataSlot *")] Ref<PrivateDataSlotHandle> pPrivateDataSlot
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateQueryPool")]
    Result CreateQueryPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkQueryPoolCreateInfo *")] QueryPoolCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkQueryPool *")] QueryPoolHandle* pQueryPool
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateQueryPool")]
    Result CreateQueryPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkQueryPoolCreateInfo *")] Ref<QueryPoolCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkQueryPool *")] Ref<QueryPoolHandle> pQueryPool
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesKHR")]
    Result CreateRayTracingPipelinesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkRayTracingPipelineCreateInfoKHR *")]
            RayTracingPipelineCreateInfoKHR* pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesKHR")]
    Result CreateRayTracingPipelinesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle deferredOperation,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkRayTracingPipelineCreateInfoKHR *")]
            Ref<RayTracingPipelineCreateInfoKHR> pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesNV")]
    Result CreateRayTracingPipelinesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkRayTracingPipelineCreateInfoNV *")]
            RayTracingPipelineCreateInfoNV* pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkPipeline *")] PipelineHandle* pPipelines
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRayTracingPipelinesNV")]
    Result CreateRayTracingPipelinesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkRayTracingPipelineCreateInfoNV *")]
            Ref<RayTracingPipelineCreateInfoNV> pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkPipeline *")] Ref<PipelineHandle> pPipelines
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass")]
    Result CreateRenderPass(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderPassCreateInfo *")] RenderPassCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkRenderPass *")] RenderPassHandle* pRenderPass
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass")]
    Result CreateRenderPass(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderPassCreateInfo *")] Ref<RenderPassCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkRenderPass *")] Ref<RenderPassHandle> pRenderPass
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2")]
    Result CreateRenderPass2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderPassCreateInfo2 *")] RenderPassCreateInfo2* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkRenderPass *")] RenderPassHandle* pRenderPass
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2")]
    Result CreateRenderPass2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderPassCreateInfo2 *")] Ref<RenderPassCreateInfo2> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkRenderPass *")] Ref<RenderPassHandle> pRenderPass
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2KHR")]
    Result CreateRenderPass2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderPassCreateInfo2 *")] RenderPassCreateInfo2* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkRenderPass *")] RenderPassHandle* pRenderPass
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_create_renderpass2"],
        ImpliesSets = ["VK_KHR_multiview+VK_KHR_maintenance2", "VK_VERSION_1_1"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateRenderPass2KHR")]
    Result CreateRenderPass2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderPassCreateInfo2 *")] Ref<RenderPassCreateInfo2> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkRenderPass *")] Ref<RenderPassHandle> pRenderPass
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSampler")]
    Result CreateSampler(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerCreateInfo *")] SamplerCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSampler *")] SamplerHandle* pSampler
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSampler")]
    Result CreateSampler(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerCreateInfo *")] Ref<SamplerCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSampler *")] Ref<SamplerHandle> pSampler
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversion")]
    Result CreateSamplerYcbcrConversion(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
            SamplerYcbcrConversionCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSamplerYcbcrConversion *")]
            SamplerYcbcrConversionHandle* pYcbcrConversion
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversion")]
    Result CreateSamplerYcbcrConversion(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
            Ref<SamplerYcbcrConversionCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSamplerYcbcrConversion *")]
            Ref<SamplerYcbcrConversionHandle> pYcbcrConversion
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_sampler_ycbcr_conversion"],
        ImpliesSets = [
            "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversionKHR")]
    Result CreateSamplerYcbcrConversionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
            SamplerYcbcrConversionCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSamplerYcbcrConversion *")]
            SamplerYcbcrConversionHandle* pYcbcrConversion
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_sampler_ycbcr_conversion"],
        ImpliesSets = [
            "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSamplerYcbcrConversionKHR")]
    Result CreateSamplerYcbcrConversionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerYcbcrConversionCreateInfo *")]
            Ref<SamplerYcbcrConversionCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSamplerYcbcrConversion *")]
            Ref<SamplerYcbcrConversionHandle> pYcbcrConversion
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSemaphore")]
    Result CreateSemaphore(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreCreateInfo *")] SemaphoreCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSemaphore *")] SemaphoreHandle* pSemaphore
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSemaphore")]
    Result CreateSemaphore(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreCreateInfo *")] Ref<SemaphoreCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSemaphore *")] Ref<SemaphoreHandle> pSemaphore
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateShaderModule")]
    Result CreateShaderModule(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkShaderModuleCreateInfo *")] ShaderModuleCreateInfo* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkShaderModule *")] ShaderModuleHandle* pShaderModule
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateShaderModule")]
    Result CreateShaderModule(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkShaderModuleCreateInfo *")]
            Ref<ShaderModuleCreateInfo> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkShaderModule *")] Ref<ShaderModuleHandle> pShaderModule
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateShadersEXT")]
    Result CreateShadersEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkShaderCreateInfoEXT *")] ShaderCreateInfoEXT* pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkShaderEXT *")] ShaderEXTHandle* pShaders
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateShadersEXT")]
    Result CreateShadersEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint createInfoCount,
        [NativeTypeName("const VkShaderCreateInfoEXT *")] Ref<ShaderCreateInfoEXT> pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkShaderEXT *")] Ref<ShaderEXTHandle> pShaders
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_display_swapchain"],
        ImpliesSets = ["VK_KHR_display", "VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSharedSwapchainsKHR")]
    Result CreateSharedSwapchainsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint swapchainCount,
        [NativeTypeName("const VkSwapchainCreateInfoKHR *")] SwapchainCreateInfoKHR* pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSwapchainKHR *")] SwapchainKHRHandle* pSwapchains
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_display_swapchain"],
        ImpliesSets = ["VK_KHR_display", "VK_KHR_swapchain"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSharedSwapchainsKHR")]
    Result CreateSharedSwapchainsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint swapchainCount,
        [NativeTypeName("const VkSwapchainCreateInfoKHR *")]
            Ref<SwapchainCreateInfoKHR> pCreateInfos,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSwapchainKHR *")] Ref<SwapchainKHRHandle> pSwapchains
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSwapchainKHR")]
    Result CreateSwapchainKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSwapchainCreateInfoKHR *")] SwapchainCreateInfoKHR* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkSwapchainKHR *")] SwapchainKHRHandle* pSwapchain
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateSwapchainKHR")]
    Result CreateSwapchainKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSwapchainCreateInfoKHR *")]
            Ref<SwapchainCreateInfoKHR> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkSwapchainKHR *")] Ref<SwapchainKHRHandle> pSwapchain
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [NativeFunction("vulkan", EntryPoint = "vkCreateValidationCacheEXT")]
    Result CreateValidationCacheEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkValidationCacheCreateInfoEXT *")]
            ValidationCacheCreateInfoEXT* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkValidationCacheEXT *")] ValidationCacheEXTHandle* pValidationCache
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateValidationCacheEXT")]
    Result CreateValidationCacheEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkValidationCacheCreateInfoEXT *")]
            Ref<ValidationCacheCreateInfoEXT> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkValidationCacheEXT *")] Ref<ValidationCacheEXTHandle> pValidationCache
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionKHR")]
    Result CreateVideoSessionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkVideoSessionCreateInfoKHR *")]
            VideoSessionCreateInfoKHR* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkVideoSessionKHR *")] VideoSessionKHRHandle* pVideoSession
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionKHR")]
    Result CreateVideoSessionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkVideoSessionCreateInfoKHR *")]
            Ref<VideoSessionCreateInfoKHR> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkVideoSessionKHR *")] Ref<VideoSessionKHRHandle> pVideoSession
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionParametersKHR")]
    Result CreateVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkVideoSessionParametersCreateInfoKHR *")]
            VideoSessionParametersCreateInfoKHR* pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkVideoSessionParametersKHR *")]
            VideoSessionParametersKHRHandle* pVideoSessionParameters
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkCreateVideoSessionParametersKHR")]
    Result CreateVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkVideoSessionParametersCreateInfoKHR *")]
            Ref<VideoSessionParametersCreateInfoKHR> pCreateInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkVideoSessionParametersKHR *")]
            Ref<VideoSessionParametersKHRHandle> pVideoSessionParameters
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectNameEXT")]
    Result DebugMarkerSetObjectNameEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugMarkerObjectNameInfoEXT *")]
            DebugMarkerObjectNameInfoEXT* pNameInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectNameEXT")]
    Result DebugMarkerSetObjectNameEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugMarkerObjectNameInfoEXT *")]
            Ref<DebugMarkerObjectNameInfoEXT> pNameInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectTagEXT")]
    Result DebugMarkerSetObjectTagEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugMarkerObjectTagInfoEXT *")]
            DebugMarkerObjectTagInfoEXT* pTagInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_marker"], ImpliesSets = ["VK_EXT_debug_report"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDebugMarkerSetObjectTagEXT")]
    Result DebugMarkerSetObjectTagEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugMarkerObjectTagInfoEXT *")]
            Ref<DebugMarkerObjectTagInfoEXT> pTagInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkDebugReportMessageEXT")]
    void DebugReportMessageEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugReportFlagsEXT")] uint flags,
        DebugReportObjectTypeEXT objectType,
        [NativeTypeName("uint64_t")] ulong @object,
        [NativeTypeName("size_t")] nuint location,
        [NativeTypeName("int32_t")] int messageCode,
        [NativeTypeName("const char *")] sbyte* pLayerPrefix,
        [NativeTypeName("const char *")] sbyte* pMessage
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDebugReportMessageEXT")]
    void DebugReportMessageEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugReportFlagsEXT")] uint flags,
        DebugReportObjectTypeEXT objectType,
        [NativeTypeName("uint64_t")] ulong @object,
        [NativeTypeName("size_t")] nuint location,
        [NativeTypeName("int32_t")] int messageCode,
        [NativeTypeName("const char *")] Ref<sbyte> pLayerPrefix,
        [NativeTypeName("const char *")] Ref<sbyte> pMessage
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
    [NativeFunction("vulkan", EntryPoint = "vkDeferredOperationJoinKHR")]
    Result DeferredOperationJoinKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureKHR")]
    void DestroyAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkAccelerationStructureKHR")]
            AccelerationStructureKHRHandle accelerationStructure,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureKHR")]
    void DestroyAccelerationStructureKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkAccelerationStructureKHR")]
            AccelerationStructureKHRHandle accelerationStructure,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureNV")]
    void DestroyAccelerationStructureNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkAccelerationStructureNV")]
            AccelerationStructureNVHandle accelerationStructure,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyAccelerationStructureNV")]
    void DestroyAccelerationStructureNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkAccelerationStructureNV")]
            AccelerationStructureNVHandle accelerationStructure,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyBuffer")]
    void DestroyBuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyBuffer")]
    void DestroyBuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyBufferView")]
    void DestroyBufferView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkBufferView")] BufferViewHandle bufferView,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyBufferView")]
    void DestroyBufferView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkBufferView")] BufferViewHandle bufferView,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCommandPool")]
    void DestroyCommandPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCommandPool")]
    void DestroyCommandPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaFunctionNV")]
    void DestroyCudaFunctionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCudaFunctionNV")] CudaFunctionNVHandle function,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaFunctionNV")]
    void DestroyCudaFunctionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCudaFunctionNV")] CudaFunctionNVHandle function,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaModuleNV")]
    void DestroyCudaModuleNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCudaModuleNV")]
    void DestroyCudaModuleNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCuFunctionNVX")]
    void DestroyCuFunctionNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCuFunctionNVX")] CuFunctionNVXHandle function,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCuFunctionNVX")]
    void DestroyCuFunctionNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCuFunctionNVX")] CuFunctionNVXHandle function,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCuModuleNVX")]
    void DestroyCuModuleNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCuModuleNVX")] CuModuleNVXHandle module,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_binary_import"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyCuModuleNVX")]
    void DestroyCuModuleNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCuModuleNVX")] CuModuleNVXHandle module,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugReportCallbackEXT")]
    void DestroyDebugReportCallbackEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugReportCallbackEXT")] DebugReportCallbackEXTHandle callback,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_report"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugReportCallbackEXT")]
    void DestroyDebugReportCallbackEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugReportCallbackEXT")] DebugReportCallbackEXTHandle callback,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugUtilsMessengerEXT")]
    void DestroyDebugUtilsMessengerEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugUtilsMessengerEXT")] DebugUtilsMessengerEXTHandle messenger,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDebugUtilsMessengerEXT")]
    void DestroyDebugUtilsMessengerEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugUtilsMessengerEXT")] DebugUtilsMessengerEXTHandle messenger,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDeferredOperationKHR")]
    void DestroyDeferredOperationKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDeferredOperationKHR")]
    void DestroyDeferredOperationKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorPool")]
    void DestroyDescriptorPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorPool")]
    void DestroyDescriptorPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorSetLayout")]
    void DestroyDescriptorSetLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle descriptorSetLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorSetLayout")]
    void DestroyDescriptorSetLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle descriptorSetLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplate")]
    void DestroyDescriptorUpdateTemplate(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplate")]
    void DestroyDescriptorUpdateTemplate(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplateKHR")]
    void DestroyDescriptorUpdateTemplateKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDescriptorUpdateTemplateKHR")]
    void DestroyDescriptorUpdateTemplateKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDevice")]
    void DestroyDevice(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyDevice")]
    void DestroyDevice(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyEvent")]
    void DestroyEvent(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyEvent")]
    void DestroyEvent(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkEvent")] EventHandle @event,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyExternalComputeQueueNV")]
    void DestroyExternalComputeQueueNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyExternalComputeQueueNV")]
    void DestroyExternalComputeQueueNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyFence")]
    void DestroyFence(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkFence")] FenceHandle fence,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyFence")]
    void DestroyFence(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkFence")] FenceHandle fence,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyFramebuffer")]
    void DestroyFramebuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyFramebuffer")]
    void DestroyFramebuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyImage")]
    void DestroyImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyImage")]
    void DestroyImage(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyImageView")]
    void DestroyImageView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImageView")] ImageViewHandle imageView,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyImageView")]
    void DestroyImageView(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImageView")] ImageViewHandle imageView,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutEXT")]
    void DestroyIndirectCommandsLayoutEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectCommandsLayoutEXT")]
            IndirectCommandsLayoutEXTHandle indirectCommandsLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutEXT")]
    void DestroyIndirectCommandsLayoutEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectCommandsLayoutEXT")]
            IndirectCommandsLayoutEXTHandle indirectCommandsLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutNV")]
    void DestroyIndirectCommandsLayoutNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectCommandsLayoutNV")]
            IndirectCommandsLayoutNVHandle indirectCommandsLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectCommandsLayoutNV")]
    void DestroyIndirectCommandsLayoutNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectCommandsLayoutNV")]
            IndirectCommandsLayoutNVHandle indirectCommandsLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectExecutionSetEXT")]
    void DestroyIndirectExecutionSetEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyIndirectExecutionSetEXT")]
    void DestroyIndirectExecutionSetEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyInstance")]
    void DestroyInstance(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyInstance")]
    void DestroyInstance(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyMicromapEXT")]
    void DestroyMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkMicromapEXT")] MicromapEXTHandle micromap,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyMicromapEXT")]
    void DestroyMicromapEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkMicromapEXT")] MicromapEXTHandle micromap,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyOpticalFlowSessionNV")]
    void DestroyOpticalFlowSessionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyOpticalFlowSessionNV")]
    void DestroyOpticalFlowSessionNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkOpticalFlowSessionNV")] OpticalFlowSessionNVHandle session,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipeline")]
    void DestroyPipeline(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipeline")]
    void DestroyPipeline(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineBinaryKHR")]
    void DestroyPipelineBinaryKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineBinaryKHR")] PipelineBinaryKHRHandle pipelineBinary,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineBinaryKHR")]
    void DestroyPipelineBinaryKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineBinaryKHR")] PipelineBinaryKHRHandle pipelineBinary,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineCache")]
    void DestroyPipelineCache(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineCache")]
    void DestroyPipelineCache(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineLayout")]
    void DestroyPipelineLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle pipelineLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPipelineLayout")]
    void DestroyPipelineLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineLayout")] PipelineLayoutHandle pipelineLayout,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlot")]
    void DestroyPrivateDataSlot(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlot")]
    void DestroyPrivateDataSlot(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_private_data"],
        ImpliesSets = [
            "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
            "VK_EXT_private_data+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlotEXT")]
    void DestroyPrivateDataSlotEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_private_data"],
        ImpliesSets = [
            "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
            "VK_EXT_private_data+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyPrivateDataSlotEXT")]
    void DestroyPrivateDataSlotEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyQueryPool")]
    void DestroyQueryPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyQueryPool")]
    void DestroyQueryPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyRenderPass")]
    void DestroyRenderPass(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyRenderPass")]
    void DestroyRenderPass(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySampler")]
    void DestroySampler(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSampler")] SamplerHandle sampler,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySampler")]
    void DestroySampler(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSampler")] SamplerHandle sampler,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversion")]
    void DestroySamplerYcbcrConversion(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSamplerYcbcrConversion")] SamplerYcbcrConversionHandle ycbcrConversion,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversion")]
    void DestroySamplerYcbcrConversion(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSamplerYcbcrConversion")] SamplerYcbcrConversionHandle ycbcrConversion,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_sampler_ycbcr_conversion"],
        ImpliesSets = [
            "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversionKHR")]
    void DestroySamplerYcbcrConversionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSamplerYcbcrConversion")] SamplerYcbcrConversionHandle ycbcrConversion,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_sampler_ycbcr_conversion"],
        ImpliesSets = [
            "VK_KHR_maintenance1+VK_KHR_bind_memory2+VK_KHR_get_memory_requirements2+VK_KHR_get_physical_device_properties2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySamplerYcbcrConversionKHR")]
    void DestroySamplerYcbcrConversionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSamplerYcbcrConversion")] SamplerYcbcrConversionHandle ycbcrConversion,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySemaphore")]
    void DestroySemaphore(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySemaphore")]
    void DestroySemaphore(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderEXT")]
    void DestroyShaderEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderEXT")]
    void DestroyShaderEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderModule")]
    void DestroyShaderModule(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyShaderModule")]
    void DestroyShaderModule(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySurfaceKHR")]
    void DestroySurfaceKHR(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySurfaceKHR")]
    void DestroySurfaceKHR(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySwapchainKHR")]
    void DestroySwapchainKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroySwapchainKHR")]
    void DestroySwapchainKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyValidationCacheEXT")]
    void DestroyValidationCacheEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyValidationCacheEXT")]
    void DestroyValidationCacheEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionKHR")]
    void DestroyVideoSessionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionKHR")]
    void DestroyVideoSessionKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionParametersKHR")]
    void DestroyVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionParametersKHR")]
            VideoSessionParametersKHRHandle videoSessionParameters,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDestroyVideoSessionParametersKHR")]
    void DestroyVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionParametersKHR")]
            VideoSessionParametersKHRHandle videoSessionParameters,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDeviceWaitIdle")]
    Result DeviceWaitIdle([NativeTypeName("VkDevice")] DeviceHandle device);

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkDisplayPowerControlEXT")]
    Result DisplayPowerControlEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("const VkDisplayPowerInfoEXT *")] DisplayPowerInfoEXT* pDisplayPowerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkDisplayPowerControlEXT")]
    Result DisplayPowerControlEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("const VkDisplayPowerInfoEXT *")] Ref<DisplayPowerInfoEXT> pDisplayPowerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEndCommandBuffer")]
    Result EndCommandBuffer([NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer);

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceExtensionProperties")]
    Result EnumerateDeviceExtensionProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const char *")] sbyte* pLayerName,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        ExtensionProperties* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceExtensionProperties")]
    Result EnumerateDeviceExtensionProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const char *")] Ref<sbyte> pLayerName,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<ExtensionProperties> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceLayerProperties")]
    Result EnumerateDeviceLayerProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        LayerProperties* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateDeviceLayerProperties")]
    Result EnumerateDeviceLayerProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<LayerProperties> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceExtensionProperties")]
    Result EnumerateInstanceExtensionProperties(
        [NativeTypeName("const char *")] sbyte* pLayerName,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        ExtensionProperties* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceExtensionProperties")]
    Result EnumerateInstanceExtensionProperties(
        [NativeTypeName("const char *")] Ref<sbyte> pLayerName,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<ExtensionProperties> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceLayerProperties")]
    Result EnumerateInstanceLayerProperties(
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        LayerProperties* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceLayerProperties")]
    Result EnumerateInstanceLayerProperties(
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<LayerProperties> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceVersion")]
    Result EnumerateInstanceVersion([NativeTypeName("uint32_t *")] uint* pApiVersion);

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumerateInstanceVersion")]
    Result EnumerateInstanceVersion([NativeTypeName("uint32_t *")] Ref<uint> pApiVersion);

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroups")]
    Result EnumeratePhysicalDeviceGroups(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("uint32_t *")] uint* pPhysicalDeviceGroupCount,
        PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroups")]
    Result EnumeratePhysicalDeviceGroups(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("uint32_t *")] Ref<uint> pPhysicalDeviceGroupCount,
        Ref<PhysicalDeviceGroupProperties> pPhysicalDeviceGroupProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_device_group_creation"])]
    [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroupsKHR")]
    Result EnumeratePhysicalDeviceGroupsKHR(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("uint32_t *")] uint* pPhysicalDeviceGroupCount,
        PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_device_group_creation"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDeviceGroupsKHR")]
    Result EnumeratePhysicalDeviceGroupsKHR(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("uint32_t *")] Ref<uint> pPhysicalDeviceGroupCount,
        Ref<PhysicalDeviceGroupProperties> pPhysicalDeviceGroupProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_performance_query"],
        ImpliesSets = [
            "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
            "VK_KHR_performance_query+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"
    )]
    Result EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t")] uint queueFamilyIndex,
        [NativeTypeName("uint32_t *")] uint* pCounterCount,
        PerformanceCounterKHR* pCounters,
        PerformanceCounterDescriptionKHR* pCounterDescriptions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_performance_query"],
        ImpliesSets = [
            "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
            "VK_KHR_performance_query+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"
    )]
    Result EnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t")] uint queueFamilyIndex,
        [NativeTypeName("uint32_t *")] Ref<uint> pCounterCount,
        Ref<PerformanceCounterKHR> pCounters,
        Ref<PerformanceCounterDescriptionKHR> pCounterDescriptions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDevices")]
    Result EnumeratePhysicalDevices(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("uint32_t *")] uint* pPhysicalDeviceCount,
        [NativeTypeName("VkPhysicalDevice *")] PhysicalDeviceHandle* pPhysicalDevices
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkEnumeratePhysicalDevices")]
    Result EnumeratePhysicalDevices(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("uint32_t *")] Ref<uint> pPhysicalDeviceCount,
        [NativeTypeName("VkPhysicalDevice *")] Ref<PhysicalDeviceHandle> pPhysicalDevices
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkFlushMappedMemoryRanges")]
    Result FlushMappedMemoryRanges(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint memoryRangeCount,
        [NativeTypeName("const VkMappedMemoryRange *")] MappedMemoryRange* pMemoryRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkFlushMappedMemoryRanges")]
    Result FlushMappedMemoryRanges(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint memoryRangeCount,
        [NativeTypeName("const VkMappedMemoryRange *")] Ref<MappedMemoryRange> pMemoryRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkFreeCommandBuffers")]
    void FreeCommandBuffer(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkFreeCommandBuffers")]
    void FreeCommandBuffers(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("uint32_t")] uint commandBufferCount,
        [NativeTypeName("const VkCommandBuffer *")] CommandBufferHandle* pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkFreeCommandBuffers")]
    void FreeCommandBuffers(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("uint32_t")] uint commandBufferCount,
        [NativeTypeName("const VkCommandBuffer *")] Ref<CommandBufferHandle> pCommandBuffers
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkFreeDescriptorSets")]
    Result FreeDescriptorSets(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
        [NativeTypeName("uint32_t")] uint descriptorSetCount,
        [NativeTypeName("const VkDescriptorSet *")] DescriptorSetHandle* pDescriptorSets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkFreeDescriptorSets")]
    Result FreeDescriptorSets(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
        [NativeTypeName("uint32_t")] uint descriptorSetCount,
        [NativeTypeName("const VkDescriptorSet *")] Ref<DescriptorSetHandle> pDescriptorSets
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkFreeMemory")]
    void FreeMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkFreeMemory")]
    void FreeMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureBuildSizesKHR")]
    void GetAccelerationStructureBuildSizesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        AccelerationStructureBuildTypeKHR buildType,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            AccelerationStructureBuildGeometryInfoKHR* pBuildInfo,
        [NativeTypeName("const uint32_t *")] uint* pMaxPrimitiveCounts,
        AccelerationStructureBuildSizesInfoKHR* pSizeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureBuildSizesKHR")]
    void GetAccelerationStructureBuildSizesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        AccelerationStructureBuildTypeKHR buildType,
        [NativeTypeName("const VkAccelerationStructureBuildGeometryInfoKHR *")]
            Ref<AccelerationStructureBuildGeometryInfoKHR> pBuildInfo,
        [NativeTypeName("const uint32_t *")] Ref<uint> pMaxPrimitiveCounts,
        Ref<AccelerationStructureBuildSizesInfoKHR> pSizeInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureDeviceAddressKHR")]
    ulong GetAccelerationStructureDeviceAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureDeviceAddressInfoKHR *")]
            AccelerationStructureDeviceAddressInfoKHR* pInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureDeviceAddressKHR")]
    ulong GetAccelerationStructureDeviceAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureDeviceAddressInfoKHR *")]
            Ref<AccelerationStructureDeviceAddressInfoKHR> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureHandleNV")]
    Result GetAccelerationStructureHandleNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkAccelerationStructureNV")]
            AccelerationStructureNVHandle accelerationStructure,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureHandleNV")]
    Result GetAccelerationStructureHandleNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkAccelerationStructureNV")]
            AccelerationStructureNVHandle accelerationStructure,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureMemoryRequirementsNV")]
    void GetAccelerationStructureMemoryRequirementsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureMemoryRequirementsInfoNV *")]
            AccelerationStructureMemoryRequirementsInfoNV* pInfo,
        [NativeTypeName("VkMemoryRequirements2KHR *")] MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetAccelerationStructureMemoryRequirementsNV")]
    void GetAccelerationStructureMemoryRequirementsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureMemoryRequirementsInfoNV *")]
            Ref<AccelerationStructureMemoryRequirementsInfoNV> pInfo,
        [NativeTypeName("VkMemoryRequirements2KHR *")] Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        [
            "VK_EXT_descriptor_buffer+VK_KHR_acceleration_structure",
            "VK_EXT_descriptor_buffer+VK_NV_ray_tracing",
        ],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT"
    )]
    Result GetAccelerationStructureOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureCaptureDescriptorDataInfoEXT *")]
            AccelerationStructureCaptureDescriptorDataInfoEXT* pInfo,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        [
            "VK_EXT_descriptor_buffer+VK_KHR_acceleration_structure",
            "VK_EXT_descriptor_buffer+VK_NV_ray_tracing",
        ],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT"
    )]
    Result GetAccelerationStructureOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureCaptureDescriptorDataInfoEXT *")]
            Ref<AccelerationStructureCaptureDescriptorDataInfoEXT> pInfo,
        Ref pData
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddress")]
    ulong GetBufferDeviceAddress(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddress")]
    ulong GetBufferDeviceAddress(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_buffer_device_address"],
        ImpliesSets = [
            "VK_EXT_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_EXT_buffer_device_address+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressEXT")]
    ulong GetBufferDeviceAddressEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_buffer_device_address"],
        ImpliesSets = [
            "VK_EXT_buffer_device_address+VK_KHR_get_physical_device_properties2",
            "VK_EXT_buffer_device_address+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressEXT")]
    ulong GetBufferDeviceAddressEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_buffer_device_address"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressKHR")]
    ulong GetBufferDeviceAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_buffer_device_address"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferDeviceAddressKHR")]
    ulong GetBufferDeviceAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements")]
    void GetBufferMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        MemoryRequirements* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements")]
    void GetBufferMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkBuffer")] BufferHandle buffer,
        Ref<MemoryRequirements> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2")]
    void GetBufferMemoryRequirements2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
            BufferMemoryRequirementsInfo2* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2")]
    void GetBufferMemoryRequirements2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
            Ref<BufferMemoryRequirementsInfo2> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2KHR")]
    void GetBufferMemoryRequirements2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
            BufferMemoryRequirementsInfo2* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferMemoryRequirements2KHR")]
    void GetBufferMemoryRequirements2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferMemoryRequirementsInfo2 *")]
            Ref<BufferMemoryRequirementsInfo2> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddress")]
    ulong GetBufferOpaqueCaptureAddress(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddress")]
    ulong GetBufferOpaqueCaptureAddress(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_buffer_device_address"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddressKHR")]
    ulong GetBufferOpaqueCaptureAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] BufferDeviceAddressInfo* pInfo
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_buffer_device_address"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureAddressKHR")]
    ulong GetBufferOpaqueCaptureAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferDeviceAddressInfo *")] Ref<BufferDeviceAddressInfo> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureDescriptorDataEXT")]
    Result GetBufferOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferCaptureDescriptorDataInfoEXT *")]
            BufferCaptureDescriptorDataInfoEXT* pInfo,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetBufferOpaqueCaptureDescriptorDataEXT")]
    Result GetBufferOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkBufferCaptureDescriptorDataInfoEXT *")]
            Ref<BufferCaptureDescriptorDataInfoEXT> pInfo,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_calibrated_timestamps"],
        ImpliesSets = [
            "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsEXT")]
    Result GetCalibratedTimestampsEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint timestampCount,
        [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
            CalibratedTimestampInfoKHR* pTimestampInfos,
        [NativeTypeName("uint64_t *")] ulong* pTimestamps,
        [NativeTypeName("uint64_t *")] ulong* pMaxDeviation
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_calibrated_timestamps"],
        ImpliesSets = [
            "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsEXT")]
    Result GetCalibratedTimestampsEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint timestampCount,
        [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
            Ref<CalibratedTimestampInfoKHR> pTimestampInfos,
        [NativeTypeName("uint64_t *")] Ref<ulong> pTimestamps,
        [NativeTypeName("uint64_t *")] Ref<ulong> pMaxDeviation
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_calibrated_timestamps"],
        ImpliesSets = [
            "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsKHR")]
    Result GetCalibratedTimestampsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint timestampCount,
        [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
            CalibratedTimestampInfoKHR* pTimestampInfos,
        [NativeTypeName("uint64_t *")] ulong* pTimestamps,
        [NativeTypeName("uint64_t *")] ulong* pMaxDeviation
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_calibrated_timestamps"],
        ImpliesSets = [
            "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetCalibratedTimestampsKHR")]
    Result GetCalibratedTimestampsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint timestampCount,
        [NativeTypeName("const VkCalibratedTimestampInfoKHR *")]
            Ref<CalibratedTimestampInfoKHR> pTimestampInfos,
        [NativeTypeName("uint64_t *")] Ref<ulong> pTimestamps,
        [NativeTypeName("uint64_t *")] Ref<ulong> pMaxDeviation
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cluster_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetClusterAccelerationStructureBuildSizesNV")]
    void GetClusterAccelerationStructureBuildSizesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkClusterAccelerationStructureInputInfoNV *")]
            ClusterAccelerationStructureInputInfoNV* pInfo,
        AccelerationStructureBuildSizesInfoKHR* pSizeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cluster_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetClusterAccelerationStructureBuildSizesNV")]
    void GetClusterAccelerationStructureBuildSizesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkClusterAccelerationStructureInputInfoNV *")]
            Ref<ClusterAccelerationStructureInputInfoNV> pInfo,
        Ref<AccelerationStructureBuildSizesInfoKHR> pSizeInfo
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetCudaModuleCacheNV")]
    Result GetCudaModuleCacheNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
        [NativeTypeName("size_t *")] nuint* pCacheSize,
        void* pCacheData
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cuda_kernel_launch"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetCudaModuleCacheNV")]
    Result GetCudaModuleCacheNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCudaModuleNV")] CudaModuleNVHandle module,
        [NativeTypeName("size_t *")] Ref<nuint> pCacheSize,
        Ref pCacheData
    );

    [return: NativeTypeName("uint32_t")]
    [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeferredOperationMaxConcurrencyKHR")]
    uint GetDeferredOperationMaxConcurrencyKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_deferred_host_operations"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeferredOperationResultKHR")]
    Result GetDeferredOperationResultKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeferredOperationKHR")] DeferredOperationKHRHandle operation
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorEXT")]
    void GetDescriptorEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorGetInfoEXT *")] DescriptorGetInfoEXT* pDescriptorInfo,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pDescriptor
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorEXT")]
    void GetDescriptorEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorGetInfoEXT *")]
            Ref<DescriptorGetInfoEXT> pDescriptorInfo,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pDescriptor
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VALVE_descriptor_set_host_mapping"],
        ImpliesSets = [
            "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
            "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetHostMappingVALVE")]
    void GetDescriptorSetHostMappingValve(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
        void** ppData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VALVE_descriptor_set_host_mapping"],
        ImpliesSets = [
            "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
            "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetHostMappingVALVE")]
    void GetDescriptorSetHostMappingValve(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
        Ref2D ppData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutBindingOffsetEXT")]
    void GetDescriptorSetLayoutBindingOffsetEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint binding,
        [NativeTypeName("VkDeviceSize *")] ulong* pOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutBindingOffsetEXT")]
    void GetDescriptorSetLayoutBindingOffsetEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
        [NativeTypeName("uint32_t")] uint binding,
        [NativeTypeName("VkDeviceSize *")] Ref<ulong> pOffset
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VALVE_descriptor_set_host_mapping"],
        ImpliesSets = [
            "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
            "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutHostMappingInfoVALVE")]
    void GetDescriptorSetLayoutHostMappingInfoValve(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetBindingReferenceVALVE *")]
            DescriptorSetBindingReferenceValve* pBindingReference,
        DescriptorSetLayoutHostMappingInfoValve* pHostMapping
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VALVE_descriptor_set_host_mapping"],
        ImpliesSets = [
            "VK_VALVE_descriptor_set_host_mapping+VK_KHR_get_physical_device_properties2",
            "VK_VALVE_descriptor_set_host_mapping+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutHostMappingInfoVALVE")]
    void GetDescriptorSetLayoutHostMappingInfoValve(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetBindingReferenceVALVE *")]
            Ref<DescriptorSetBindingReferenceValve> pBindingReference,
        Ref<DescriptorSetLayoutHostMappingInfoValve> pHostMapping
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSizeEXT")]
    void GetDescriptorSetLayoutSizeEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
        [NativeTypeName("VkDeviceSize *")] ulong* pLayoutSizeInBytes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSizeEXT")]
    void GetDescriptorSetLayoutSizeEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSetLayout")] DescriptorSetLayoutHandle layout,
        [NativeTypeName("VkDeviceSize *")] Ref<ulong> pLayoutSizeInBytes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupport")]
    void GetDescriptorSetLayoutSupport(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
            DescriptorSetLayoutCreateInfo* pCreateInfo,
        DescriptorSetLayoutSupport* pSupport
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupport")]
    void GetDescriptorSetLayoutSupport(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
            Ref<DescriptorSetLayoutCreateInfo> pCreateInfo,
        Ref<DescriptorSetLayoutSupport> pSupport
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance3"],
        ImpliesSets = [
            "VK_KHR_maintenance3+VK_KHR_get_physical_device_properties2",
            "VK_KHR_maintenance3+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupportKHR")]
    void GetDescriptorSetLayoutSupportKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
            DescriptorSetLayoutCreateInfo* pCreateInfo,
        DescriptorSetLayoutSupport* pSupport
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance3"],
        ImpliesSets = [
            "VK_KHR_maintenance3+VK_KHR_get_physical_device_properties2",
            "VK_KHR_maintenance3+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDescriptorSetLayoutSupportKHR")]
    void GetDescriptorSetLayoutSupportKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDescriptorSetLayoutCreateInfo *")]
            Ref<DescriptorSetLayoutCreateInfo> pCreateInfo,
        Ref<DescriptorSetLayoutSupport> pSupport
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceAccelerationStructureCompatibilityKHR")]
    void GetDeviceAccelerationStructureCompatibilityKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureVersionInfoKHR *")]
            AccelerationStructureVersionInfoKHR* pVersionInfo,
        AccelerationStructureCompatibilityKHR* pCompatibility
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceAccelerationStructureCompatibilityKHR")]
    void GetDeviceAccelerationStructureCompatibilityKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkAccelerationStructureVersionInfoKHR *")]
            Ref<AccelerationStructureVersionInfoKHR> pVersionInfo,
        Ref<AccelerationStructureCompatibilityKHR> pCompatibility
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirements")]
    void GetDeviceBufferMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
            DeviceBufferMemoryRequirements* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirements")]
    void GetDeviceBufferMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
            Ref<DeviceBufferMemoryRequirements> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirementsKHR")]
    void GetDeviceBufferMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
            DeviceBufferMemoryRequirements* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceBufferMemoryRequirementsKHR")]
    void GetDeviceBufferMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceBufferMemoryRequirements *")]
            Ref<DeviceBufferMemoryRequirements> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_fault"],
        ImpliesSets = [
            "VK_EXT_device_fault+VK_KHR_get_physical_device_properties2",
            "VK_EXT_device_fault+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceFaultInfoEXT")]
    Result GetDeviceFaultInfoEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        DeviceFaultCountsEXT* pFaultCounts,
        DeviceFaultInfoEXT* pFaultInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_fault"],
        ImpliesSets = [
            "VK_EXT_device_fault+VK_KHR_get_physical_device_properties2",
            "VK_EXT_device_fault+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceFaultInfoEXT")]
    Result GetDeviceFaultInfoEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        Ref<DeviceFaultCountsEXT> pFaultCounts,
        Ref<DeviceFaultInfoEXT> pFaultInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeatures")]
    void GetDeviceGroupPeerMemoryFeatures(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint heapIndex,
        [NativeTypeName("uint32_t")] uint localDeviceIndex,
        [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
        [NativeTypeName("VkPeerMemoryFeatureFlags *")] uint* pPeerMemoryFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeatures")]
    void GetDeviceGroupPeerMemoryFeatures(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint heapIndex,
        [NativeTypeName("uint32_t")] uint localDeviceIndex,
        [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
        [NativeTypeName("VkPeerMemoryFeatureFlags *")] Ref<uint> pPeerMemoryFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_device_group"],
        ImpliesSets = ["VK_KHR_device_group_creation"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeaturesKHR")]
    void GetDeviceGroupPeerMemoryFeaturesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint heapIndex,
        [NativeTypeName("uint32_t")] uint localDeviceIndex,
        [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
        [NativeTypeName("VkPeerMemoryFeatureFlags *")] uint* pPeerMemoryFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_device_group"],
        ImpliesSets = ["VK_KHR_device_group_creation"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPeerMemoryFeaturesKHR")]
    void GetDeviceGroupPeerMemoryFeaturesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint heapIndex,
        [NativeTypeName("uint32_t")] uint localDeviceIndex,
        [NativeTypeName("uint32_t")] uint remoteDeviceIndex,
        [NativeTypeName("VkPeerMemoryFeatureFlags *")] Ref<uint> pPeerMemoryFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPresentCapabilitiesKHR")]
    Result GetDeviceGroupPresentCapabilitiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        DeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupPresentCapabilitiesKHR")]
    Result GetDeviceGroupPresentCapabilitiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        Ref<DeviceGroupPresentCapabilitiesKHR> pDeviceGroupPresentCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupSurfacePresentModesKHR")]
    Result GetDeviceGroupSurfacePresentModesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("VkDeviceGroupPresentModeFlagsKHR *")] uint* pModes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceGroupSurfacePresentModesKHR")]
    Result GetDeviceGroupSurfacePresentModesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("VkDeviceGroupPresentModeFlagsKHR *")] Ref<uint> pModes
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirements")]
    void GetDeviceImageMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            DeviceImageMemoryRequirements* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirements")]
    void GetDeviceImageMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            Ref<DeviceImageMemoryRequirements> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirementsKHR")]
    void GetDeviceImageMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            DeviceImageMemoryRequirements* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageMemoryRequirementsKHR")]
    void GetDeviceImageMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            Ref<DeviceImageMemoryRequirements> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirements")]
    void GetDeviceImageSparseMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            DeviceImageMemoryRequirements* pInfo,
        [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
        SparseImageMemoryRequirements2* pSparseMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirements")]
    void GetDeviceImageSparseMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            Ref<DeviceImageMemoryRequirements> pInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
        Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirementsKHR")]
    void GetDeviceImageSparseMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            DeviceImageMemoryRequirements* pInfo,
        [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
        SparseImageMemoryRequirements2* pSparseMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance4"], ImpliesSets = ["VK_VERSION_1_1"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSparseMemoryRequirementsKHR")]
    void GetDeviceImageSparseMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageMemoryRequirements *")]
            Ref<DeviceImageMemoryRequirements> pInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
        Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayout")]
    void GetDeviceImageSubresourceLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageSubresourceInfo *")] DeviceImageSubresourceInfo* pInfo,
        SubresourceLayout2* pLayout
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayout")]
    void GetDeviceImageSubresourceLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageSubresourceInfo *")]
            Ref<DeviceImageSubresourceInfo> pInfo,
        Ref<SubresourceLayout2> pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance5"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayoutKHR")]
    void GetDeviceImageSubresourceLayoutKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageSubresourceInfo *")] DeviceImageSubresourceInfo* pInfo,
        SubresourceLayout2* pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance5"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceImageSubresourceLayoutKHR")]
    void GetDeviceImageSubresourceLayoutKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceImageSubresourceInfo *")]
            Ref<DeviceImageSubresourceInfo> pInfo,
        Ref<SubresourceLayout2> pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryCommitment")]
    void GetDeviceMemoryCommitment(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("VkDeviceSize *")] ulong* pCommittedMemoryInBytes
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryCommitment")]
    void GetDeviceMemoryCommitment(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("VkDeviceSize *")] Ref<ulong> pCommittedMemoryInBytes
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddress")]
    ulong GetDeviceMemoryOpaqueCaptureAddress(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
            DeviceMemoryOpaqueCaptureAddressInfo* pInfo
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddress")]
    ulong GetDeviceMemoryOpaqueCaptureAddress(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
            Ref<DeviceMemoryOpaqueCaptureAddressInfo> pInfo
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_buffer_device_address"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddressKHR")]
    ulong GetDeviceMemoryOpaqueCaptureAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
            DeviceMemoryOpaqueCaptureAddressInfo* pInfo
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_buffer_device_address"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_device_group",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMemoryOpaqueCaptureAddressKHR")]
    ulong GetDeviceMemoryOpaqueCaptureAddressKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceMemoryOpaqueCaptureAddressInfo *")]
            Ref<DeviceMemoryOpaqueCaptureAddressInfo> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMicromapCompatibilityEXT")]
    void GetDeviceMicromapCompatibilityEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMicromapVersionInfoEXT *")] MicromapVersionInfoEXT* pVersionInfo,
        AccelerationStructureCompatibilityKHR* pCompatibility
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceMicromapCompatibilityEXT")]
    void GetDeviceMicromapCompatibilityEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMicromapVersionInfoEXT *")]
            Ref<MicromapVersionInfoEXT> pVersionInfo,
        Ref<AccelerationStructureCompatibilityKHR> pCompatibility
    );

    [return: NativeTypeName("PFN_vkVoidFunction")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceProcAddr")]
    PFNVkVoidFunction GetDeviceProcAddr(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const char *")] sbyte* pName
    );

    [return: NativeTypeName("PFN_vkVoidFunction")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceProcAddr")]
    PFNVkVoidFunction GetDeviceProcAddr(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const char *")] Ref<sbyte> pName
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue")]
    void GetDeviceQueue(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint queueFamilyIndex,
        [NativeTypeName("uint32_t")] uint queueIndex,
        [NativeTypeName("VkQueue *")] QueueHandle* pQueue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue")]
    void GetDeviceQueue(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint queueFamilyIndex,
        [NativeTypeName("uint32_t")] uint queueIndex,
        [NativeTypeName("VkQueue *")] Ref<QueueHandle> pQueue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue2")]
    void GetDeviceQueue2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceQueueInfo2 *")] DeviceQueueInfo2* pQueueInfo,
        [NativeTypeName("VkQueue *")] QueueHandle* pQueue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceQueue2")]
    void GetDeviceQueue2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceQueueInfo2 *")] Ref<DeviceQueueInfo2> pQueueInfo,
        [NativeTypeName("VkQueue *")] Ref<QueueHandle> pQueue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_HUAWEI_subpass_shading"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_create_renderpass2",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI")]
    Result GetDeviceSubpassShadingMaxWorkgroupSizeHuawei(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkRenderPass")] RenderPassHandle renderpass,
        Extent2D* pMaxWorkgroupSize
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_HUAWEI_subpass_shading"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_create_renderpass2",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI")]
    Result GetDeviceSubpassShadingMaxWorkgroupSizeHuawei(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkRenderPass")] RenderPassHandle renderpass,
        Ref<Extent2D> pMaxWorkgroupSize
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModeProperties2KHR")]
    Result GetDisplayModeProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        DisplayModeProperties2KHR* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModeProperties2KHR")]
    Result GetDisplayModeProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<DisplayModeProperties2KHR> pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModePropertiesKHR")]
    Result GetDisplayModePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        DisplayModePropertiesKHR* pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayModePropertiesKHR")]
    Result GetDisplayModePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<DisplayModePropertiesKHR> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilities2KHR")]
    Result GetDisplayPlaneCapabilities2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkDisplayPlaneInfo2KHR *")] DisplayPlaneInfo2KHR* pDisplayPlaneInfo,
        DisplayPlaneCapabilities2KHR* pCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilities2KHR")]
    Result GetDisplayPlaneCapabilities2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkDisplayPlaneInfo2KHR *")]
            Ref<DisplayPlaneInfo2KHR> pDisplayPlaneInfo,
        Ref<DisplayPlaneCapabilities2KHR> pCapabilities
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilitiesKHR")]
    Result GetDisplayPlaneCapabilitiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayModeKHR")] DisplayModeKHRHandle mode,
        [NativeTypeName("uint32_t")] uint planeIndex,
        DisplayPlaneCapabilitiesKHR* pCapabilities
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneCapabilitiesKHR")]
    Result GetDisplayPlaneCapabilitiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayModeKHR")] DisplayModeKHRHandle mode,
        [NativeTypeName("uint32_t")] uint planeIndex,
        Ref<DisplayPlaneCapabilitiesKHR> pCapabilities
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneSupportedDisplaysKHR")]
    Result GetDisplayPlaneSupportedDisplaysKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t")] uint planeIndex,
        [NativeTypeName("uint32_t *")] uint* pDisplayCount,
        [NativeTypeName("VkDisplayKHR *")] DisplayKHRHandle* pDisplays
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDisplayPlaneSupportedDisplaysKHR")]
    Result GetDisplayPlaneSupportedDisplaysKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t")] uint planeIndex,
        [NativeTypeName("uint32_t *")] Ref<uint> pDisplayCount,
        [NativeTypeName("VkDisplayKHR *")] Ref<DisplayKHRHandle> pDisplays
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_acquire_drm_display"],
        ImpliesSets = ["VK_EXT_direct_mode_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDrmDisplayEXT")]
    Result GetDrmDisplayEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("int32_t")] int drmFd,
        [NativeTypeName("uint32_t")] uint connectorId,
        [NativeTypeName("VkDisplayKHR *")] DisplayKHRHandle* display
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_acquire_drm_display"],
        ImpliesSets = ["VK_EXT_direct_mode_display"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDrmDisplayEXT")]
    Result GetDrmDisplayEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("int32_t")] int drmFd,
        [NativeTypeName("uint32_t")] uint connectorId,
        [NativeTypeName("VkDisplayKHR *")] Ref<DisplayKHRHandle> display
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_properties"],
        ImpliesSets = [
            "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_properties+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetDynamicRenderingTilePropertiesQCOM")]
    Result GetDynamicRenderingTilePropertiesQCOM(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderingInfo *")] RenderingInfo* pRenderingInfo,
        TilePropertiesQCOM* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_properties"],
        ImpliesSets = [
            "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_properties+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetDynamicRenderingTilePropertiesQCOM")]
    Result GetDynamicRenderingTilePropertiesQCOM(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderingInfo *")] Ref<RenderingInfo> pRenderingInfo,
        Ref<TilePropertiesQCOM> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_encode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetEncodedVideoSessionParametersKHR")]
    Result GetEncodedVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkVideoEncodeSessionParametersGetInfoKHR *")]
            VideoEncodeSessionParametersGetInfoKHR* pVideoSessionParametersInfo,
        VideoEncodeSessionParametersFeedbackInfoKHR* pFeedbackInfo,
        [NativeTypeName("size_t *")] nuint* pDataSize,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_encode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetEncodedVideoSessionParametersKHR")]
    Result GetEncodedVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkVideoEncodeSessionParametersGetInfoKHR *")]
            Ref<VideoEncodeSessionParametersGetInfoKHR> pVideoSessionParametersInfo,
        Ref<VideoEncodeSessionParametersFeedbackInfoKHR> pFeedbackInfo,
        [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetEventStatus")]
    Result GetEventStatus(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkEvent")] EventHandle @event
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetExternalComputeQueueDataNV")]
    void GetExternalComputeQueueDataNV(
        [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
        ExternalComputeQueueDataParamsNV* @params,
        void* pData
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_compute_queue"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetExternalComputeQueueDataNV")]
    void GetExternalComputeQueueDataNV(
        [NativeTypeName("VkExternalComputeQueueNV")] ExternalComputeQueueNVHandle externalQueue,
        Ref<ExternalComputeQueueDataParamsNV> @params,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_fence_fd"],
        ImpliesSets = [
            "VK_KHR_external_fence_fd+VK_KHR_external_fence",
            "VK_KHR_external_fence_fd+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetFenceFdKHR")]
    Result GetFenceFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkFenceGetFdInfoKHR *")] FenceGetFdInfoKHR* pGetFdInfo,
        int* pFd
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_fence_fd"],
        ImpliesSets = [
            "VK_KHR_external_fence_fd+VK_KHR_external_fence",
            "VK_KHR_external_fence_fd+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetFenceFdKHR")]
    Result GetFenceFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkFenceGetFdInfoKHR *")] Ref<FenceGetFdInfoKHR> pGetFdInfo,
        Ref<int> pFd
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetFenceStatus")]
    Result GetFenceStatus(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_properties"],
        ImpliesSets = [
            "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_properties+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetFramebufferTilePropertiesQCOM")]
    Result GetFramebufferTilePropertiesQCOM(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
        [NativeTypeName("uint32_t *")] uint* pPropertiesCount,
        TilePropertiesQCOM* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_QCOM_tile_properties"],
        ImpliesSets = [
            "VK_QCOM_tile_properties+VK_KHR_get_physical_device_properties2",
            "VK_QCOM_tile_properties+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetFramebufferTilePropertiesQCOM")]
    Result GetFramebufferTilePropertiesQCOM(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkFramebuffer")] FramebufferHandle framebuffer,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertiesCount,
        Ref<TilePropertiesQCOM> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsEXT")]
    void GetGeneratedCommandsMemoryRequirementsEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoEXT *")]
            GeneratedCommandsMemoryRequirementsInfoEXT* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsEXT")]
    void GetGeneratedCommandsMemoryRequirementsEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoEXT *")]
            Ref<GeneratedCommandsMemoryRequirementsInfoEXT> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsNV")]
    void GetGeneratedCommandsMemoryRequirementsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoNV *")]
            GeneratedCommandsMemoryRequirementsInfoNV* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_buffer_device_address", "VK_VERSION_1_2"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetGeneratedCommandsMemoryRequirementsNV")]
    void GetGeneratedCommandsMemoryRequirementsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkGeneratedCommandsMemoryRequirementsInfoNV *")]
            Ref<GeneratedCommandsMemoryRequirementsInfoNV> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_image_drm_format_modifier"],
        ImpliesSets = [
            "VK_KHR_image_format_list+VK_KHR_bind_memory2+VK_KHR_get_physical_device_properties2+VK_KHR_sampler_ycbcr_conversion",
            "VK_KHR_image_format_list+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageDrmFormatModifierPropertiesEXT")]
    Result GetImageDrmFormatModifierPropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        ImageDrmFormatModifierPropertiesEXT* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_image_drm_format_modifier"],
        ImpliesSets = [
            "VK_KHR_image_format_list+VK_KHR_bind_memory2+VK_KHR_get_physical_device_properties2+VK_KHR_sampler_ycbcr_conversion",
            "VK_KHR_image_format_list+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageDrmFormatModifierPropertiesEXT")]
    Result GetImageDrmFormatModifierPropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        Ref<ImageDrmFormatModifierPropertiesEXT> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements")]
    void GetImageMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        MemoryRequirements* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements")]
    void GetImageMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        Ref<MemoryRequirements> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2")]
    void GetImageMemoryRequirements2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
            ImageMemoryRequirementsInfo2* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2")]
    void GetImageMemoryRequirements2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
            Ref<ImageMemoryRequirementsInfo2> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2KHR")]
    void GetImageMemoryRequirements2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
            ImageMemoryRequirementsInfo2* pInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageMemoryRequirements2KHR")]
    void GetImageMemoryRequirements2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageMemoryRequirementsInfo2 *")]
            Ref<ImageMemoryRequirementsInfo2> pInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageOpaqueCaptureDescriptorDataEXT")]
    Result GetImageOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageCaptureDescriptorDataInfoEXT *")]
            ImageCaptureDescriptorDataInfoEXT* pInfo,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageOpaqueCaptureDescriptorDataEXT")]
    Result GetImageOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageCaptureDescriptorDataInfoEXT *")]
            Ref<ImageCaptureDescriptorDataInfoEXT> pInfo,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements")]
    void GetImageSparseMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
        SparseImageMemoryRequirements* pSparseMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements")]
    void GetImageSparseMemoryRequirements(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
        Ref<SparseImageMemoryRequirements> pSparseMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2")]
    void GetImageSparseMemoryRequirements2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
            ImageSparseMemoryRequirementsInfo2* pInfo,
        [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
        SparseImageMemoryRequirements2* pSparseMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2")]
    void GetImageSparseMemoryRequirements2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
            Ref<ImageSparseMemoryRequirementsInfo2> pInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
        Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2KHR")]
    void GetImageSparseMemoryRequirements2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
            ImageSparseMemoryRequirementsInfo2* pInfo,
        [NativeTypeName("uint32_t *")] uint* pSparseMemoryRequirementCount,
        SparseImageMemoryRequirements2* pSparseMemoryRequirements
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_memory_requirements2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSparseMemoryRequirements2KHR")]
    void GetImageSparseMemoryRequirements2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageSparseMemoryRequirementsInfo2 *")]
            Ref<ImageSparseMemoryRequirementsInfo2> pInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pSparseMemoryRequirementCount,
        Ref<SparseImageMemoryRequirements2> pSparseMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout")]
    void GetImageSubresourceLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource *")] ImageSubresource* pSubresource,
        SubresourceLayout* pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout")]
    void GetImageSubresourceLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource *")] Ref<ImageSubresource> pSubresource,
        Ref<SubresourceLayout> pLayout
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2")]
    void GetImageSubresourceLayout2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource2 *")] ImageSubresource2* pSubresource,
        SubresourceLayout2* pLayout
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2")]
    void GetImageSubresourceLayout2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource2 *")] Ref<ImageSubresource2> pSubresource,
        Ref<SubresourceLayout2> pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2EXT")]
    void GetImageSubresourceLayout2EXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource2 *")] ImageSubresource2* pSubresource,
        SubresourceLayout2* pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2EXT")]
    void GetImageSubresourceLayout2EXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource2 *")] Ref<ImageSubresource2> pSubresource,
        Ref<SubresourceLayout2> pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance5"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2KHR")]
    void GetImageSubresourceLayout2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource2 *")] ImageSubresource2* pSubresource,
        SubresourceLayout2* pLayout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance5"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageSubresourceLayout2KHR")]
    void GetImageSubresourceLayout2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImage")] ImageHandle image,
        [NativeTypeName("const VkImageSubresource2 *")] Ref<ImageSubresource2> pSubresource,
        Ref<SubresourceLayout2> pLayout
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewAddressNVX")]
    Result GetImageViewAddressNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImageView")] ImageViewHandle imageView,
        ImageViewAddressPropertiesNVX* pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewAddressNVX")]
    Result GetImageViewAddressNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkImageView")] ImageViewHandle imageView,
        Ref<ImageViewAddressPropertiesNVX> pProperties
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandle64NVX")]
    ulong GetImageViewHandle64NVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewHandleInfoNVX *")] ImageViewHandleInfoNVX* pInfo
    );

    [return: NativeTypeName("uint64_t")]
    [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandle64NVX")]
    ulong GetImageViewHandle64NVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewHandleInfoNVX *")] Ref<ImageViewHandleInfoNVX> pInfo
    );

    [return: NativeTypeName("uint32_t")]
    [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandleNVX")]
    uint GetImageViewHandleNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewHandleInfoNVX *")] ImageViewHandleInfoNVX* pInfo
    );

    [return: NativeTypeName("uint32_t")]
    [SupportedApiProfile("vulkan", ["VK_NVX_image_view_handle"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewHandleNVX")]
    uint GetImageViewHandleNVX(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewHandleInfoNVX *")] Ref<ImageViewHandleInfoNVX> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewOpaqueCaptureDescriptorDataEXT")]
    Result GetImageViewOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewCaptureDescriptorDataInfoEXT *")]
            ImageViewCaptureDescriptorDataInfoEXT* pInfo,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetImageViewOpaqueCaptureDescriptorDataEXT")]
    Result GetImageViewOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImageViewCaptureDescriptorDataInfoEXT *")]
            Ref<ImageViewCaptureDescriptorDataInfoEXT> pInfo,
        Ref pData
    );

    [return: NativeTypeName("PFN_vkVoidFunction")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetInstanceProcAddr")]
    PFNVkVoidFunction GetInstanceProcAddr(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const char *")] sbyte* pName
    );

    [return: NativeTypeName("PFN_vkVoidFunction")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetInstanceProcAddr")]
    PFNVkVoidFunction GetInstanceProcAddr(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("const char *")] Ref<sbyte> pName
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetLatencyTimingsNV")]
    void GetLatencyTimingsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        GetLatencyMarkerInfoNV* pLatencyMarkerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetLatencyTimingsNV")]
    void GetLatencyTimingsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        Ref<GetLatencyMarkerInfoNV> pLatencyMarkerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_memory_fd"],
        ImpliesSets = [
            "VK_KHR_external_memory_fd+VK_KHR_external_memory",
            "VK_KHR_external_memory_fd+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdKHR")]
    Result GetMemoryFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryGetFdInfoKHR *")] MemoryGetFdInfoKHR* pGetFdInfo,
        int* pFd
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_memory_fd"],
        ImpliesSets = [
            "VK_KHR_external_memory_fd+VK_KHR_external_memory",
            "VK_KHR_external_memory_fd+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdKHR")]
    Result GetMemoryFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryGetFdInfoKHR *")] Ref<MemoryGetFdInfoKHR> pGetFdInfo,
        Ref<int> pFd
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_memory_fd"],
        ImpliesSets = [
            "VK_KHR_external_memory_fd+VK_KHR_external_memory",
            "VK_KHR_external_memory_fd+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdPropertiesKHR")]
    Result GetMemoryFdPropertiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
            ExternalMemoryHandleTypeFlags handleType,
        int fd,
        MemoryFdPropertiesKHR* pMemoryFdProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_memory_fd"],
        ImpliesSets = [
            "VK_KHR_external_memory_fd+VK_KHR_external_memory",
            "VK_KHR_external_memory_fd+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryFdPropertiesKHR")]
    Result GetMemoryFdPropertiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
            ExternalMemoryHandleTypeFlags handleType,
        int fd,
        Ref<MemoryFdPropertiesKHR> pMemoryFdProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_external_memory_host"],
        ImpliesSets = [
            "VK_EXT_external_memory_host+VK_KHR_external_memory",
            "VK_EXT_external_memory_host+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryHostPointerPropertiesEXT")]
    Result GetMemoryHostPointerPropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
            ExternalMemoryHandleTypeFlags handleType,
        [NativeTypeName("const void *")] void* pHostPointer,
        MemoryHostPointerPropertiesEXT* pMemoryHostPointerProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_external_memory_host"],
        ImpliesSets = [
            "VK_EXT_external_memory_host+VK_KHR_external_memory",
            "VK_EXT_external_memory_host+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryHostPointerPropertiesEXT")]
    Result GetMemoryHostPointerPropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkExternalMemoryHandleTypeFlagBits")]
            ExternalMemoryHandleTypeFlags handleType,
        [NativeTypeName("const void *")] Ref pHostPointer,
        Ref<MemoryHostPointerPropertiesEXT> pMemoryHostPointerProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_external_memory_rdma"],
        ImpliesSets = [
            "VK_NV_external_memory_rdma+VK_KHR_external_memory",
            "VK_NV_external_memory_rdma+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryRemoteAddressNV")]
    Result GetMemoryRemoteAddressNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryGetRemoteAddressInfoNV *")]
            MemoryGetRemoteAddressInfoNV* pMemoryGetRemoteAddressInfo,
        [NativeTypeName("VkRemoteAddressNV *")] void** pAddress
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_external_memory_rdma"],
        ImpliesSets = [
            "VK_NV_external_memory_rdma+VK_KHR_external_memory",
            "VK_NV_external_memory_rdma+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetMemoryRemoteAddressNV")]
    Result GetMemoryRemoteAddressNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryGetRemoteAddressInfoNV *")]
            Ref<MemoryGetRemoteAddressInfoNV> pMemoryGetRemoteAddressInfo,
        [NativeTypeName("VkRemoteAddressNV *")] Ref2D pAddress
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetMicromapBuildSizesEXT")]
    void GetMicromapBuildSizesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        AccelerationStructureBuildTypeKHR buildType,
        [NativeTypeName("const VkMicromapBuildInfoEXT *")] MicromapBuildInfoEXT* pBuildInfo,
        MicromapBuildSizesInfoEXT* pSizeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetMicromapBuildSizesEXT")]
    void GetMicromapBuildSizesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        AccelerationStructureBuildTypeKHR buildType,
        [NativeTypeName("const VkMicromapBuildInfoEXT *")] Ref<MicromapBuildInfoEXT> pBuildInfo,
        Ref<MicromapBuildSizesInfoEXT> pSizeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_partitioned_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPartitionedAccelerationStructuresBuildSizesNV")]
    void GetPartitionedAccelerationStructuresBuildSizesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPartitionedAccelerationStructureInstancesInputNV *")]
            PartitionedAccelerationStructureInstancesInputNV* pInfo,
        AccelerationStructureBuildSizesInfoKHR* pSizeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_partitioned_acceleration_structure"],
        ImpliesSets = ["VK_KHR_acceleration_structure"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPartitionedAccelerationStructuresBuildSizesNV")]
    void GetPartitionedAccelerationStructuresBuildSizesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPartitionedAccelerationStructureInstancesInputNV *")]
            Ref<PartitionedAccelerationStructureInstancesInputNV> pInfo,
        Ref<AccelerationStructureBuildSizesInfoKHR> pSizeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_GOOGLE_display_timing"],
        ImpliesSets = ["VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPastPresentationTimingGOOGLE")]
    Result GetPastPresentationTimingGoogle(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("uint32_t *")] uint* pPresentationTimingCount,
        PastPresentationTimingGoogle* pPresentationTimings
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_GOOGLE_display_timing"],
        ImpliesSets = ["VK_KHR_swapchain"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPastPresentationTimingGOOGLE")]
    Result GetPastPresentationTimingGoogle(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("uint32_t *")] Ref<uint> pPresentationTimingCount,
        Ref<PastPresentationTimingGoogle> pPresentationTimings
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPerformanceParameterINTEL")]
    Result GetPerformanceParameterIntel(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        PerformanceParameterTypeIntel parameter,
        PerformanceValueIntel* pValue
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPerformanceParameterINTEL")]
    Result GetPerformanceParameterIntel(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        PerformanceParameterTypeIntel parameter,
        Ref<PerformanceValueIntel> pValue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_calibrated_timestamps"],
        ImpliesSets = [
            "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT")]
    Result GetPhysicalDeviceCalibrateableTimeDomainsEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pTimeDomainCount,
        TimeDomainKHR* pTimeDomains
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_calibrated_timestamps"],
        ImpliesSets = [
            "VK_EXT_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_EXT_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT")]
    Result GetPhysicalDeviceCalibrateableTimeDomainsEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pTimeDomainCount,
        Ref<TimeDomainKHR> pTimeDomains
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_calibrated_timestamps"],
        ImpliesSets = [
            "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsKHR")]
    Result GetPhysicalDeviceCalibrateableTimeDomainsKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pTimeDomainCount,
        TimeDomainKHR* pTimeDomains
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_calibrated_timestamps"],
        ImpliesSets = [
            "VK_KHR_calibrated_timestamps+VK_KHR_get_physical_device_properties2",
            "VK_KHR_calibrated_timestamps+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCalibrateableTimeDomainsKHR")]
    Result GetPhysicalDeviceCalibrateableTimeDomainsKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pTimeDomainCount,
        Ref<TimeDomainKHR> pTimeDomains
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cooperative_matrix2"],
        ImpliesSets = ["VK_KHR_cooperative_matrix"]
    )]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV"
    )]
    Result GetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        CooperativeMatrixFlexibleDimensionsPropertiesNV* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cooperative_matrix2"],
        ImpliesSets = ["VK_KHR_cooperative_matrix"]
    )]
    [Transformed]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV"
    )]
    Result GetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<CooperativeMatrixFlexibleDimensionsPropertiesNV> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_cooperative_matrix"],
        ImpliesSets = [
            "VK_KHR_cooperative_matrix+VK_KHR_get_physical_device_properties2",
            "VK_KHR_cooperative_matrix+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR")]
    Result GetPhysicalDeviceCooperativeMatrixPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        CooperativeMatrixPropertiesKHR* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_cooperative_matrix"],
        ImpliesSets = [
            "VK_KHR_cooperative_matrix+VK_KHR_get_physical_device_properties2",
            "VK_KHR_cooperative_matrix+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR")]
    Result GetPhysicalDeviceCooperativeMatrixPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<CooperativeMatrixPropertiesKHR> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cooperative_matrix"],
        ImpliesSets = [
            "VK_NV_cooperative_matrix+VK_KHR_get_physical_device_properties2",
            "VK_NV_cooperative_matrix+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV")]
    Result GetPhysicalDeviceCooperativeMatrixPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        CooperativeMatrixPropertiesNV* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_cooperative_matrix"],
        ImpliesSets = [
            "VK_NV_cooperative_matrix+VK_KHR_get_physical_device_properties2",
            "VK_NV_cooperative_matrix+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV")]
    Result GetPhysicalDeviceCooperativeMatrixPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<CooperativeMatrixPropertiesNV> pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeVectorPropertiesNV")]
    Result GetPhysicalDeviceCooperativeVectorPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        CooperativeVectorPropertiesNV* pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_NV_cooperative_vector"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceCooperativeVectorPropertiesNV")]
    Result GetPhysicalDeviceCooperativeVectorPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<CooperativeVectorPropertiesNV> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlaneProperties2KHR")]
    Result GetPhysicalDeviceDisplayPlaneProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        DisplayPlaneProperties2KHR* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlaneProperties2KHR")]
    Result GetPhysicalDeviceDisplayPlaneProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<DisplayPlaneProperties2KHR> pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlanePropertiesKHR")]
    Result GetPhysicalDeviceDisplayPlanePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        DisplayPlanePropertiesKHR* pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPlanePropertiesKHR")]
    Result GetPhysicalDeviceDisplayPlanePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<DisplayPlanePropertiesKHR> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayProperties2KHR")]
    Result GetPhysicalDeviceDisplayProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        DisplayProperties2KHR* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_display_properties2"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayProperties2KHR")]
    Result GetPhysicalDeviceDisplayProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<DisplayProperties2KHR> pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPropertiesKHR")]
    Result GetPhysicalDeviceDisplayPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        DisplayPropertiesKHR* pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_display"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceDisplayPropertiesKHR")]
    Result GetPhysicalDeviceDisplayPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<DisplayPropertiesKHR> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferProperties")]
    void GetPhysicalDeviceExternalBufferProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
            PhysicalDeviceExternalBufferInfo* pExternalBufferInfo,
        ExternalBufferProperties* pExternalBufferProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferProperties")]
    void GetPhysicalDeviceExternalBufferProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
            Ref<PhysicalDeviceExternalBufferInfo> pExternalBufferInfo,
        Ref<ExternalBufferProperties> pExternalBufferProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_memory_capabilities"],
        ImpliesSets = [
            "VK_KHR_external_memory_capabilities+VK_KHR_get_physical_device_properties2",
            "VK_KHR_external_memory_capabilities+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferPropertiesKHR")]
    void GetPhysicalDeviceExternalBufferPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
            PhysicalDeviceExternalBufferInfo* pExternalBufferInfo,
        ExternalBufferProperties* pExternalBufferProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_memory_capabilities"],
        ImpliesSets = [
            "VK_KHR_external_memory_capabilities+VK_KHR_get_physical_device_properties2",
            "VK_KHR_external_memory_capabilities+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalBufferPropertiesKHR")]
    void GetPhysicalDeviceExternalBufferPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalBufferInfo *")]
            Ref<PhysicalDeviceExternalBufferInfo> pExternalBufferInfo,
        Ref<ExternalBufferProperties> pExternalBufferProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFenceProperties")]
    void GetPhysicalDeviceExternalFenceProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
            PhysicalDeviceExternalFenceInfo* pExternalFenceInfo,
        ExternalFenceProperties* pExternalFenceProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFenceProperties")]
    void GetPhysicalDeviceExternalFenceProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
            Ref<PhysicalDeviceExternalFenceInfo> pExternalFenceInfo,
        Ref<ExternalFenceProperties> pExternalFenceProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_fence_capabilities"],
        ImpliesSets = [
            "VK_KHR_external_fence_capabilities+VK_KHR_get_physical_device_properties2",
            "VK_KHR_external_fence_capabilities+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFencePropertiesKHR")]
    void GetPhysicalDeviceExternalFencePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
            PhysicalDeviceExternalFenceInfo* pExternalFenceInfo,
        ExternalFenceProperties* pExternalFenceProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_fence_capabilities"],
        ImpliesSets = [
            "VK_KHR_external_fence_capabilities+VK_KHR_get_physical_device_properties2",
            "VK_KHR_external_fence_capabilities+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalFencePropertiesKHR")]
    void GetPhysicalDeviceExternalFencePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalFenceInfo *")]
            Ref<PhysicalDeviceExternalFenceInfo> pExternalFenceInfo,
        Ref<ExternalFenceProperties> pExternalFenceProperties
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_memory_capabilities"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalImageFormatPropertiesNV")]
    Result GetPhysicalDeviceExternalImageFormatPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        ImageType type,
        ImageTiling tiling,
        [NativeTypeName("VkImageUsageFlags")] uint usage,
        [NativeTypeName("VkImageCreateFlags")] uint flags,
        [NativeTypeName("VkExternalMemoryHandleTypeFlagsNV")] uint externalHandleType,
        ExternalImageFormatPropertiesNV* pExternalImageFormatProperties
    );

    [SupportedApiProfile("vulkan", ["VK_NV_external_memory_capabilities"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalImageFormatPropertiesNV")]
    Result GetPhysicalDeviceExternalImageFormatPropertiesNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        ImageType type,
        ImageTiling tiling,
        [NativeTypeName("VkImageUsageFlags")] uint usage,
        [NativeTypeName("VkImageCreateFlags")] uint flags,
        [NativeTypeName("VkExternalMemoryHandleTypeFlagsNV")] uint externalHandleType,
        Ref<ExternalImageFormatPropertiesNV> pExternalImageFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphoreProperties")]
    void GetPhysicalDeviceExternalSemaphoreProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
            PhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo,
        ExternalSemaphoreProperties* pExternalSemaphoreProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphoreProperties")]
    void GetPhysicalDeviceExternalSemaphoreProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
            Ref<PhysicalDeviceExternalSemaphoreInfo> pExternalSemaphoreInfo,
        Ref<ExternalSemaphoreProperties> pExternalSemaphoreProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_semaphore_capabilities"],
        ImpliesSets = [
            "VK_KHR_external_semaphore_capabilities+VK_KHR_get_physical_device_properties2",
            "VK_KHR_external_semaphore_capabilities+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR")]
    void GetPhysicalDeviceExternalSemaphorePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
            PhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo,
        ExternalSemaphoreProperties* pExternalSemaphoreProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_semaphore_capabilities"],
        ImpliesSets = [
            "VK_KHR_external_semaphore_capabilities+VK_KHR_get_physical_device_properties2",
            "VK_KHR_external_semaphore_capabilities+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR")]
    void GetPhysicalDeviceExternalSemaphorePropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceExternalSemaphoreInfo *")]
            Ref<PhysicalDeviceExternalSemaphoreInfo> pExternalSemaphoreInfo,
        Ref<ExternalSemaphoreProperties> pExternalSemaphoreProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures")]
    void GetPhysicalDeviceFeatures(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceFeatures* pFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures")]
    void GetPhysicalDeviceFeatures(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceFeatures> pFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2")]
    void GetPhysicalDeviceFeatures2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceFeatures2* pFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2")]
    void GetPhysicalDeviceFeatures2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceFeatures2> pFeatures
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2KHR")]
    void GetPhysicalDeviceFeatures2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceFeatures2* pFeatures
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFeatures2KHR")]
    void GetPhysicalDeviceFeatures2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceFeatures2> pFeatures
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties")]
    void GetPhysicalDeviceFormatProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        FormatProperties* pFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties")]
    void GetPhysicalDeviceFormatProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        Ref<FormatProperties> pFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2")]
    void GetPhysicalDeviceFormatProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        FormatProperties2* pFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2")]
    void GetPhysicalDeviceFormatProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        Ref<FormatProperties2> pFormatProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2KHR")]
    void GetPhysicalDeviceFormatProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        FormatProperties2* pFormatProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFormatProperties2KHR")]
    void GetPhysicalDeviceFormatProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        Ref<FormatProperties2> pFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_fragment_shading_rate"],
        ImpliesSets = [
            "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_create_renderpass2+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFragmentShadingRatesKHR")]
    Result GetPhysicalDeviceFragmentShadingRatesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pFragmentShadingRateCount,
        PhysicalDeviceFragmentShadingRateKHR* pFragmentShadingRates
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_fragment_shading_rate"],
        ImpliesSets = [
            "VK_KHR_create_renderpass2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_create_renderpass2+VK_VERSION_1_1",
            "VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceFragmentShadingRatesKHR")]
    Result GetPhysicalDeviceFragmentShadingRatesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pFragmentShadingRateCount,
        Ref<PhysicalDeviceFragmentShadingRateKHR> pFragmentShadingRates
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties")]
    Result GetPhysicalDeviceImageFormatProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        ImageType type,
        ImageTiling tiling,
        [NativeTypeName("VkImageUsageFlags")] uint usage,
        [NativeTypeName("VkImageCreateFlags")] uint flags,
        ImageFormatProperties* pImageFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties")]
    Result GetPhysicalDeviceImageFormatProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        ImageType type,
        ImageTiling tiling,
        [NativeTypeName("VkImageUsageFlags")] uint usage,
        [NativeTypeName("VkImageCreateFlags")] uint flags,
        Ref<ImageFormatProperties> pImageFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2")]
    Result GetPhysicalDeviceImageFormatProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
            PhysicalDeviceImageFormatInfo2* pImageFormatInfo,
        ImageFormatProperties2* pImageFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2")]
    Result GetPhysicalDeviceImageFormatProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
            Ref<PhysicalDeviceImageFormatInfo2> pImageFormatInfo,
        Ref<ImageFormatProperties2> pImageFormatProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2KHR")]
    Result GetPhysicalDeviceImageFormatProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
            PhysicalDeviceImageFormatInfo2* pImageFormatInfo,
        ImageFormatProperties2* pImageFormatProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceImageFormatProperties2KHR")]
    Result GetPhysicalDeviceImageFormatProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceImageFormatInfo2 *")]
            Ref<PhysicalDeviceImageFormatInfo2> pImageFormatInfo,
        Ref<ImageFormatProperties2> pImageFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties")]
    void GetPhysicalDeviceMemoryProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceMemoryProperties* pMemoryProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties")]
    void GetPhysicalDeviceMemoryProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceMemoryProperties> pMemoryProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2")]
    void GetPhysicalDeviceMemoryProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceMemoryProperties2* pMemoryProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2")]
    void GetPhysicalDeviceMemoryProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceMemoryProperties2> pMemoryProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2KHR")]
    void GetPhysicalDeviceMemoryProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceMemoryProperties2* pMemoryProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMemoryProperties2KHR")]
    void GetPhysicalDeviceMemoryProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceMemoryProperties2> pMemoryProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_sample_locations"],
        ImpliesSets = [
            "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
            "VK_EXT_sample_locations+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMultisamplePropertiesEXT")]
    void GetPhysicalDeviceMultisamplePropertiesEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
        MultisamplePropertiesEXT* pMultisampleProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_sample_locations"],
        ImpliesSets = [
            "VK_EXT_sample_locations+VK_KHR_get_physical_device_properties2",
            "VK_EXT_sample_locations+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceMultisamplePropertiesEXT")]
    void GetPhysicalDeviceMultisamplePropertiesEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
        Ref<MultisamplePropertiesEXT> pMultisampleProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceOpticalFlowImageFormatsNV")]
    Result GetPhysicalDeviceOpticalFlowImageFormatsNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkOpticalFlowImageFormatInfoNV *")]
            OpticalFlowImageFormatInfoNV* pOpticalFlowImageFormatInfo,
        [NativeTypeName("uint32_t *")] uint* pFormatCount,
        OpticalFlowImageFormatPropertiesNV* pImageFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_optical_flow"],
        ImpliesSets = [
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_format_feature_flags2+VK_KHR_synchronization2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceOpticalFlowImageFormatsNV")]
    Result GetPhysicalDeviceOpticalFlowImageFormatsNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkOpticalFlowImageFormatInfoNV *")]
            Ref<OpticalFlowImageFormatInfoNV> pOpticalFlowImageFormatInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pFormatCount,
        Ref<OpticalFlowImageFormatPropertiesNV> pImageFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDevicePresentRectanglesKHR")]
    Result GetPhysicalDevicePresentRectanglesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("uint32_t *")] uint* pRectCount,
        Rect2D* pRects
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_swapchain", "VK_VERSION_1_1"],
        ImpliesSets = ["VK_KHR_surface"],
        RequireAll = true
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDevicePresentRectanglesKHR")]
    Result GetPhysicalDevicePresentRectanglesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("uint32_t *")] Ref<uint> pRectCount,
        Ref<Rect2D> pRects
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties")]
    void GetPhysicalDeviceProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceProperties* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties")]
    void GetPhysicalDeviceProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceProperties> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2")]
    void GetPhysicalDeviceProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceProperties2* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2")]
    void GetPhysicalDeviceProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceProperties2> pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2KHR")]
    void GetPhysicalDeviceProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        PhysicalDeviceProperties2* pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceProperties2KHR")]
    void GetPhysicalDeviceProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Ref<PhysicalDeviceProperties2> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_performance_query"],
        ImpliesSets = [
            "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
            "VK_KHR_performance_query+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"
    )]
    void GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkQueryPoolPerformanceCreateInfoKHR *")]
            QueryPoolPerformanceCreateInfoKHR* pPerformanceQueryCreateInfo,
        [NativeTypeName("uint32_t *")] uint* pNumPasses
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_performance_query"],
        ImpliesSets = [
            "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
            "VK_KHR_performance_query+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"
    )]
    void GetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkQueryPoolPerformanceCreateInfoKHR *")]
            Ref<QueryPoolPerformanceCreateInfoKHR> pPerformanceQueryCreateInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pNumPasses
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties")]
    void GetPhysicalDeviceQueueFamilyProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pQueueFamilyPropertyCount,
        QueueFamilyProperties* pQueueFamilyProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties")]
    void GetPhysicalDeviceQueueFamilyProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pQueueFamilyPropertyCount,
        Ref<QueueFamilyProperties> pQueueFamilyProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2")]
    void GetPhysicalDeviceQueueFamilyProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pQueueFamilyPropertyCount,
        QueueFamilyProperties2* pQueueFamilyProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2")]
    void GetPhysicalDeviceQueueFamilyProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pQueueFamilyPropertyCount,
        Ref<QueueFamilyProperties2> pQueueFamilyProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2KHR")]
    void GetPhysicalDeviceQueueFamilyProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pQueueFamilyPropertyCount,
        QueueFamilyProperties2* pQueueFamilyProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceQueueFamilyProperties2KHR")]
    void GetPhysicalDeviceQueueFamilyProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pQueueFamilyPropertyCount,
        Ref<QueueFamilyProperties2> pQueueFamilyProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties")]
    void GetPhysicalDeviceSparseImageFormatProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        ImageType type,
        [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
        [NativeTypeName("VkImageUsageFlags")] uint usage,
        ImageTiling tiling,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        SparseImageFormatProperties* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties")]
    void GetPhysicalDeviceSparseImageFormatProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        Format format,
        ImageType type,
        [NativeTypeName("VkSampleCountFlagBits")] SampleCountFlags samples,
        [NativeTypeName("VkImageUsageFlags")] uint usage,
        ImageTiling tiling,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<SparseImageFormatProperties> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2")]
    void GetPhysicalDeviceSparseImageFormatProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
            PhysicalDeviceSparseImageFormatInfo2* pFormatInfo,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        SparseImageFormatProperties2* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2")]
    void GetPhysicalDeviceSparseImageFormatProperties2(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
            Ref<PhysicalDeviceSparseImageFormatInfo2> pFormatInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<SparseImageFormatProperties2> pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2KHR")]
    void GetPhysicalDeviceSparseImageFormatProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
            PhysicalDeviceSparseImageFormatInfo2* pFormatInfo,
        [NativeTypeName("uint32_t *")] uint* pPropertyCount,
        SparseImageFormatProperties2* pProperties
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_get_physical_device_properties2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSparseImageFormatProperties2KHR")]
    void GetPhysicalDeviceSparseImageFormatProperties2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSparseImageFormatInfo2 *")]
            Ref<PhysicalDeviceSparseImageFormatInfo2> pFormatInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pPropertyCount,
        Ref<SparseImageFormatProperties2> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_coverage_reduction_mode"],
        ImpliesSets = [
            "VK_NV_framebuffer_mixed_samples+VK_KHR_get_physical_device_properties2",
            "VK_NV_framebuffer_mixed_samples+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"
    )]
    Result GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pCombinationCount,
        FramebufferMixedSamplesCombinationNV* pCombinations
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_coverage_reduction_mode"],
        ImpliesSets = [
            "VK_NV_framebuffer_mixed_samples+VK_KHR_get_physical_device_properties2",
            "VK_NV_framebuffer_mixed_samples+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"
    )]
    Result GetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pCombinationCount,
        Ref<FramebufferMixedSamplesCombinationNV> pCombinations
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_surface_counter"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2EXT")]
    Result GetPhysicalDeviceSurfaceCapabilities2EXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        SurfaceCapabilities2EXT* pSurfaceCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_surface_counter"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2EXT")]
    Result GetPhysicalDeviceSurfaceCapabilities2EXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        Ref<SurfaceCapabilities2EXT> pSurfaceCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_surface_capabilities2"],
        ImpliesSets = ["VK_KHR_surface"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2KHR")]
    Result GetPhysicalDeviceSurfaceCapabilities2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
            PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo,
        SurfaceCapabilities2KHR* pSurfaceCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_surface_capabilities2"],
        ImpliesSets = ["VK_KHR_surface"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilities2KHR")]
    Result GetPhysicalDeviceSurfaceCapabilities2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
            Ref<PhysicalDeviceSurfaceInfo2KHR> pSurfaceInfo,
        Ref<SurfaceCapabilities2KHR> pSurfaceCapabilities
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilitiesKHR")]
    Result GetPhysicalDeviceSurfaceCapabilitiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        SurfaceCapabilitiesKHR* pSurfaceCapabilities
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceCapabilitiesKHR")]
    Result GetPhysicalDeviceSurfaceCapabilitiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        Ref<SurfaceCapabilitiesKHR> pSurfaceCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_surface_capabilities2"],
        ImpliesSets = ["VK_KHR_surface"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormats2KHR")]
    Result GetPhysicalDeviceSurfaceFormats2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
            PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo,
        [NativeTypeName("uint32_t *")] uint* pSurfaceFormatCount,
        SurfaceFormat2KHR* pSurfaceFormats
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_get_surface_capabilities2"],
        ImpliesSets = ["VK_KHR_surface"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormats2KHR")]
    Result GetPhysicalDeviceSurfaceFormats2KHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceSurfaceInfo2KHR *")]
            Ref<PhysicalDeviceSurfaceInfo2KHR> pSurfaceInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pSurfaceFormatCount,
        Ref<SurfaceFormat2KHR> pSurfaceFormats
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormatsKHR")]
    Result GetPhysicalDeviceSurfaceFormatsKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("uint32_t *")] uint* pSurfaceFormatCount,
        SurfaceFormatKHR* pSurfaceFormats
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceFormatsKHR")]
    Result GetPhysicalDeviceSurfaceFormatsKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("uint32_t *")] Ref<uint> pSurfaceFormatCount,
        Ref<SurfaceFormatKHR> pSurfaceFormats
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfacePresentModesKHR")]
    Result GetPhysicalDeviceSurfacePresentModesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("uint32_t *")] uint* pPresentModeCount,
        PresentModeKHR* pPresentModes
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfacePresentModesKHR")]
    Result GetPhysicalDeviceSurfacePresentModesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("uint32_t *")] Ref<uint> pPresentModeCount,
        Ref<PresentModeKHR> pPresentModes
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceSupportKHR")]
    Result GetPhysicalDeviceSurfaceSupportKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t")] uint queueFamilyIndex,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("VkBool32 *")] uint* pSupported
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceSurfaceSupportKHR")]
    Result GetPhysicalDeviceSurfaceSupportKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t")] uint queueFamilyIndex,
        [NativeTypeName("VkSurfaceKHR")] SurfaceKHRHandle surface,
        [NativeTypeName("VkBool32 *")] Ref<uint> pSupported
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolProperties")]
    Result GetPhysicalDeviceToolProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pToolCount,
        PhysicalDeviceToolProperties* pToolProperties
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolProperties")]
    Result GetPhysicalDeviceToolProperties(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pToolCount,
        Ref<PhysicalDeviceToolProperties> pToolProperties
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_tooling_info"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolPropertiesEXT")]
    Result GetPhysicalDeviceToolPropertiesEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] uint* pToolCount,
        PhysicalDeviceToolProperties* pToolProperties
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_tooling_info"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceToolPropertiesEXT")]
    Result GetPhysicalDeviceToolPropertiesEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("uint32_t *")] Ref<uint> pToolCount,
        Ref<PhysicalDeviceToolProperties> pToolProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoCapabilitiesKHR")]
    Result GetPhysicalDeviceVideoCapabilitiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkVideoProfileInfoKHR *")] VideoProfileInfoKHR* pVideoProfile,
        VideoCapabilitiesKHR* pCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoCapabilitiesKHR")]
    Result GetPhysicalDeviceVideoCapabilitiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkVideoProfileInfoKHR *")] Ref<VideoProfileInfoKHR> pVideoProfile,
        Ref<VideoCapabilitiesKHR> pCapabilities
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_encode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR"
    )]
    Result GetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR *")]
            PhysicalDeviceVideoEncodeQualityLevelInfoKHR* pQualityLevelInfo,
        VideoEncodeQualityLevelPropertiesKHR* pQualityLevelProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_encode_queue"],
        ImpliesSets = [
            "VK_KHR_video_queue+VK_KHR_synchronization2",
            "VK_KHR_video_queue+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction(
        "vulkan",
        EntryPoint = "vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR"
    )]
    Result GetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR *")]
            Ref<PhysicalDeviceVideoEncodeQualityLevelInfoKHR> pQualityLevelInfo,
        Ref<VideoEncodeQualityLevelPropertiesKHR> pQualityLevelProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoFormatPropertiesKHR")]
    Result GetPhysicalDeviceVideoFormatPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceVideoFormatInfoKHR *")]
            PhysicalDeviceVideoFormatInfoKHR* pVideoFormatInfo,
        [NativeTypeName("uint32_t *")] uint* pVideoFormatPropertyCount,
        VideoFormatPropertiesKHR* pVideoFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPhysicalDeviceVideoFormatPropertiesKHR")]
    Result GetPhysicalDeviceVideoFormatPropertiesKHR(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("const VkPhysicalDeviceVideoFormatInfoKHR *")]
            Ref<PhysicalDeviceVideoFormatInfoKHR> pVideoFormatInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pVideoFormatPropertyCount,
        Ref<VideoFormatPropertiesKHR> pVideoFormatProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineBinaryDataKHR")]
    Result GetPipelineBinaryDataKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineBinaryDataInfoKHR *")] PipelineBinaryDataInfoKHR* pInfo,
        PipelineBinaryKeyKHR* pPipelineBinaryKey,
        [NativeTypeName("size_t *")] nuint* pPipelineBinaryDataSize,
        void* pPipelineBinaryData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineBinaryDataKHR")]
    Result GetPipelineBinaryDataKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineBinaryDataInfoKHR *")]
            Ref<PipelineBinaryDataInfoKHR> pInfo,
        Ref<PipelineBinaryKeyKHR> pPipelineBinaryKey,
        [NativeTypeName("size_t *")] Ref<nuint> pPipelineBinaryDataSize,
        Ref pPipelineBinaryData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineCacheData")]
    Result GetPipelineCacheData(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("size_t *")] nuint* pDataSize,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineCacheData")]
    Result GetPipelineCacheData(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle pipelineCache,
        [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_executable_properties"],
        ImpliesSets = [
            "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
            "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableInternalRepresentationsKHR")]
    Result GetPipelineExecutableInternalRepresentationsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
            PipelineExecutableInfoKHR* pExecutableInfo,
        [NativeTypeName("uint32_t *")] uint* pInternalRepresentationCount,
        PipelineExecutableInternalRepresentationKHR* pInternalRepresentations
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_executable_properties"],
        ImpliesSets = [
            "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
            "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableInternalRepresentationsKHR")]
    Result GetPipelineExecutableInternalRepresentationsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
            Ref<PipelineExecutableInfoKHR> pExecutableInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pInternalRepresentationCount,
        Ref<PipelineExecutableInternalRepresentationKHR> pInternalRepresentations
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_executable_properties"],
        ImpliesSets = [
            "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
            "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutablePropertiesKHR")]
    Result GetPipelineExecutablePropertiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineInfoKHR *")] PipelineInfoKHR* pPipelineInfo,
        [NativeTypeName("uint32_t *")] uint* pExecutableCount,
        PipelineExecutablePropertiesKHR* pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_executable_properties"],
        ImpliesSets = [
            "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
            "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutablePropertiesKHR")]
    Result GetPipelineExecutablePropertiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineInfoKHR *")] Ref<PipelineInfoKHR> pPipelineInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pExecutableCount,
        Ref<PipelineExecutablePropertiesKHR> pProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_executable_properties"],
        ImpliesSets = [
            "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
            "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableStatisticsKHR")]
    Result GetPipelineExecutableStatisticsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
            PipelineExecutableInfoKHR* pExecutableInfo,
        [NativeTypeName("uint32_t *")] uint* pStatisticCount,
        PipelineExecutableStatisticKHR* pStatistics
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_executable_properties"],
        ImpliesSets = [
            "VK_KHR_pipeline_executable_properties+VK_KHR_get_physical_device_properties2",
            "VK_KHR_pipeline_executable_properties+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineExecutableStatisticsKHR")]
    Result GetPipelineExecutableStatisticsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineExecutableInfoKHR *")]
            Ref<PipelineExecutableInfoKHR> pExecutableInfo,
        [NativeTypeName("uint32_t *")] Ref<uint> pStatisticCount,
        Ref<PipelineExecutableStatisticKHR> pStatistics
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands_compute"],
        ImpliesSets = ["VK_NV_device_generated_commands"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectDeviceAddressNV")]
    ulong GetPipelineIndirectDeviceAddressNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineIndirectDeviceAddressInfoNV *")]
            PipelineIndirectDeviceAddressInfoNV* pInfo
    );

    [return: NativeTypeName("VkDeviceAddress")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands_compute"],
        ImpliesSets = ["VK_NV_device_generated_commands"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectDeviceAddressNV")]
    ulong GetPipelineIndirectDeviceAddressNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineIndirectDeviceAddressInfoNV *")]
            Ref<PipelineIndirectDeviceAddressInfoNV> pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands_compute"],
        ImpliesSets = ["VK_NV_device_generated_commands"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectMemoryRequirementsNV")]
    void GetPipelineIndirectMemoryRequirementsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkComputePipelineCreateInfo *")]
            ComputePipelineCreateInfo* pCreateInfo,
        MemoryRequirements2* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_generated_commands_compute"],
        ImpliesSets = ["VK_NV_device_generated_commands"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineIndirectMemoryRequirementsNV")]
    void GetPipelineIndirectMemoryRequirementsNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkComputePipelineCreateInfo *")]
            Ref<ComputePipelineCreateInfo> pCreateInfo,
        Ref<MemoryRequirements2> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineKeyKHR")]
    Result GetPipelineKeyKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineCreateInfoKHR *")]
            PipelineCreateInfoKHR* pPipelineCreateInfo,
        PipelineBinaryKeyKHR* pPipelineKey
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelineKeyKHR")]
    Result GetPipelineKeyKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineCreateInfoKHR *")]
            Ref<PipelineCreateInfoKHR> pPipelineCreateInfo,
        Ref<PipelineBinaryKeyKHR> pPipelineKey
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_pipeline_properties"],
        ImpliesSets = [
            "VK_EXT_pipeline_properties+VK_KHR_get_physical_device_properties2",
            "VK_EXT_pipeline_properties+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelinePropertiesEXT")]
    Result GetPipelinePropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineInfoEXT *")] PipelineInfoKHR* pPipelineInfo,
        BaseOutStructure* pPipelineProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_pipeline_properties"],
        ImpliesSets = [
            "VK_EXT_pipeline_properties+VK_KHR_get_physical_device_properties2",
            "VK_EXT_pipeline_properties+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPipelinePropertiesEXT")]
    Result GetPipelinePropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkPipelineInfoEXT *")] Ref<PipelineInfoKHR> pPipelineInfo,
        Ref<BaseOutStructure> pPipelineProperties
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkGetPrivateData")]
    void GetPrivateData(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        ObjectType objectType,
        [NativeTypeName("uint64_t")] ulong objectHandle,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("uint64_t *")] ulong* pData
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPrivateData")]
    void GetPrivateData(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        ObjectType objectType,
        [NativeTypeName("uint64_t")] ulong objectHandle,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("uint64_t *")] Ref<ulong> pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_private_data"],
        ImpliesSets = [
            "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
            "VK_EXT_private_data+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetPrivateDataEXT")]
    void GetPrivateDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        ObjectType objectType,
        [NativeTypeName("uint64_t")] ulong objectHandle,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("uint64_t *")] ulong* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_private_data"],
        ImpliesSets = [
            "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
            "VK_EXT_private_data+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetPrivateDataEXT")]
    void GetPrivateDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        ObjectType objectType,
        [NativeTypeName("uint64_t")] ulong objectHandle,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("uint64_t *")] Ref<ulong> pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetQueryPoolResults")]
    Result GetQueryPoolResults(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery,
        [NativeTypeName("uint32_t")] uint queryCount,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pData,
        [NativeTypeName("VkDeviceSize")] ulong stride,
        [NativeTypeName("VkQueryResultFlags")] uint flags
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetQueryPoolResults")]
    Result GetQueryPoolResults(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery,
        [NativeTypeName("uint32_t")] uint queryCount,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pData,
        [NativeTypeName("VkDeviceSize")] ulong stride,
        [NativeTypeName("VkQueryResultFlags")] uint flags
    );

    [SupportedApiProfile(
        "vulkan",
        [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_synchronization2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_3",
        ],
        ImpliesSets = [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointData2NV")]
    void GetQueueCheckpointData2NV(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t *")] uint* pCheckpointDataCount,
        CheckpointData2NV* pCheckpointData
    );

    [SupportedApiProfile(
        "vulkan",
        [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_synchronization2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_3",
        ],
        ImpliesSets = [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointData2NV")]
    void GetQueueCheckpointData2NV(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t *")] Ref<uint> pCheckpointDataCount,
        Ref<CheckpointData2NV> pCheckpointData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_diagnostic_checkpoints"],
        ImpliesSets = [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointDataNV")]
    void GetQueueCheckpointDataNV(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t *")] uint* pCheckpointDataCount,
        CheckpointDataNV* pCheckpointData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_device_diagnostic_checkpoints"],
        ImpliesSets = [
            "VK_NV_device_diagnostic_checkpoints+VK_KHR_get_physical_device_properties2",
            "VK_NV_device_diagnostic_checkpoints+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetQueueCheckpointDataNV")]
    void GetQueueCheckpointDataNV(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t *")] Ref<uint> pCheckpointDataCount,
        Ref<CheckpointDataNV> pCheckpointData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR")]
    Result GetRayTracingCaptureReplayShaderGroupHandlesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint firstGroup,
        [NativeTypeName("uint32_t")] uint groupCount,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR")]
    Result GetRayTracingCaptureReplayShaderGroupHandlesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint firstGroup,
        [NativeTypeName("uint32_t")] uint groupCount,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesKHR")]
    Result GetRayTracingShaderGroupHandlesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint firstGroup,
        [NativeTypeName("uint32_t")] uint groupCount,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesKHR")]
    Result GetRayTracingShaderGroupHandlesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint firstGroup,
        [NativeTypeName("uint32_t")] uint groupCount,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesNV")]
    Result GetRayTracingShaderGroupHandlesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint firstGroup,
        [NativeTypeName("uint32_t")] uint groupCount,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_ray_tracing"],
        ImpliesSets = [
            "VK_KHR_get_physical_device_properties2+VK_KHR_get_memory_requirements2",
            "VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupHandlesNV")]
    Result GetRayTracingShaderGroupHandlesNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint firstGroup,
        [NativeTypeName("uint32_t")] uint groupCount,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pData
    );

    [return: NativeTypeName("VkDeviceSize")]
    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_ray_tracing_pipeline"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_spirv_1_4",
            "VK_KHR_acceleration_structure+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetRayTracingShaderGroupStackSizeKHR")]
    ulong GetRayTracingShaderGroupStackSizeKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("uint32_t")] uint group,
        ShaderGroupShaderKHR groupShader
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_GOOGLE_display_timing"],
        ImpliesSets = ["VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetRefreshCycleDurationGOOGLE")]
    Result GetRefreshCycleDurationGoogle(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        RefreshCycleDurationGoogle* pDisplayTimingProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_GOOGLE_display_timing"],
        ImpliesSets = ["VK_KHR_swapchain"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetRefreshCycleDurationGOOGLE")]
    Result GetRefreshCycleDurationGoogle(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        Ref<RefreshCycleDurationGoogle> pDisplayTimingProperties
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetRenderAreaGranularity")]
    void GetRenderAreaGranularity(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
        Extent2D* pGranularity
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetRenderAreaGranularity")]
    void GetRenderAreaGranularity(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkRenderPass")] RenderPassHandle renderPass,
        Ref<Extent2D> pGranularity
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularity")]
    void GetRenderingAreaGranularity(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderingAreaInfo *")] RenderingAreaInfo* pRenderingAreaInfo,
        Extent2D* pGranularity
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularity")]
    void GetRenderingAreaGranularity(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderingAreaInfo *")] Ref<RenderingAreaInfo> pRenderingAreaInfo,
        Ref<Extent2D> pGranularity
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance5"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularityKHR")]
    void GetRenderingAreaGranularityKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderingAreaInfo *")] RenderingAreaInfo* pRenderingAreaInfo,
        Extent2D* pGranularity
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_maintenance5"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_dynamic_rendering", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetRenderingAreaGranularityKHR")]
    void GetRenderingAreaGranularityKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkRenderingAreaInfo *")] Ref<RenderingAreaInfo> pRenderingAreaInfo,
        Ref<Extent2D> pGranularity
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetSamplerOpaqueCaptureDescriptorDataEXT")]
    Result GetSamplerOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerCaptureDescriptorDataInfoEXT *")]
            SamplerCaptureDescriptorDataInfoEXT* pInfo,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_descriptor_buffer"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_KHR_buffer_device_address+VK_EXT_descriptor_indexing+VK_VERSION_1_1",
            "VK_KHR_synchronization2+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetSamplerOpaqueCaptureDescriptorDataEXT")]
    Result GetSamplerOpaqueCaptureDescriptorDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSamplerCaptureDescriptorDataInfoEXT *")]
            Ref<SamplerCaptureDescriptorDataInfoEXT> pInfo,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValue")]
    Result GetSemaphoreCounterValue(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("uint64_t *")] ulong* pValue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValue")]
    Result GetSemaphoreCounterValue(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("uint64_t *")] Ref<ulong> pValue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_timeline_semaphore"],
        ImpliesSets = [
            "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
            "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValueKHR")]
    Result GetSemaphoreCounterValueKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("uint64_t *")] ulong* pValue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_timeline_semaphore"],
        ImpliesSets = [
            "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
            "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreCounterValueKHR")]
    Result GetSemaphoreCounterValueKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSemaphore")] SemaphoreHandle semaphore,
        [NativeTypeName("uint64_t *")] Ref<ulong> pValue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_semaphore_fd"],
        ImpliesSets = [
            "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
            "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreFdKHR")]
    Result GetSemaphoreFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreGetFdInfoKHR *")] SemaphoreGetFdInfoKHR* pGetFdInfo,
        int* pFd
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_semaphore_fd"],
        ImpliesSets = [
            "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
            "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetSemaphoreFdKHR")]
    Result GetSemaphoreFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreGetFdInfoKHR *")] Ref<SemaphoreGetFdInfoKHR> pGetFdInfo,
        Ref<int> pFd
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderBinaryDataEXT")]
    Result GetShaderBinaryDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
        [NativeTypeName("size_t *")] nuint* pDataSize,
        void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_object"],
        ImpliesSets = [
            "VK_KHR_dynamic_rendering+VK_KHR_get_physical_device_properties2",
            "VK_KHR_dynamic_rendering+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderBinaryDataEXT")]
    Result GetShaderBinaryDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderEXT")] ShaderEXTHandle shader,
        [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
        Ref pData
    );

    [SupportedApiProfile("vulkan", ["VK_AMD_shader_info"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderInfoAMD")]
    Result GetShaderInfoAMD(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("VkShaderStageFlagBits")] ShaderStageFlags shaderStage,
        ShaderInfoTypeAMD infoType,
        [NativeTypeName("size_t *")] nuint* pInfoSize,
        void* pInfo
    );

    [SupportedApiProfile("vulkan", ["VK_AMD_shader_info"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderInfoAMD")]
    Result GetShaderInfoAMD(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipeline")] PipelineHandle pipeline,
        [NativeTypeName("VkShaderStageFlagBits")] ShaderStageFlags shaderStage,
        ShaderInfoTypeAMD infoType,
        [NativeTypeName("size_t *")] Ref<nuint> pInfoSize,
        Ref pInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_module_identifier"],
        ImpliesSets = [
            "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
            "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleCreateInfoIdentifierEXT")]
    void GetShaderModuleCreateInfoIdentifierEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkShaderModuleCreateInfo *")] ShaderModuleCreateInfo* pCreateInfo,
        ShaderModuleIdentifierEXT* pIdentifier
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_module_identifier"],
        ImpliesSets = [
            "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
            "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleCreateInfoIdentifierEXT")]
    void GetShaderModuleCreateInfoIdentifierEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkShaderModuleCreateInfo *")]
            Ref<ShaderModuleCreateInfo> pCreateInfo,
        Ref<ShaderModuleIdentifierEXT> pIdentifier
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_module_identifier"],
        ImpliesSets = [
            "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
            "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleIdentifierEXT")]
    void GetShaderModuleIdentifierEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
        ShaderModuleIdentifierEXT* pIdentifier
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_shader_module_identifier"],
        ImpliesSets = [
            "VK_EXT_pipeline_creation_cache_control+VK_KHR_get_physical_device_properties2",
            "VK_EXT_pipeline_creation_cache_control+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetShaderModuleIdentifierEXT")]
    void GetShaderModuleIdentifierEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkShaderModule")] ShaderModuleHandle shaderModule,
        Ref<ShaderModuleIdentifierEXT> pIdentifier
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainCounterEXT")]
    Result GetSwapchainCounterEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("VkSurfaceCounterFlagBitsEXT")] SurfaceCounterFlagsEXT counter,
        [NativeTypeName("uint64_t *")] ulong* pCounterValue
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainCounterEXT")]
    Result GetSwapchainCounterEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("VkSurfaceCounterFlagBitsEXT")] SurfaceCounterFlagsEXT counter,
        [NativeTypeName("uint64_t *")] Ref<ulong> pCounterValue
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainImagesKHR")]
    Result GetSwapchainImagesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("uint32_t *")] uint* pSwapchainImageCount,
        [NativeTypeName("VkImage *")] ImageHandle* pSwapchainImages
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainImagesKHR")]
    Result GetSwapchainImagesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("uint32_t *")] Ref<uint> pSwapchainImageCount,
        [NativeTypeName("VkImage *")] Ref<ImageHandle> pSwapchainImages
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_shared_presentable_image"],
        ImpliesSets = [
            "VK_KHR_swapchain+VK_KHR_get_surface_capabilities2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_swapchain+VK_KHR_get_surface_capabilities2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetSwapchainStatusKHR")]
    Result GetSwapchainStatusKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [NativeFunction("vulkan", EntryPoint = "vkGetValidationCacheDataEXT")]
    Result GetValidationCacheDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
        [NativeTypeName("size_t *")] nuint* pDataSize,
        void* pData
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetValidationCacheDataEXT")]
    Result GetValidationCacheDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle validationCache,
        [NativeTypeName("size_t *")] Ref<nuint> pDataSize,
        Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkGetVideoSessionMemoryRequirementsKHR")]
    Result GetVideoSessionMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
        [NativeTypeName("uint32_t *")] uint* pMemoryRequirementsCount,
        VideoSessionMemoryRequirementsKHR* pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkGetVideoSessionMemoryRequirementsKHR")]
    Result GetVideoSessionMemoryRequirementsKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionKHR")] VideoSessionKHRHandle videoSession,
        [NativeTypeName("uint32_t *")] Ref<uint> pMemoryRequirementsCount,
        Ref<VideoSessionMemoryRequirementsKHR> pMemoryRequirements
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_fence_fd"],
        ImpliesSets = [
            "VK_KHR_external_fence_fd+VK_KHR_external_fence",
            "VK_KHR_external_fence_fd+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkImportFenceFdKHR")]
    Result ImportFenceFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImportFenceFdInfoKHR *")] ImportFenceFdInfoKHR* pImportFenceFdInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_fence_fd"],
        ImpliesSets = [
            "VK_KHR_external_fence_fd+VK_KHR_external_fence",
            "VK_KHR_external_fence_fd+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkImportFenceFdKHR")]
    Result ImportFenceFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImportFenceFdInfoKHR *")]
            Ref<ImportFenceFdInfoKHR> pImportFenceFdInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_semaphore_fd"],
        ImpliesSets = [
            "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
            "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkImportSemaphoreFdKHR")]
    Result ImportSemaphoreFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImportSemaphoreFdInfoKHR *")]
            ImportSemaphoreFdInfoKHR* pImportSemaphoreFdInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_external_semaphore_fd"],
        ImpliesSets = [
            "VK_KHR_external_semaphore_fd+VK_KHR_external_semaphore",
            "VK_KHR_external_semaphore_fd+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkImportSemaphoreFdKHR")]
    Result ImportSemaphoreFdKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkImportSemaphoreFdInfoKHR *")]
            Ref<ImportSemaphoreFdInfoKHR> pImportSemaphoreFdInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkInitializePerformanceApiINTEL")]
    Result InitializePerformanceApiIntel(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkInitializePerformanceApiInfoINTEL *")]
            InitializePerformanceApiInfoIntel* pInitializeInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkInitializePerformanceApiINTEL")]
    Result InitializePerformanceApiIntel(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkInitializePerformanceApiInfoINTEL *")]
            Ref<InitializePerformanceApiInfoIntel> pInitializeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkInvalidateMappedMemoryRanges")]
    Result InvalidateMappedMemoryRanges(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint memoryRangeCount,
        [NativeTypeName("const VkMappedMemoryRange *")] MappedMemoryRange* pMemoryRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkInvalidateMappedMemoryRanges")]
    Result InvalidateMappedMemoryRanges(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint memoryRangeCount,
        [NativeTypeName("const VkMappedMemoryRange *")] Ref<MappedMemoryRange> pMemoryRanges
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkLatencySleepNV")]
    Result LatencySleepNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkLatencySleepInfoNV *")] LatencySleepInfoNV* pSleepInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkLatencySleepNV")]
    Result LatencySleepNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkLatencySleepInfoNV *")] Ref<LatencySleepInfoNV> pSleepInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkMapMemory")]
    Result MapMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkDeviceSize")] ulong size,
        [NativeTypeName("VkMemoryMapFlags")] uint flags,
        void** ppData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkMapMemory")]
    Result MapMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        [NativeTypeName("VkDeviceSize")] ulong offset,
        [NativeTypeName("VkDeviceSize")] ulong size,
        [NativeTypeName("VkMemoryMapFlags")] uint flags,
        Ref2D ppData
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkMapMemory2")]
    Result MapMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryMapInfo *")] MemoryMapInfo* pMemoryMapInfo,
        void** ppData
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkMapMemory2")]
    Result MapMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryMapInfo *")] Ref<MemoryMapInfo> pMemoryMapInfo,
        Ref2D ppData
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
    [NativeFunction("vulkan", EntryPoint = "vkMapMemory2KHR")]
    Result MapMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryMapInfo *")] MemoryMapInfo* pMemoryMapInfo,
        void** ppData
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkMapMemory2KHR")]
    Result MapMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryMapInfo *")] Ref<MemoryMapInfo> pMemoryMapInfo,
        Ref2D ppData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkMergePipelineCaches")]
    Result MergePipelineCaches(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle dstCache,
        [NativeTypeName("uint32_t")] uint srcCacheCount,
        [NativeTypeName("const VkPipelineCache *")] PipelineCacheHandle* pSrcCaches
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkMergePipelineCaches")]
    Result MergePipelineCaches(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPipelineCache")] PipelineCacheHandle dstCache,
        [NativeTypeName("uint32_t")] uint srcCacheCount,
        [NativeTypeName("const VkPipelineCache *")] Ref<PipelineCacheHandle> pSrcCaches
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [NativeFunction("vulkan", EntryPoint = "vkMergeValidationCachesEXT")]
    Result MergeValidationCachesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle dstCache,
        [NativeTypeName("uint32_t")] uint srcCacheCount,
        [NativeTypeName("const VkValidationCacheEXT *")] ValidationCacheEXTHandle* pSrcCaches
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_validation_cache"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkMergeValidationCachesEXT")]
    Result MergeValidationCachesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkValidationCacheEXT")] ValidationCacheEXTHandle dstCache,
        [NativeTypeName("uint32_t")] uint srcCacheCount,
        [NativeTypeName("const VkValidationCacheEXT *")] Ref<ValidationCacheEXTHandle> pSrcCaches
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkQueueBeginDebugUtilsLabelEXT")]
    void QueueBeginDebugUtilsLabelEXT(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueueBeginDebugUtilsLabelEXT")]
    void QueueBeginDebugUtilsLabelEXT(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkQueueBindSparse")]
    Result QueueBindSparse(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindSparseInfo *")] BindSparseInfo* pBindInfo,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueueBindSparse")]
    Result QueueBindSparse(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint bindInfoCount,
        [NativeTypeName("const VkBindSparseInfo *")] Ref<BindSparseInfo> pBindInfo,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkQueueEndDebugUtilsLabelEXT")]
    void QueueEndDebugUtilsLabelEXT([NativeTypeName("VkQueue")] QueueHandle queue);

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkQueueInsertDebugUtilsLabelEXT")]
    void QueueInsertDebugUtilsLabelEXT(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] DebugUtilsLabelEXT* pLabelInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueueInsertDebugUtilsLabelEXT")]
    void QueueInsertDebugUtilsLabelEXT(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkDebugUtilsLabelEXT *")] Ref<DebugUtilsLabelEXT> pLabelInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkQueueNotifyOutOfBandNV")]
    void QueueNotifyOutOfBandNV(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkOutOfBandQueueTypeInfoNV *")]
            OutOfBandQueueTypeInfoNV* pQueueTypeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueueNotifyOutOfBandNV")]
    void QueueNotifyOutOfBandNV(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkOutOfBandQueueTypeInfoNV *")]
            Ref<OutOfBandQueueTypeInfoNV> pQueueTypeInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [NativeFunction("vulkan", EntryPoint = "vkQueuePresentKHR")]
    Result QueuePresentKHR(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkPresentInfoKHR *")] PresentInfoKHR* pPresentInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_swapchain"], ImpliesSets = ["VK_KHR_surface"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueuePresentKHR")]
    Result QueuePresentKHR(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("const VkPresentInfoKHR *")] Ref<PresentInfoKHR> pPresentInfo
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkQueueSetPerformanceConfigurationINTEL")]
    Result QueueSetPerformanceConfigurationIntel(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("VkPerformanceConfigurationINTEL")]
            PerformanceConfigurationIntelHandle configuration
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit")]
    Result QueueSubmit(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint submitCount,
        [NativeTypeName("const VkSubmitInfo *")] SubmitInfo* pSubmits,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit")]
    Result QueueSubmit(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint submitCount,
        [NativeTypeName("const VkSubmitInfo *")] Ref<SubmitInfo> pSubmits,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2")]
    Result QueueSubmit2(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint submitCount,
        [NativeTypeName("const VkSubmitInfo2 *")] SubmitInfo2* pSubmits,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2")]
    Result QueueSubmit2(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint submitCount,
        [NativeTypeName("const VkSubmitInfo2 *")] Ref<SubmitInfo2> pSubmits,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2KHR")]
    Result QueueSubmit2KHR(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint submitCount,
        [NativeTypeName("const VkSubmitInfo2 *")] SubmitInfo2* pSubmits,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_synchronization2"],
        ImpliesSets = [
            "VK_KHR_synchronization2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_synchronization2+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkQueueSubmit2KHR")]
    Result QueueSubmit2KHR(
        [NativeTypeName("VkQueue")] QueueHandle queue,
        [NativeTypeName("uint32_t")] uint submitCount,
        [NativeTypeName("const VkSubmitInfo2 *")] Ref<SubmitInfo2> pSubmits,
        [NativeTypeName("VkFence")] FenceHandle fence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkQueueWaitIdle")]
    Result QueueWaitIdle([NativeTypeName("VkQueue")] QueueHandle queue);

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkRegisterDeviceEventEXT")]
    Result RegisterDeviceEventEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceEventInfoEXT *")] DeviceEventInfoEXT* pDeviceEventInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkFence *")] FenceHandle* pFence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkRegisterDeviceEventEXT")]
    Result RegisterDeviceEventEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDeviceEventInfoEXT *")] Ref<DeviceEventInfoEXT> pDeviceEventInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkFence *")] Ref<FenceHandle> pFence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkRegisterDisplayEventEXT")]
    Result RegisterDisplayEventEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("const VkDisplayEventInfoEXT *")] DisplayEventInfoEXT* pDisplayEventInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator,
        [NativeTypeName("VkFence *")] FenceHandle* pFence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_display_control"],
        ImpliesSets = ["VK_EXT_display_surface_counter", "VK_KHR_swapchain"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkRegisterDisplayEventEXT")]
    Result RegisterDisplayEventEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display,
        [NativeTypeName("const VkDisplayEventInfoEXT *")]
            Ref<DisplayEventInfoEXT> pDisplayEventInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator,
        [NativeTypeName("VkFence *")] Ref<FenceHandle> pFence
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkReleaseCapturedPipelineDataKHR")]
    Result ReleaseCapturedPipelineDataKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkReleaseCapturedPipelineDataInfoKHR *")]
            ReleaseCapturedPipelineDataInfoKHR* pInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] AllocationCallbacks* pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_pipeline_binary"],
        ImpliesSets = [
            "VK_KHR_pipeline_binary+VK_KHR_maintenance5",
            "VK_KHR_pipeline_binary+VK_VERSION_1_4",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkReleaseCapturedPipelineDataKHR")]
    Result ReleaseCapturedPipelineDataKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkReleaseCapturedPipelineDataInfoKHR *")]
            Ref<ReleaseCapturedPipelineDataInfoKHR> pInfo,
        [NativeTypeName("const VkAllocationCallbacks *")] Ref<AllocationCallbacks> pAllocator
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_direct_mode_display"],
        ImpliesSets = ["VK_KHR_display"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkReleaseDisplayEXT")]
    Result ReleaseDisplayEXT(
        [NativeTypeName("VkPhysicalDevice")] PhysicalDeviceHandle physicalDevice,
        [NativeTypeName("VkDisplayKHR")] DisplayKHRHandle display
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkReleasePerformanceConfigurationINTEL")]
    Result ReleasePerformanceConfigurationIntel(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkPerformanceConfigurationINTEL")]
            PerformanceConfigurationIntelHandle configuration
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_performance_query"],
        ImpliesSets = [
            "VK_KHR_performance_query+VK_KHR_get_physical_device_properties2",
            "VK_KHR_performance_query+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkReleaseProfilingLockKHR")]
    void ReleaseProfilingLockKHR([NativeTypeName("VkDevice")] DeviceHandle device);

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_swapchain_maintenance1"],
        ImpliesSets = [
            "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_KHR_get_physical_device_properties2",
            "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkReleaseSwapchainImagesEXT")]
    Result ReleaseSwapchainImagesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkReleaseSwapchainImagesInfoEXT *")]
            ReleaseSwapchainImagesInfoEXT* pReleaseInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_swapchain_maintenance1"],
        ImpliesSets = [
            "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_KHR_get_physical_device_properties2",
            "VK_KHR_swapchain+VK_EXT_surface_maintenance1+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkReleaseSwapchainImagesEXT")]
    Result ReleaseSwapchainImagesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkReleaseSwapchainImagesInfoEXT *")]
            Ref<ReleaseSwapchainImagesInfoEXT> pReleaseInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkResetCommandBuffer")]
    Result ResetCommandBuffer(
        [NativeTypeName("VkCommandBuffer")] CommandBufferHandle commandBuffer,
        [NativeTypeName("VkCommandBufferResetFlags")] uint flags
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkResetCommandPool")]
    Result ResetCommandPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("VkCommandPoolResetFlags")] uint flags
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkResetDescriptorPool")]
    Result ResetDescriptorPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorPool")] DescriptorPoolHandle descriptorPool,
        [NativeTypeName("VkDescriptorPoolResetFlags")] uint flags
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkResetEvent")]
    Result ResetEvent(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkEvent")] EventHandle @event
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkResetFences")]
    Result ResetFences(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint fenceCount,
        [NativeTypeName("const VkFence *")] FenceHandle* pFences
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkResetFences")]
    Result ResetFences(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint fenceCount,
        [NativeTypeName("const VkFence *")] Ref<FenceHandle> pFences
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkResetQueryPool")]
    void ResetQueryPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery,
        [NativeTypeName("uint32_t")] uint queryCount
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_query_reset"],
        ImpliesSets = [
            "VK_EXT_host_query_reset+VK_KHR_get_physical_device_properties2",
            "VK_EXT_host_query_reset+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkResetQueryPoolEXT")]
    void ResetQueryPoolEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkQueryPool")] QueryPoolHandle queryPool,
        [NativeTypeName("uint32_t")] uint firstQuery,
        [NativeTypeName("uint32_t")] uint queryCount
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectNameEXT")]
    Result SetDebugUtilsObjectNameEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugUtilsObjectNameInfoEXT *")]
            DebugUtilsObjectNameInfoEXT* pNameInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectNameEXT")]
    Result SetDebugUtilsObjectNameEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugUtilsObjectNameInfoEXT *")]
            Ref<DebugUtilsObjectNameInfoEXT> pNameInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectTagEXT")]
    Result SetDebugUtilsObjectTagEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugUtilsObjectTagInfoEXT *")]
            DebugUtilsObjectTagInfoEXT* pTagInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSetDebugUtilsObjectTagEXT")]
    Result SetDebugUtilsObjectTagEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkDebugUtilsObjectTagInfoEXT *")]
            Ref<DebugUtilsObjectTagInfoEXT> pTagInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_pageable_device_local_memory"],
        ImpliesSets = ["VK_EXT_memory_priority"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSetDeviceMemoryPriorityEXT")]
    void SetDeviceMemoryPriorityEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory,
        float priority
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSetEvent")]
    Result SetEvent(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkEvent")] EventHandle @event
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_hdr_metadata"], ImpliesSets = ["VK_KHR_swapchain"])]
    [NativeFunction("vulkan", EntryPoint = "vkSetHdrMetadataEXT")]
    void SetHdrMetadataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint swapchainCount,
        [NativeTypeName("const VkSwapchainKHR *")] SwapchainKHRHandle* pSwapchains,
        [NativeTypeName("const VkHdrMetadataEXT *")] HdrMetadataEXT* pMetadata
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_hdr_metadata"], ImpliesSets = ["VK_KHR_swapchain"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSetHdrMetadataEXT")]
    void SetHdrMetadataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint swapchainCount,
        [NativeTypeName("const VkSwapchainKHR *")] Ref<SwapchainKHRHandle> pSwapchains,
        [NativeTypeName("const VkHdrMetadataEXT *")] Ref<HdrMetadataEXT> pMetadata
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSetLatencyMarkerNV")]
    void SetLatencyMarkerNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkSetLatencyMarkerInfoNV *")]
            SetLatencyMarkerInfoNV* pLatencyMarkerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSetLatencyMarkerNV")]
    void SetLatencyMarkerNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkSetLatencyMarkerInfoNV *")]
            Ref<SetLatencyMarkerInfoNV> pLatencyMarkerInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSetLatencySleepModeNV")]
    Result SetLatencySleepModeNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkLatencySleepModeInfoNV *")] LatencySleepModeInfoNV* pSleepModeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_NV_low_latency2"],
        ImpliesSets = [
            "VK_NV_low_latency2+VK_KHR_timeline_semaphore",
            "VK_NV_low_latency2+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSetLatencySleepModeNV")]
    Result SetLatencySleepModeNV(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("const VkLatencySleepModeInfoNV *")]
            Ref<LatencySleepModeInfoNV> pSleepModeInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_AMD_display_native_hdr"],
        ImpliesSets = [
            "VK_KHR_get_surface_capabilities2+VK_KHR_swapchain+VK_KHR_get_physical_device_properties2",
            "VK_KHR_get_surface_capabilities2+VK_KHR_swapchain+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSetLocalDimmingAMD")]
    void SetLocalDimmingAMD(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapChain,
        [NativeTypeName("VkBool32")] uint localDimmingEnable
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_3", "VK_VERSION_1_4"], MinVersion = "1.3")]
    [NativeFunction("vulkan", EntryPoint = "vkSetPrivateData")]
    Result SetPrivateData(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        ObjectType objectType,
        [NativeTypeName("uint64_t")] ulong objectHandle,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("uint64_t")] ulong data
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_private_data"],
        ImpliesSets = [
            "VK_EXT_private_data+VK_KHR_get_physical_device_properties2",
            "VK_EXT_private_data+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSetPrivateDataEXT")]
    Result SetPrivateDataEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        ObjectType objectType,
        [NativeTypeName("uint64_t")] ulong objectHandle,
        [NativeTypeName("VkPrivateDataSlot")] PrivateDataSlotHandle privateDataSlot,
        [NativeTypeName("uint64_t")] ulong data
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphore")]
    Result SignalSemaphore(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreSignalInfo *")] SemaphoreSignalInfo* pSignalInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphore")]
    Result SignalSemaphore(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreSignalInfo *")] Ref<SemaphoreSignalInfo> pSignalInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_timeline_semaphore"],
        ImpliesSets = [
            "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
            "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphoreKHR")]
    Result SignalSemaphoreKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreSignalInfo *")] SemaphoreSignalInfo* pSignalInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_timeline_semaphore"],
        ImpliesSets = [
            "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
            "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSignalSemaphoreKHR")]
    Result SignalSemaphoreKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreSignalInfo *")] Ref<SemaphoreSignalInfo> pSignalInfo
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [NativeFunction("vulkan", EntryPoint = "vkSubmitDebugUtilsMessageEXT")]
    void SubmitDebugUtilsMessageEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugUtilsMessageSeverityFlagBitsEXT")]
            DebugUtilsMessageSeverityFlagsEXT messageSeverity,
        [NativeTypeName("VkDebugUtilsMessageTypeFlagsEXT")] uint messageTypes,
        [NativeTypeName("const VkDebugUtilsMessengerCallbackDataEXT *")]
            DebugUtilsMessengerCallbackDataEXT* pCallbackData
    );

    [SupportedApiProfile("vulkan", ["VK_EXT_debug_utils"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkSubmitDebugUtilsMessageEXT")]
    void SubmitDebugUtilsMessageEXT(
        [NativeTypeName("VkInstance")] InstanceHandle instance,
        [NativeTypeName("VkDebugUtilsMessageSeverityFlagBitsEXT")]
            DebugUtilsMessageSeverityFlagsEXT messageSeverity,
        [NativeTypeName("VkDebugUtilsMessageTypeFlagsEXT")] uint messageTypes,
        [NativeTypeName("const VkDebugUtilsMessengerCallbackDataEXT *")]
            Ref<DebugUtilsMessengerCallbackDataEXT> pCallbackData
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayout")]
    Result TransitionImageLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint transitionCount,
        [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
            HostImageLayoutTransitionInfo* pTransitions
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayout")]
    Result TransitionImageLayout(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint transitionCount,
        [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
            Ref<HostImageLayoutTransitionInfo> pTransitions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayoutEXT")]
    Result TransitionImageLayoutEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint transitionCount,
        [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
            HostImageLayoutTransitionInfo* pTransitions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_host_image_copy"],
        ImpliesSets = [
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_KHR_get_physical_device_properties2",
            "VK_KHR_copy_commands2+VK_KHR_format_feature_flags2+VK_VERSION_1_1",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkTransitionImageLayoutEXT")]
    Result TransitionImageLayoutEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint transitionCount,
        [NativeTypeName("const VkHostImageLayoutTransitionInfo *")]
            Ref<HostImageLayoutTransitionInfo> pTransitions
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkTrimCommandPool")]
    void TrimCommandPool(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("VkCommandPoolTrimFlags")] uint flags
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_maintenance1"])]
    [NativeFunction("vulkan", EntryPoint = "vkTrimCommandPoolKHR")]
    void TrimCommandPoolKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkCommandPool")] CommandPoolHandle commandPool,
        [NativeTypeName("VkCommandPoolTrimFlags")] uint flags
    );

    [SupportedApiProfile("vulkan", ["VK_INTEL_performance_query"])]
    [NativeFunction("vulkan", EntryPoint = "vkUninitializePerformanceApiINTEL")]
    void UninitializePerformanceApiIntel([NativeTypeName("VkDevice")] DeviceHandle device);

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory")]
    void UnmapMemory(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDeviceMemory")] DeviceMemoryHandle memory
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2")]
    Result UnmapMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryUnmapInfo *")] MemoryUnmapInfo* pMemoryUnmapInfo
    );

    [SupportedApiProfile("vulkan", ["VK_VERSION_1_4"], MinVersion = "1.4")]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2")]
    Result UnmapMemory2(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryUnmapInfo *")] Ref<MemoryUnmapInfo> pMemoryUnmapInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
    [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2KHR")]
    Result UnmapMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryUnmapInfo *")] MemoryUnmapInfo* pMemoryUnmapInfo
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_map_memory2"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUnmapMemory2KHR")]
    Result UnmapMemory2KHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkMemoryUnmapInfo *")] Ref<MemoryUnmapInfo> pMemoryUnmapInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSets")]
    void UpdateDescriptorSets(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint descriptorWriteCount,
        [NativeTypeName("const VkWriteDescriptorSet *")] WriteDescriptorSet* pDescriptorWrites,
        [NativeTypeName("uint32_t")] uint descriptorCopyCount,
        [NativeTypeName("const VkCopyDescriptorSet *")] CopyDescriptorSet* pDescriptorCopies
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSets")]
    void UpdateDescriptorSets(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint descriptorWriteCount,
        [NativeTypeName("const VkWriteDescriptorSet *")] Ref<WriteDescriptorSet> pDescriptorWrites,
        [NativeTypeName("uint32_t")] uint descriptorCopyCount,
        [NativeTypeName("const VkCopyDescriptorSet *")] Ref<CopyDescriptorSet> pDescriptorCopies
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplate")]
    void UpdateDescriptorSetWithTemplate(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const void *")] void* pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.1"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplate")]
    void UpdateDescriptorSetWithTemplate(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const void *")] Ref pData
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplateKHR")]
    void UpdateDescriptorSetWithTemplateKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const void *")] void* pData
    );

    [SupportedApiProfile("vulkan", ["VK_KHR_descriptor_update_template"])]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateDescriptorSetWithTemplateKHR")]
    void UpdateDescriptorSetWithTemplateKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkDescriptorSet")] DescriptorSetHandle descriptorSet,
        [NativeTypeName("VkDescriptorUpdateTemplate")]
            DescriptorUpdateTemplateHandle descriptorUpdateTemplate,
        [NativeTypeName("const void *")] Ref pData
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetPipelineEXT")]
    void UpdateIndirectExecutionSetPipelineEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("uint32_t")] uint executionSetWriteCount,
        [NativeTypeName("const VkWriteIndirectExecutionSetPipelineEXT *")]
            WriteIndirectExecutionSetPipelineEXT* pExecutionSetWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetPipelineEXT")]
    void UpdateIndirectExecutionSetPipelineEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("uint32_t")] uint executionSetWriteCount,
        [NativeTypeName("const VkWriteIndirectExecutionSetPipelineEXT *")]
            Ref<WriteIndirectExecutionSetPipelineEXT> pExecutionSetWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetPipelineEXT")]
    void UpdateIndirectExecutionSetPipelineEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("const VkWriteIndirectExecutionSetPipelineEXT *")]
            WriteIndirectExecutionSetPipelineEXT pExecutionSetWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetShaderEXT")]
    void UpdateIndirectExecutionSetShaderEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("uint32_t")] uint executionSetWriteCount,
        [NativeTypeName("const VkWriteIndirectExecutionSetShaderEXT *")]
            WriteIndirectExecutionSetShaderEXT* pExecutionSetWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetShaderEXT")]
    void UpdateIndirectExecutionSetShaderEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("uint32_t")] uint executionSetWriteCount,
        [NativeTypeName("const VkWriteIndirectExecutionSetShaderEXT *")]
            Ref<WriteIndirectExecutionSetShaderEXT> pExecutionSetWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_device_generated_commands"],
        ImpliesSets = [
            "VK_KHR_maintenance5+VK_KHR_buffer_device_address",
            "VK_KHR_maintenance5+VK_VERSION_1_2",
            "VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateIndirectExecutionSetShaderEXT")]
    void UpdateIndirectExecutionSetShaderEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkIndirectExecutionSetEXT")]
            IndirectExecutionSetEXTHandle indirectExecutionSet,
        [NativeTypeName("const VkWriteIndirectExecutionSetShaderEXT *")]
            WriteIndirectExecutionSetShaderEXT pExecutionSetWrites
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateVideoSessionParametersKHR")]
    Result UpdateVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionParametersKHR")]
            VideoSessionParametersKHRHandle videoSessionParameters,
        [NativeTypeName("const VkVideoSessionParametersUpdateInfoKHR *")]
            VideoSessionParametersUpdateInfoKHR* pUpdateInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_video_queue"],
        ImpliesSets = ["VK_VERSION_1_1+VK_KHR_synchronization2", "VK_VERSION_1_3"]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkUpdateVideoSessionParametersKHR")]
    Result UpdateVideoSessionParametersKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkVideoSessionParametersKHR")]
            VideoSessionParametersKHRHandle videoSessionParameters,
        [NativeTypeName("const VkVideoSessionParametersUpdateInfoKHR *")]
            Ref<VideoSessionParametersUpdateInfoKHR> pUpdateInfo
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkWaitForFences")]
    Result WaitForFences(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint fenceCount,
        [NativeTypeName("const VkFence *")] FenceHandle* pFences,
        [NativeTypeName("VkBool32")] uint waitAll,
        [NativeTypeName("uint64_t")] ulong timeout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_0", "VK_VERSION_1_1", "VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.0"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkWaitForFences")]
    Result WaitForFences(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint fenceCount,
        [NativeTypeName("const VkFence *")] Ref<FenceHandle> pFences,
        [NativeTypeName("VkBool32")] uint waitAll,
        [NativeTypeName("uint64_t")] ulong timeout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_present_wait"],
        ImpliesSets = ["VK_KHR_present_id", "VK_KHR_swapchain"]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkWaitForPresentKHR")]
    Result WaitForPresentKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("VkSwapchainKHR")] SwapchainKHRHandle swapchain,
        [NativeTypeName("uint64_t")] ulong presentId,
        [NativeTypeName("uint64_t")] ulong timeout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphores")]
    Result WaitSemaphores(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreWaitInfo *")] SemaphoreWaitInfo* pWaitInfo,
        [NativeTypeName("uint64_t")] ulong timeout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_VERSION_1_2", "VK_VERSION_1_3", "VK_VERSION_1_4"],
        MinVersion = "1.2"
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphores")]
    Result WaitSemaphores(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreWaitInfo *")] Ref<SemaphoreWaitInfo> pWaitInfo,
        [NativeTypeName("uint64_t")] ulong timeout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_timeline_semaphore"],
        ImpliesSets = [
            "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
            "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphoresKHR")]
    Result WaitSemaphoresKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreWaitInfo *")] SemaphoreWaitInfo* pWaitInfo,
        [NativeTypeName("uint64_t")] ulong timeout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_timeline_semaphore"],
        ImpliesSets = [
            "VK_KHR_timeline_semaphore+VK_KHR_get_physical_device_properties2",
            "VK_KHR_timeline_semaphore+VK_VERSION_1_1",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkWaitSemaphoresKHR")]
    Result WaitSemaphoresKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("const VkSemaphoreWaitInfo *")] Ref<SemaphoreWaitInfo> pWaitInfo,
        [NativeTypeName("uint64_t")] ulong timeout
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkWriteAccelerationStructuresPropertiesKHR")]
    Result WriteAccelerationStructuresPropertiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint accelerationStructureCount,
        [NativeTypeName("const VkAccelerationStructureKHR *")]
            AccelerationStructureKHRHandle* pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pData,
        [NativeTypeName("size_t")] nuint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_KHR_acceleration_structure"],
        ImpliesSets = [
            "VK_KHR_deferred_host_operations+VK_VERSION_1_1+VK_EXT_descriptor_indexing+VK_KHR_buffer_device_address",
            "VK_KHR_deferred_host_operations+VK_VERSION_1_2",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkWriteAccelerationStructuresPropertiesKHR")]
    Result WriteAccelerationStructuresPropertiesKHR(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint accelerationStructureCount,
        [NativeTypeName("const VkAccelerationStructureKHR *")]
            Ref<AccelerationStructureKHRHandle> pAccelerationStructures,
        QueryType queryType,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pData,
        [NativeTypeName("size_t")] nuint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [NativeFunction("vulkan", EntryPoint = "vkWriteMicromapsPropertiesEXT")]
    Result WriteMicromapsPropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint micromapCount,
        [NativeTypeName("const VkMicromapEXT *")] MicromapEXTHandle* pMicromaps,
        QueryType queryType,
        [NativeTypeName("size_t")] nuint dataSize,
        void* pData,
        [NativeTypeName("size_t")] nuint stride
    );

    [SupportedApiProfile(
        "vulkan",
        ["VK_EXT_opacity_micromap"],
        ImpliesSets = [
            "VK_KHR_acceleration_structure+VK_KHR_synchronization2",
            "VK_KHR_acceleration_structure+VK_VERSION_1_3",
        ]
    )]
    [Transformed]
    [NativeFunction("vulkan", EntryPoint = "vkWriteMicromapsPropertiesEXT")]
    Result WriteMicromapsPropertiesEXT(
        [NativeTypeName("VkDevice")] DeviceHandle device,
        [NativeTypeName("uint32_t")] uint micromapCount,
        [NativeTypeName("const VkMicromapEXT *")] Ref<MicromapEXTHandle> pMicromaps,
        QueryType queryType,
        [NativeTypeName("size_t")] nuint dataSize,
        Ref pData,
        [NativeTypeName("size_t")] nuint stride
    );
}
