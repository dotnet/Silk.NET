<Project InitialTargets="SilkGenerateILLinkSubs">
    <ItemGroup>
        <ProjectReference Include="$(MSBuildThisFileDirectory)..\..\src\Core\Silk.NET.Core\Silk.NET.Core.csproj" />
        <ProjectReference Include="$(MSBuildThisFileDirectory)..\..\src\Core\Silk.NET.SilkTouch\Silk.NET.SilkTouch.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false"/>
        <Compile Include="$(MSBuildThisFileDirectory)..\..\src\Core\Silk.NET.Core\Attributes\RequiresLocationAttribute.cs" />
    </ItemGroup>
    <PropertyGroup>
        <SilkPublicApiExempt>true</SilkPublicApiExempt>
    </PropertyGroup>
    <Import Project="common.props" />
    <PropertyGroup>
        <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);SilkGenerateILLinkTargets</TargetsForTfmSpecificContentInPackage>
    </PropertyGroup>
    <Target Name="SilkGenerateILLinkTargets" Condition="$(TargetFramework.Contains('net6')) or $(TargetFramework.Contains('net7')) or $(TargetFramework.Contains('net8'))">
        <GetNuGetShortFolderName TargetFrameworkMoniker="$(TargetFrameworkMoniker)" TargetPlatformMoniker="$(TargetPlatformMoniker)">
            <Output TaskParameter="NuGetShortFolderName" PropertyName="_SilkNuGetShortFolderName" />
        </GetNuGetShortFolderName>
        <PropertyGroup>
            <SilkGeneratedTargetPath>$(IntermediateOutputPath)$(TargetFramework)/$(PackageId).targets</SilkGeneratedTargetPath>
            <SilkGeneratedPropPrefix>_$([System.String]::Copy('$(PackageId)').Replace('.', '_'))_</SilkGeneratedPropPrefix>
        </PropertyGroup>
        <ItemGroup Condition="'@(SilkPInvokeOverride)' != ''">
            <SilkGeneratedTargetLine Include="&lt;Project InitialTargets=&quot;$(SilkGeneratedPropPrefix)ConfigureSilkTouchRuntime&quot;&gt;" />
            <SilkGeneratedTargetLine Include="&lt;Target Name=&quot;$(SilkGeneratedPropPrefix)ConfigureSilkTouchRuntime&quot;&gt;" />
            <SilkGeneratedTargetLine Include="&lt;PropertyGroup&gt;" />
            <SilkGeneratedTargetLine Include="&lt;$(SilkGeneratedPropPrefix)ExternalPInvokes&gt;%40(SilkExternalPInvoke)&lt;/$(SilkGeneratedPropPrefix)ExternalPInvokes&gt;" />
            <SilkGeneratedTargetLine Include="&lt;$(SilkGeneratedPropPrefix)InternalPInvokes&gt;%40(SilkInternalPInvoke)&lt;/$(SilkGeneratedPropPrefix)InternalPInvokes&gt;" />
            <SilkGeneratedTargetLine Include="&lt;$(SilkGeneratedPropPrefix)Opts&gt;%40(RuntimeHostConfigurationOption)&lt;/$(SilkGeneratedPropPrefix)Opts&gt;" />
            <SilkGeneratedTargetLine Include="&lt;/PropertyGroup&gt;" />
            <SilkGeneratedTargetLine Include="&lt;ItemGroup&gt;" />
            <SilkGeneratedTargetLine Include="&lt;RuntimeHostConfigurationOption Condition=&quot;(!%24([System.String]::Copy('%24($(SilkGeneratedPropPrefix)ExternalPInvokes)').Contains('%(SilkPInvokeOverride.SilkClass)')) and !%24([System.String]::Copy('%24($(SilkGeneratedPropPrefix)Opts)').Contains('$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', '_').ToUpper())_ENABLE_PINVOKE_OVERRIDE_%(SilkPInvokeOverride.Identity)'))) and (('%24(SilkEnableStaticLinking)' == 'true') or %24([System.String]::Copy('%24($(SilkGeneratedPropPrefix)InternalPInvokes)').ToLower().Contains('%(SilkPInvokeOverride.SilkClass)')) or %(SilkPInvokeOverride.DownstreamCondition))&quot; Include=&quot;$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', '_').ToUpper())_ENABLE_PINVOKE_OVERRIDE_%(SilkPInvokeOverride.Identity)&quot; Value=&quot;true&quot; Trim=&quot;true&quot; /&gt;" />
            <SilkGeneratedTargetLine Include="&lt;RuntimeHostConfigurationOption Condition=&quot;(!%24([System.String]::Copy('%24($(SilkGeneratedPropPrefix)Opts)').Contains('$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', '_').ToUpper())_ENABLE_PINVOKE_OVERRIDE_%(SilkPInvokeOverride.Identity)'))) and (!(('%24(SilkEnableStaticLinking)' == 'true') or %24([System.String]::Copy('%24($(SilkGeneratedPropPrefix)InternalPInvokes)').ToLower().Contains('%(SilkPInvokeOverride.SilkClass)')) or %(SilkPInvokeOverride.DownstreamCondition)))&quot; Include=&quot;$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', '_').ToUpper())_ENABLE_PINVOKE_OVERRIDE_%(SilkPInvokeOverride.Identity)&quot; Value=&quot;false&quot; Trim=&quot;true&quot; /&gt;" />
            <SilkGeneratedTargetLine Include="&lt;/ItemGroup&gt;" />
            <SilkGeneratedTargetLine Include="&lt;/Target&gt;" />
            <SilkGeneratedTargetLine Include="&lt;/Project&gt;" />
            <SilkGeneratedTargetFile Include="$(SilkGeneratedTargetPath)" />
        </ItemGroup>
        <WriteLinesToFile File="@(SilkGeneratedTargetFile)" Lines="@(SilkGeneratedTargetLine)" Overwrite="true" Encoding="UTF-8" Condition="'@(SilkPInvokeOverride)' != ''" />
        <ItemGroup Condition="'@(SilkPInvokeOverride)' != ''">
            <TfmSpecificPackageFile Include="@(SilkGeneratedTargetFile)" Link="build/$(_SilkNuGetShortFolderName)/$(PackageId).targets" Pack="true" PackagePath="build/$(_SilkNuGetShortFolderName)/$(PackageId).targets" />
            <TfmSpecificPackageFile Include="@(SilkGeneratedTargetFile)" Link="buildTransitive/$(_SilkNuGetShortFolderName)/$(PackageId).targets" Pack="true" PackagePath="buildTransitive/$(_SilkNuGetShortFolderName)/$(PackageId).targets" />
        </ItemGroup>
    </Target>
    <Target Name="SilkGenerateILLinkSubs" Condition="$(TargetFramework.Contains('net6')) or $(TargetFramework.Contains('net7')) or $(TargetFramework.Contains('net8'))">
        <PropertyGroup>
            <SilkGeneratedILLinkPath>$(IntermediateOutputPath)$(TargetFramework)/ILLink.Substitutions.xml</SilkGeneratedILLinkPath>
        </PropertyGroup>
        <ItemGroup Condition="'@(SilkPInvokeOverride)' != ''">
            <SilkGeneratedILLinkLine Include="&lt;linker&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;assembly fullname=&quot;$(PackageId)&quot;&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;type fullname=&quot;SilkTouchRuntimeConfiguration&quot;&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;method signature=&quot;System.Boolean get_HasLinkTimeSubstitutions()&quot; body=&quot;stub&quot; value=&quot;true&quot; /&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;method signature=&quot;System.Boolean get_$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', ''))PInvokeOverride%(SilkPInvokeOverride.Identity)()&quot; body=&quot;stub&quot; value=&quot;true&quot; feature=&quot;$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', '_').ToUpper())_ENABLE_PINVOKE_OVERRIDE_%(SilkPInvokeOverride.Identity)&quot; featurevalue=&quot;true&quot; /&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;method signature=&quot;System.Boolean get_$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', ''))PInvokeOverride%(SilkPInvokeOverride.Identity)()&quot; body=&quot;stub&quot; value=&quot;false&quot; feature=&quot;$([System.String]::Copy('%(SilkPInvokeOverride.SilkClass)').Replace('.', '_').ToUpper())_ENABLE_PINVOKE_OVERRIDE_%(SilkPInvokeOverride.Identity)&quot; featurevalue=&quot;false&quot; /&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;/type&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;/assembly&gt;" />
            <SilkGeneratedILLinkLine Include="&lt;/linker&gt;" />
            <SilkGeneratedILLinkFile Include="$(SilkGeneratedILLinkPath)" />
        </ItemGroup>
        <WriteLinesToFile File="@(SilkGeneratedILLinkFile)" Lines="@(SilkGeneratedILLinkLine)" Overwrite="true" Encoding="UTF-8" Condition="'@(SilkPInvokeOverride)' != ''" />
        <ItemGroup Condition="'@(SilkPInvokeOverride)' != ''">
            <EmbeddedResource Include="@(SilkGeneratedILLinkFile)" Link="Properties/ILLink.Substitutions.xml" LogicalName="ILLink.Substitutions.xml" />
        </ItemGroup>
    </Target>
</Project>
