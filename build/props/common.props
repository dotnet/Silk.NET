<!--suppress CheckTagEmptyBody -->
<Project InitialTargets="SilkAddIcon;SilkGenerateNuGetReadme;SilkAddDateTime;SilkCreatePublicApi">
    <!-- Presets for metapackages and native packages -->
    <PropertyGroup Condition="'$(SilkMetapackage)' == 'true' or '$(SilkNativePackage)' == 'true'">
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <SilkSourceLinkExempt>true</SilkSourceLinkExempt>
        <SilkPublicApiExempt>true</SilkPublicApiExempt>
    </PropertyGroup>
    <!-- Core properties -->
    <PropertyGroup>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <LangVersion>10</LangVersion>
        <Authors>.NET Foundation and Contributors</Authors>
        <PackageReleaseNotes>
            Silk.NET Mobile Update

            - Added production-ready iOS support - wrap your Program.cs/IView code with SilkMobile.RunApp and run as-is!
            - Added the ability to programmatically focus a window using IWindow.Focus(). (thanks @mayatskiy/@Arugin)
            - Added a helper for custom IO in Assimp.
            - Added a ToString implementation for Vulkan handles to display the handle value.
            - Added some missing Flags attributes to enums, reducing the number of bitwise operation warnings on enums.
            - Updated to Vulkan 1.3.300.
            - Updated to OpenXR 1.1.42.
            - Updated to SDL 2.30.8.
            - Updated to MoltenVK 1.2.11.
            - Updated to DXVK 2.4.1.
            - Updated to OpenAL Soft 1.23.1.
            - Updated to shaderc 2024.3.
            - Updated to Assimp 5.4.1.
            - Updated to latest OpenGL specifications.
            - Updated to latest OpenCL specifications.
            - Updated to ImGui.NET 1.90.8.1. (thanks @matt-edmondson)
            - Updated DirectX/Windows bindings to 10.0.26100.0.
            - Updated WebGPU/wgpu/dawn bindings.
            - Updated SPIR-V Reflect, Cross, Headers, and Tools to their latest Vulkan 1.3.296 version.
            - Updated ANGLE binaries for macOS. (thanks @ramezgerges/Uno Platform)
            - Improved native binary packaging. (thanks @joskuijpers, @alexrp)
            - Fixed Android 14/API 34 RECEIVER_EXPORTED/RECEIVER_NOT_EXPORTED errors.
            - Fixed WGPU binaries being out of sync with the bindings API surface and crashing as a result.
            - Fixed MultiNativeContext reporting present symbols as missing, affecting WGL, OpenAL, and Vulkan in some cases.
            - Fixed native packages not correctly applying when being referenced transitively on .NET Framework and .NET 6+ mobile.
            - Fixed windows being stuck when minimising where a recursive call to DoEvents in callbacks is used.
            - Fixed changes to the standard cursor type not being accurately reflected on the GLFW backend.
            - Fixed Silk.NET.Core not checking its own directory for native binaries.
            - Fixed an ImGui memory leak. (thanks @rbertels)
            - Fixed being unable to obtain Wayland window pointers when GLFW is compiled with both X11 and Wayland.
            - Miscellaneous bugfixes and improvements.

            Special thanks to Stride for sponsoring this 2.X update and our contributors for their contributions and continued interest in the project.
            The Silk.NET team are hard at work on 3.0, with 2.X updates continuing with the support of contributors and sponsors.
            Learn more at https://github.com/dotnet/Silk.NET
        </PackageReleaseNotes>
        <PackageTags Condition="'$(PackageTags)' == ''">OpenCL;OpenGL;OpenAL;OpenGLES;GLES;Vulkan;Assimp;DirectX;GLFW;SDL;Windowing;Input;Gamepad;Joystick;Keyboard;Mouse;SilkTouch;Source;Generator;C#;F#;.NET;DotNet;Mono;Vector;Math;Maths;Numerics;Game;Graphics;Compute;Audio;Sound;Engine;Silk;Silk.NET;Slim.NET;ElgarTK;GPU;Sharp;Science;Scientific;Visualization;Visual;Audiovisual;Windows;macOS;Linux;Android;Bindings;OSX;Wrapper;Native</PackageTags>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <PackageOutputPath>$(MSBuildThisFileDirectory)/../output_packages</PackageOutputPath>
        <RepositoryUrl>https://github.com/dotnet/Silk.NET.git</RepositoryUrl>
        <RepositoryType>Git</RepositoryType>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <VersionPrefix>2.22.0</VersionPrefix>
        <VersionSuffix Condition="'$(VersionSuffix)' == ''"></VersionSuffix>
        <Description Condition="'$(Description)' == ''">
            Silk.NET is a high-speed, advanced library, providing bindings to popular low-level APIs such as OpenGL, OpenCL, OpenAL, OpenXR, GLFW, SDL, Vulkan, Assimp, and DirectX.
        </Description>
        <CheckEolWorkloads>false</CheckEolWorkloads>
    </PropertyGroup>
    <PropertyGroup Condition="$(TargetFramework.StartsWith('net6')) or $(TargetFramework.StartsWith('net7')) or $(TargetFramework.StartsWith('net8'))">
        <IsTrimmable>true</IsTrimmable>
        <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
        <EnableAotAnalyzer>true</EnableAotAnalyzer>
        <EnableSingleFileAnalyzer>true</EnableSingleFileAnalyzer>
        <TrimMode>full</TrimMode>
    </PropertyGroup>
    <!-- Date/time based versioning (mainly used by natives) -->
    <Target Name="SilkAddDateTime" Condition="'$(SilkGitDirForVersion)' != '' and Exists('$(SilkGitDirForVersion)/.git')">
        <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
            <SilkGitDateTimeFormat>%25%25cI</SilkGitDateTimeFormat>
        </PropertyGroup>
        <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
            <SilkGitDateTimeFormat>%25cI</SilkGitDateTimeFormat>
        </PropertyGroup>
        <Exec ConsoleToMSBuild="True"
              Command="git show -s &quot;--format=$(SilkGitDateTimeFormat)&quot;"
              WorkingDirectory="$(SilkGitDirForVersion)">
            <Output TaskParameter="ConsoleOutput" PropertyName="_SilkGitIdt" />
        </Exec>
        <PropertyGroup>
            <PackageVersion>$([System.DateTime]::Parse($(_SilkGitIdt)).ToUniversalTime().ToString(yyyy.MM.dd))</PackageVersion>
        </PropertyGroup>
    </Target>
    <!-- SourceLink -->
    <PropertyGroup Condition="'$(SilkSourceLinkExempt)' == ''">
        <DebugType>portable</DebugType>
        <EmbedAllSources>true</EmbedAllSources>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>
    <ItemGroup Condition="'$(SilkSourceLinkExempt)' == ''">
        <PackageReference Include="DotNet.ReproducibleBuilds" Version="1.1.1" PrivateAssets="All"/>
        <PackageReference Include="DotNet.ReproducibleBuilds.Isolated" Version="1.1.1" PrivateAssets="All"/>
    </ItemGroup>
    <!-- Nuget Icon - done as a target so it doesn't appear in the IDE -->
    <Target Name="SilkAddIcon" Condition="'$(SilkIconExempt)' == ''">
        <ItemGroup>
            <None Include="$(MSBuildThisFileDirectory)../../documentation/readme/silkdotnet_v3.png"
                  Pack="true"
                  PackagePath="\" />
        </ItemGroup>
        <PropertyGroup>
            <PackageIcon>silkdotnet_v3.png</PackageIcon>
        </PropertyGroup>
    </Target>
    <!-- NuGet README -->
    <Target Name="SilkGenerateNuGetReadme" Condition="'$(SilkReadmeExempt)' == ''">
        <PropertyGroup>
            <SilkReadme>$([System.IO.File]::ReadAllText("$(MSBuildThisFileDirectory)../../README.md"))</SilkReadme>
            <SilkReadme>$([System.String]::Copy($(SilkReadme))
                .Replace('&lt;!-- Begin exclude from NuGet readme. --&gt;','&lt;!--')
                .Replace('&lt;!-- End exclude from NuGet readme. --&gt;','--&gt;')
                .Replace('&lt;!-- Begin include in NuGet readme.','')
                .Replace('End include in NuGet readme. --&gt;','')
                .Replace('&lt;h1 align=&quot;center&quot;&gt;', '# ')
                .Replace('&lt;h2 align=&quot;center&quot;&gt;', '# ')
                .Replace('&lt;/h1&gt;', '').Replace('&lt;/h2&gt;', '')
                .Replace('&lt;br /&gt;', '%0a%0a').Replace('&lt;br/&gt;', '%0a%0a')
                .Replace('&lt;div&gt;', '').Replace('&lt;/div&gt;', '')
                .Replace('&lt;a&gt;', '').Replace('&lt;/a&gt;', ''))
            </SilkReadme>
            <SilkReadmePath>$(IntermediateOutputPath)$(TargetFramework)/README.md</SilkReadmePath>
        </PropertyGroup>
        <PropertyGroup Condition="'$(SilkDescription)' != ''">
            <Description>$(SilkDescription) $(Description)</Description>
            <SilkExtendedDescription>$(SilkDescription) $(SilkExtendedDescription)%0a%0a</SilkExtendedDescription>
            <SilkReadme>$([System.String]::Copy($(SilkReadme))
                .Replace('&lt;!-- Package description inserted here automatically. --&gt;',
                '# About This Package%0a%0a$(SilkExtendedDescription)'))
            </SilkReadme>
        </PropertyGroup>
        <ItemGroup>
            <SilkReadmeLines Include="$(SilkReadme)" />
            <SilkReadmeGenerated Include="$(SilkReadmePath)" />
        </ItemGroup>
        <WriteLinesToFile File="@(SilkReadmeGenerated)"
                          Lines="@(SilkReadmeLines)"
                          Overwrite="true"
                          Encoding="UTF-8" />
        <PropertyGroup>
            <PackageReadmeFile>README.md</PackageReadmeFile>
        </PropertyGroup>
        <ItemGroup>
            <None Include="$(SilkReadmePath)" Pack="true" PackagePath="\" />
        </ItemGroup>
    </Target>
    <!-- Public API Analyzer -->
    <ItemGroup Condition="'$(SilkPublicApiExempt)' != 'true'">
        <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.4" PrivateAssets="All" />
    </ItemGroup>
    <ItemGroup Condition="'$(SilkPublicApiExempt)' != 'true' and '$(TargetFramework)' != ''">
        <AdditionalFiles Include="PublicAPI/$(TargetFramework)/PublicAPI.Shipped.txt" />
        <AdditionalFiles Include="PublicAPI/$(TargetFramework)/PublicAPI.Unshipped.txt" />
    </ItemGroup>
    <Target Name="SilkCreatePublicApi" Condition="'$(SilkPublicApiExempt)' != 'true' and '$(TargetFramework)' != ''">
        <ItemGroup>
            <SilkNewPublicAPILines Include="#nullable enable" />
        </ItemGroup>
        <MakeDir Directories="PublicAPI" Condition="!Exists('PublicAPI')" />
        <MakeDir Directories="PublicAPI/$(TargetFramework)" Condition="!Exists('PublicAPI/$(TargetFramework)')" />
        <WriteLinesToFile File="PublicAPI/$(TargetFramework)/PublicAPI.Shipped.txt"
                          Lines="@(SilkNewPublicAPILines)"
                          Condition="!Exists('PublicAPI/$(TargetFramework)/PublicAPI.Shipped.txt')" />
        <WriteLinesToFile File="PublicAPI/$(TargetFramework)/PublicAPI.Unshipped.txt"
                          Lines="@(SilkNewPublicAPILines)"
                          Condition="!Exists('PublicAPI/$(TargetFramework)/PublicAPI.Unshipped.txt')" />
    </Target>
</Project>
